{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PolyFEM","text":"<p>A polyvalent C++ and Python FEM library.</p> <p></p> <p>PolyFEM is a simple C++ and Python finite element library. We provide a wide set of common PDEs including:</p> <ul> <li>Laplace</li> <li>Helmholtz</li> <li>Linear Elasticity</li> <li>St. Venant\u2013Kirchhoff Elasticity</li> <li>Neo-Hookean Elasticity</li> <li>Stokes</li> <li>Navier\u2013Stokes</li> </ul> <p>PolyFEM simplicity lies in the interface: just pick a problem, select some boundary condition, and solve. No need to construct complicated function spaces, or learn a new scripting language: everything is set-up trough a JSON interface or through the Setting class in python.</p> <p>For instance, PolyFEM seamlessly integrates quad/hexes and tri/tets of order up to 4, and integrates state-of-the-art techniques such as the adaptive \\(p\\)-refinement presented in \u201cDecoupling Simulation Accuracy from Mesh Quality\u201d or the spline and polygonal bases in \u201cPoly-Spline Finite-Element Method\u201d.</p> <p>The library is actively used in our research so expect frequent updates, fixes, and new features!</p>"},{"location":"#news","title":"News","text":"<ul> <li>New \u201cselection\u201d interface to set boundary conditions and body ids.</li> <li>Added support for multi-material simulations.</li> <li>PolyFEM supports time-dependent fluid simulations!</li> <li>PolyFEM supports contacts using the IPC Toolkit.</li> <li>We support FEBio (*.feb) files.</li> <li>We finally extracted the solvers from PolyFEM. You can now use the wrappers independently, check the PolySolve repo.</li> <li>PolyFEM meshplot, igl and wildmeshing are presented at a Eurographics course.</li> <li>Bindings v0.5.2 with a new more pythonic interface, support for functions of the right-hand side and exact solution.</li> <li>PolyFEM is being used in biology! Check the paper or the project page!</li> <li>PolyFEM meshplot, igl and wildmeshing are presented at a SIGGRAPH course (07/30/2019).</li> <li>PolyFEM is now triangle and tetgen free. Stay tuned for the release of v0.5 in python with a new interface to high-order meshes and meshplot for the fast 3D plots!</li> <li>PolyFEM has been used in \u201cA Large Scale Comparison of Tetrahedral and Hexahedral Elements for Finite Element Analysis\u201d! Check the interactive plots!</li> <li>PolyFEM now supports high-order geometric maps! Check the SIGGRAPH paper \u201cTriWild: Robust Triangulation with Curve Constraints\u201d for more details!</li> <li>PolyFEM has a python interface!</li> <li>PolyFEM can do adaptive a priori \\(p\\)-refinement! Check the SIGGRAPH paper \u201cDecoupling Simulation Accuracy from Mesh Quality\u201d for more details!</li> </ul>"},{"location":"#polyfem-in-c","title":"PolyFEM in C++","text":"<p>For more details refer to the C++ section</p>"},{"location":"#compilation","title":"Compilation","text":"<p>All the C++ dependencies required to build the code are included. It should work on Windows, macOS, and Linux, and it should build out-of-the-box with CMake:</p> <pre><code>mkdir build\ncd build\ncmake ..\nmake -j4\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>The main executable, <code>./PolyFEM_bin</code>, can be called as a command-line interface. Simply run:</p> <pre><code>./PolyFEM_bin --help\n</code></pre>"},{"location":"#polyfem-in-python","title":"PolyFEM in Python","text":"<p>For more details refer to the Python section</p>"},{"location":"#installation","title":"Installation","text":"<p>We are making efforts to provide a simple python interface to Polyfem.</p> <p>For doing so, we are maintaining a conda package that can be easily installed https://anaconda.org/conda-forge/polyfempy.</p> <pre><code>conda install -c conda-forge polyfempy\n</code></pre>"},{"location":"#usage_1","title":"Usage","text":"<p>Simply import the package!</p> <pre><code>import polyfempy\n</code></pre>"},{"location":"#polysolve","title":"PolySolve","text":"<p>PolyFEM heavily depends on external libraries for solving linear systems. If you need a linear system wrapper based on Eigen (but do not need the finite element setup) you use PolySolve.</p>"},{"location":"#citation","title":"Citation","text":"<p>If you use PolyFEM in your project, please consider citing our work:</p> <pre><code>@misc{polyfem,\nauthor = {Teseo Schneider and J\u00e9r\u00e9mie Dumas and Xifeng Gao and Denis Zorin and Daniele Panozzo},\ntitle = {{PolyFEM}},\nhowpublished = \"\\url{https://polyfem.github.io/}\",\nyear = {2019},\n}\n</code></pre> <pre><code>@article{Schneider:2019:PFM,\nauthor = {Schneider, Teseo and Dumas, J{\\'e}r{\\'e}mie and Gao, Xifeng and Botsch, Mario and Panozzo, Daniele and Zorin, Denis},\ntitle = {Poly-Spline Finite-Element Method},\njournal = {ACM Trans. Graph.},\nvolume = {38},\nnumber = {3},\nmonth = mar,\nyear = {2019},\nurl = {http://doi.acm.org/10.1145/3313797},\npublisher = {ACM}\n}\n</code></pre> <pre><code>@article{Schneider:2018:DSA,\nauthor = {Teseo Schneider and Yixin Hu and J\u00e9r\u00e9mie Dumas and Xifeng Gao and Daniele Panozzo and Denis Zorin},\njournal = {ACM Transactions on Graphics},\nlink = {},\nmonth = {10},\nnumber = {6},\npublisher = {Association for Computing Machinery (ACM)},\ntitle = {Decoupling Simulation Accuracy from Mesh Quality},\nvolume = {37},\nyear = {2018}\n}\n</code></pre>"},{"location":"#acknowledgments-funding","title":"Acknowledgments &amp; Funding","text":"<p>The software is being developed in the Geometric Computing Lab at NYU Courant Institute of Mathematical Sciences and the University of Victoria, Canada.</p> <p>This work was partially supported by:</p> <ul> <li>the NSF CAREER award 1652515</li> <li>the NSF grant IIS-1320635</li> <li>the NSF grant DMS-1436591</li> <li>the NSF grant 1835712</li> <li>the SNSF grant P2TIP2_175859</li> <li>the NSERC grant RGPIN-2021-03707</li> <li>the NSERC grant DGECR-2021-00461</li> <li>Adobe Research</li> <li>nTopology</li> </ul>"},{"location":"#license","title":"License","text":"<p>The code of PolyFEM itself is licensed under MIT License. However, please be mindful of third-party libraries which are used by PolyFEM and may be available under a different license.</p>"},{"location":"_json_spec/","title":"json spec","text":"<p><code>/</code> (<code>object</code>)</p> <p><pre><code>/\n</code></pre> Description Root of the configuration file. Required</p> <code>/geometry</code> (<code>list</code>) <p><pre><code>/geometry\n</code></pre> Description List of geometry objects.</p> <code>/geometry/*</code> <pre><code>/geometry/*\n</code></pre> <code>/geometry/*</code> (<code>object</code>)mesh_arrayplanegroundmesh_sequence <p>Description Each geometry object stores a mesh, a set of transformations applied to it after loading, and a set of selections, which can be used to specify boundary conditions, materials, optimization parameters and other quantities that can be associated with a part of an object. Required</p> <code>/geometry/*/mesh</code> (<code>file</code>) <p><pre><code>/geometry/*/mesh\n</code></pre> Description Path of the mesh file to load.</p> <p>Extensions: <code>['.obj', '.msh', '.stl', '.ply', '.mesh']</code></p> <p>Optional</p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre> Description Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/extract</code> (<code>string</code>) <p><pre><code>/geometry/*/extract\n</code></pre> Description Used to extract stuff from the mesh. Eg extract surface extracts the surface from a tet mesh.</p> <p>Default: <code>'volume'</code></p> <p>Options: <code>['volume', 'edges', 'points', 'surface']</code></p> <code>/geometry/*/unit</code> (<code>string</code>) <p><pre><code>/geometry/*/unit\n</code></pre> Description Units of the geometric model.</p> <p>Default: <code>''</code></p> <code>/geometry/*/transformation</code> (<code>object</code>) <p><pre><code>/geometry/*/transformation\n</code></pre> Description Geometric transformations applied to the geometry after loading it.</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/transformation/translation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/translation\n</code></pre> Description Translate (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/translation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/translation/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/rotation\n</code></pre> Description Rotate, in 2D, one number, the rotation angle, in 3D, three or four Euler angles, axis+angle, or a unit quaternion. Depends on rotation mode.</p> <code>/geometry/*/transformation/rotation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/rotation/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation_mode</code> (<code>string</code>) <p><pre><code>/geometry/*/transformation/rotation_mode\n</code></pre> Description Type of rotation, supported are any permutation of [xyz]+, axis_angle, quaternion, or rotation_vector.</p> <p>Default: <code>'xyz'</code></p> <code>/geometry/*/transformation/scale</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/scale\n</code></pre> Description Scale by specified factors along axes (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/scale/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/scale/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/dimensions</code> <pre><code>/geometry/*/transformation/dimensions\n</code></pre> <code>/geometry/*/transformation/dimensions</code> (<code>float</code>)<code>/geometry/*/transformation/dimensions</code> (<code>list</code>) <p>Description Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <p>Default: <code>1</code></p> <p>Description Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <code>/geometry/*/transformation/dimensions/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/dimensions/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/volume_selection</code> <pre><code>/geometry/*/volume_selection\n</code></pre> <code>/geometry/*/volume_selection</code> (<code>int</code>)<code>/geometry/*/volume_selection</code> (<code>file</code>)<code>/geometry/*/volume_selection</code> (<code>object</code>)<code>/geometry/*/volume_selection</code> (<code>list</code>) <p>Description Assign specified ID to all elements of the geometry.</p> <p>Description Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p>Description Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/volume_selection/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/id_offset\n</code></pre> Description Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>0</code></p> <p>Description List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/volume_selection/*</code> <pre><code>/geometry/*/volume_selection/*\n</code></pre> <code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>) <p>Description Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/center\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/center/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p1\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p1/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p2\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p2/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/point\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/point/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/normal\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/normal/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/axis</code> <pre><code>/geometry/*/volume_selection/*/axis\n</code></pre> <code>/geometry/*/volume_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/volume_selection/*/axis</code> (<code>string</code>) <p>Description FIXME: Missing documentation in the specification.</p> <p>Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/position\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <code>/geometry/*/surface_selection</code> <pre><code>/geometry/*/surface_selection\n</code></pre> <code>/geometry/*/surface_selection</code> (<code>int</code>)<code>/geometry/*/surface_selection</code> (<code>file</code>)<code>/geometry/*/surface_selection</code> (<code>list</code>) <p>Description Assign specified ID to all elements of the geometry.</p> <p>Description Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p>Description List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/surface_selection/*</code> <pre><code>/geometry/*/surface_selection/*\n</code></pre> <code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>) <p>Description Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/center\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/center/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p1\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p1/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p2\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p2/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/point\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/point/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/normal\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/normal/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/axis</code> <pre><code>/geometry/*/surface_selection/*/axis\n</code></pre> <code>/geometry/*/surface_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/surface_selection/*/axis</code> (<code>string</code>) <p>Description FIXME: Missing documentation in the specification.</p> <p>Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/position\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/threshold\n</code></pre> Description Threshold for box side selection.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id_offset\n</code></pre> Description ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/curve_selection</code> (<code>object</code>) <p><pre><code>/geometry/*/curve_selection\n</code></pre> Description Selection of curves</p> <p>Default: <code>None</code></p> <code>/geometry/*/point_selection</code> <pre><code>/geometry/*/point_selection\n</code></pre> <code>/geometry/*/point_selection</code> (<code>int</code>)<code>/geometry/*/point_selection</code> (<code>file</code>)<code>/geometry/*/point_selection</code> (<code>list</code>) <p>Description Assign specified ID to all elements of the geometry.</p> <p>Description Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p>Description List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/point_selection/*</code> <pre><code>/geometry/*/point_selection/*\n</code></pre> <code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>) <p>Description Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/box/*/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/center\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/center/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p1\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p1/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p2\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p2/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/point\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/point/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/normal\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/normal/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/axis</code> <pre><code>/geometry/*/point_selection/*/axis\n</code></pre> <code>/geometry/*/point_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/point_selection/*/axis</code> (<code>string</code>) <p>Description FIXME: Missing documentation in the specification.</p> <p>Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/position\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/threshold\n</code></pre> Description Threshold for box side selection.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id_offset\n</code></pre> Description ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/n_refs</code> (<code>int</code>) <p><pre><code>/geometry/*/n_refs\n</code></pre> Description number of uniform refinements</p> <p>Default: <code>0</code></p> <code>/geometry/*/advanced</code> (<code>object</code>) <p><pre><code>/geometry/*/advanced\n</code></pre> Description Advanced options for geometry</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/advanced/normalize_mesh</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/normalize_mesh\n</code></pre> Description Rescale the mesh to it fits in the biunit cube</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/force_linear_geometry</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/force_linear_geometry\n</code></pre> Description Discard high-order nodes for curved geometries</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/refinement_location</code> (<code>float</code>) <p><pre><code>/geometry/*/advanced/refinement_location\n</code></pre> Description parametric location of the refinement</p> <p>Default: <code>0.5</code></p> <code>/geometry/*/advanced/min_component</code> (<code>int</code>) <p><pre><code>/geometry/*/advanced/min_component\n</code></pre> Description Size of the minimum component for collision</p> <p>Default: <code>-1</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre> Description Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre> Description The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: mesh_array Description Each geometry object stores a mesh, a set of transformations applied to it after loading, and a set of selections, which can be used to specify boundary conditions, materials, optimization parameters and other quantities that can be associated with a part of an object. Required</p> <code>/geometry/*/mesh</code> (<code>file</code>) <p><pre><code>/geometry/*/mesh\n</code></pre> Description Path of the mesh file to load.</p> <p>Extensions: <code>['.obj', '.msh', '.stl', '.ply', '.mesh']</code></p> <code>/geometry/*/array</code> (<code>object</code>) <p><pre><code>/geometry/*/array\n</code></pre> Description Array of meshes Required</p> <code>/geometry/*/array/offset</code> (<code>float</code>) <p><pre><code>/geometry/*/array/offset\n</code></pre> Description Offset of the mesh in the array.</p> <code>/geometry/*/array/size</code> (<code>list</code>) <p><pre><code>/geometry/*/array/size\n</code></pre> Description Size of the array (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/array/size/*</code> (<code>int</code>) <p><pre><code>/geometry/*/array/size/*\n</code></pre> Description Size of the array (two entries for 2D problems or three entries for 3D problems).</p> <p>Range: <code>[1, inf]</code></p> <p>Optional</p> <code>/geometry/*/array/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/array/relative\n</code></pre> Description Is the offset value relative to the mesh\u2019s dimensions.</p> <p>Default: <code>False</code></p> <p>Optional</p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre> Description Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/extract</code> (<code>string</code>) <p><pre><code>/geometry/*/extract\n</code></pre> Description Used to extract stuff from the mesh. Eg extract surface extracts the surface from a tet mesh.</p> <p>Default: <code>'volume'</code></p> <p>Options: <code>['volume', 'edges', 'points', 'surface']</code></p> <code>/geometry/*/unit</code> (<code>string</code>) <p><pre><code>/geometry/*/unit\n</code></pre> Description Units of the geometric model.</p> <p>Default: <code>''</code></p> <code>/geometry/*/transformation</code> (<code>object</code>) <p><pre><code>/geometry/*/transformation\n</code></pre> Description Geometric transformations applied to the geometry after loading it.</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/transformation/translation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/translation\n</code></pre> Description Translate (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/translation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/translation/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/rotation\n</code></pre> Description Rotate, in 2D, one number, the rotation angle, in 3D, three or four Euler angles, axis+angle, or a unit quaternion. Depends on rotation mode.</p> <code>/geometry/*/transformation/rotation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/rotation/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation_mode</code> (<code>string</code>) <p><pre><code>/geometry/*/transformation/rotation_mode\n</code></pre> Description Type of rotation, supported are any permutation of [xyz]+, axis_angle, quaternion, or rotation_vector.</p> <p>Default: <code>'xyz'</code></p> <code>/geometry/*/transformation/scale</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/scale\n</code></pre> Description Scale by specified factors along axes (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/scale/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/scale/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/dimensions</code> <pre><code>/geometry/*/transformation/dimensions\n</code></pre> <code>/geometry/*/transformation/dimensions</code> (<code>float</code>)<code>/geometry/*/transformation/dimensions</code> (<code>list</code>) <p>Description Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <p>Default: <code>1</code></p> <p>Description Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <code>/geometry/*/transformation/dimensions/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/dimensions/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/volume_selection</code> <pre><code>/geometry/*/volume_selection\n</code></pre> <code>/geometry/*/volume_selection</code> (<code>int</code>)<code>/geometry/*/volume_selection</code> (<code>file</code>)<code>/geometry/*/volume_selection</code> (<code>object</code>)<code>/geometry/*/volume_selection</code> (<code>list</code>) <p>Description Assign specified ID to all elements of the geometry.</p> <p>Description Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p>Description Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/volume_selection/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/id_offset\n</code></pre> Description Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>0</code></p> <p>Description List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/volume_selection/*</code> <pre><code>/geometry/*/volume_selection/*\n</code></pre> <code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>) <p>Description Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/center\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/center/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p1\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p1/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p2\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p2/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/point\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/point/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/normal\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/normal/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/axis</code> <pre><code>/geometry/*/volume_selection/*/axis\n</code></pre> <code>/geometry/*/volume_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/volume_selection/*/axis</code> (<code>string</code>) <p>Description FIXME: Missing documentation in the specification.</p> <p>Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/position\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <code>/geometry/*/surface_selection</code> <pre><code>/geometry/*/surface_selection\n</code></pre> <code>/geometry/*/surface_selection</code> (<code>int</code>)<code>/geometry/*/surface_selection</code> (<code>file</code>)<code>/geometry/*/surface_selection</code> (<code>list</code>) <p>Description Assign specified ID to all elements of the geometry.</p> <p>Description Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p>Description List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/surface_selection/*</code> <pre><code>/geometry/*/surface_selection/*\n</code></pre> <code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>) <p>Description Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/center\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/center/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p1\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p1/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p2\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p2/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/point\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/point/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/normal\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/normal/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/axis</code> <pre><code>/geometry/*/surface_selection/*/axis\n</code></pre> <code>/geometry/*/surface_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/surface_selection/*/axis</code> (<code>string</code>) <p>Description FIXME: Missing documentation in the specification.</p> <p>Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/position\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/surface_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/threshold\n</code></pre> Description Threshold for box side selection.</p> <p>Optional</p> <code>/geometry/*/surface_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id_offset\n</code></pre> Description ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/curve_selection</code> (<code>object</code>) <p><pre><code>/geometry/*/curve_selection\n</code></pre> Description Selection of curves</p> <p>Default: <code>None</code></p> <code>/geometry/*/point_selection</code> <pre><code>/geometry/*/point_selection\n</code></pre> <code>/geometry/*/point_selection</code> (<code>int</code>)<code>/geometry/*/point_selection</code> (<code>file</code>)<code>/geometry/*/point_selection</code> (<code>list</code>) <p>Description Assign specified ID to all elements of the geometry.</p> <p>Description Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p>Description List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/point_selection/*</code> <pre><code>/geometry/*/point_selection/*\n</code></pre> <code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>) <p>Description Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/box/*/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/center\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/center/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p1\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p1/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p2\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p2/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/point\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/point/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/normal\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/normal/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/axis</code> <pre><code>/geometry/*/point_selection/*/axis\n</code></pre> <code>/geometry/*/point_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/point_selection/*/axis</code> (<code>string</code>) <p>Description FIXME: Missing documentation in the specification.</p> <p>Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/position\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p>Description Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> Required</p> <code>/geometry/*/point_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/threshold\n</code></pre> Description Threshold for box side selection.</p> <p>Optional</p> <code>/geometry/*/point_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id_offset\n</code></pre> Description ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/n_refs</code> (<code>int</code>) <p><pre><code>/geometry/*/n_refs\n</code></pre> Description number of uniform refinements</p> <p>Default: <code>0</code></p> <code>/geometry/*/advanced</code> (<code>object</code>) <p><pre><code>/geometry/*/advanced\n</code></pre> Description Advanced options for geometry</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/advanced/normalize_mesh</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/normalize_mesh\n</code></pre> Description Rescale the mesh to it fits in the biunit cube</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/force_linear_geometry</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/force_linear_geometry\n</code></pre> Description Discard high-order nodes for curved geometries</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/refinement_location</code> (<code>float</code>) <p><pre><code>/geometry/*/advanced/refinement_location\n</code></pre> Description parametric location of the refinement</p> <p>Default: <code>0.5</code></p> <code>/geometry/*/advanced/min_component</code> (<code>int</code>) <p><pre><code>/geometry/*/advanced/min_component\n</code></pre> Description Size of the minimum component for collision</p> <p>Default: <code>-1</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre> Description Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre> Description The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: plane Description Plane geometry object defined by its origin and normal. Required</p> <code>/geometry/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/point\n</code></pre> Description Point on plane (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <code>/geometry/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/normal\n</code></pre> Description Normal of plane (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/normal/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Optional</p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre> Description Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre> Description Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre> Description The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: ground Description Plane orthogonal to gravity defined by its height. Required</p> <code>/geometry/*/height</code> (<code>float</code>) <p><pre><code>/geometry/*/height\n</code></pre> Description Height of ground plane.</p> <p>Optional</p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre> Description Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre> Description Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre> Description The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: mesh_sequence Description Mesh sequence. Required</p> <code>/geometry/*/mesh_sequence</code> <pre><code>/geometry/*/mesh_sequence\n</code></pre> <code>/geometry/*/mesh_sequence</code> (<code>string</code>)<code>/geometry/*/mesh_sequence</code> (<code>list</code>) <p>Description Directory (or GLOB) of meshes for the mesh sequence.</p> <p>Description List of mesh files for the mesh sequence.</p> <code>/geometry/*/mesh_sequence/*</code> (<code>file</code>) <p><pre><code>/geometry/*/mesh_sequence/*\n</code></pre> Description Path of the mesh file to load.</p> <p>Extensions: <code>['.obj', '.msh', '.stl', '.ply', '.mesh']</code></p> <code>/geometry/*/fps</code> (<code>int</code>) <p><pre><code>/geometry/*/fps\n</code></pre> Description Frames of the mesh sequence per second.</p> <p>Optional</p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre> Description Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/extract</code> (<code>string</code>) <p><pre><code>/geometry/*/extract\n</code></pre> Description Used to extract stuff from the mesh. Eg extract surface extracts the surface from a tet mesh.</p> <p>Default: <code>'volume'</code></p> <p>Options: <code>['volume', 'edges', 'points', 'surface']</code></p> <code>/geometry/*/unit</code> (<code>string</code>) <p><pre><code>/geometry/*/unit\n</code></pre> Description Units of the geometric model.</p> <p>Default: <code>''</code></p> <code>/geometry/*/transformation</code> (<code>object</code>) <p><pre><code>/geometry/*/transformation\n</code></pre> Description Geometric transformations applied to the geometry after loading it.</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/transformation/translation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/translation\n</code></pre> Description Translate (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/translation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/translation/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/rotation\n</code></pre> Description Rotate, in 2D, one number, the rotation angle, in 3D, three or four Euler angles, axis+angle, or a unit quaternion. Depends on rotation mode.</p> <code>/geometry/*/transformation/rotation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/rotation/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation_mode</code> (<code>string</code>) <p><pre><code>/geometry/*/transformation/rotation_mode\n</code></pre> Description Type of rotation, supported are any permutation of [xyz]+, axis_angle, quaternion, or rotation_vector.</p> <p>Default: <code>'xyz'</code></p> <code>/geometry/*/transformation/scale</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/scale\n</code></pre> Description Scale by specified factors along axes (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/scale/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/scale/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/dimensions</code> <pre><code>/geometry/*/transformation/dimensions\n</code></pre> <code>/geometry/*/transformation/dimensions</code> (<code>float</code>)<code>/geometry/*/transformation/dimensions</code> (<code>list</code>) <p>Description Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <p>Default: <code>1</code></p> <p>Description Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <code>/geometry/*/transformation/dimensions/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/dimensions/*\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/n_refs</code> (<code>int</code>) <p><pre><code>/geometry/*/n_refs\n</code></pre> Description number of uniform refinements</p> <p>Default: <code>0</code></p> <code>/geometry/*/advanced</code> (<code>object</code>) <p><pre><code>/geometry/*/advanced\n</code></pre> Description Advanced options for geometry</p> <p>Default: <code>None</code> Optional</p> <code>/geometry/*/advanced/normalize_mesh</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/normalize_mesh\n</code></pre> Description Rescale the mesh to it fits in the biunit cube</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/force_linear_geometry</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/force_linear_geometry\n</code></pre> Description Discard high-order nodes for curved geometries</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/refinement_location</code> (<code>float</code>) <p><pre><code>/geometry/*/advanced/refinement_location\n</code></pre> Description parametric location of the refinement</p> <p>Default: <code>0.5</code></p> <code>/geometry/*/advanced/min_component</code> (<code>int</code>) <p><pre><code>/geometry/*/advanced/min_component\n</code></pre> Description Size of the minimum component for collision</p> <p>Default: <code>-1</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre> Description Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre> Description The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <code>/materials</code> (<code>list</code>) <p><pre><code>/materials\n</code></pre> Description Material Parameters lists including ID pointing to volume selection, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), Density (\\(\\rho\\)), or Lam\u00e9 constants (\\(\\lambda\\) and \\(\\mu\\)).</p> <code>/materials/*</code> <pre><code>/materials/*\n</code></pre> NeoHookeanNeoHookeanIsochoricNeoHookeanIsochoricNeoHookeanMooneyRivlinMooneyRivlin3ParamMooneyRivlin3ParamSymbolicUnconstrainedOgdenIncompressibleOgdenLinearElasticityLinearElasticityHookeLinearElasticityHookeLinearElasticitySaintVenantSaintVenantStokesNavierStokesOperatorSplittingElectrostaticsIncompressibleLinearElasticityMaterialSumIncompressibleLinearElasticityLaplacianHelmholtzBilaplacianAMIPSAMIPSAutodiffFixedCorotationalFixedCorotationalVolumePenaltyHGOFiber <p>Type: NeoHookean Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: NeoHookean Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IsochoricNeoHookean Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IsochoricNeoHookean Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MooneyRivlin Description Material Parameters including ID, for Mooney-Rivlin Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c1</code> <pre><code>/materials/*/c1\n</code></pre> <code>/materials/*/c1</code> (<code>float</code>)<code>/materials/*/c1</code> (<code>string</code>)<code>/materials/*/c1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c1/value</code> <pre><code>/materials/*/c1/value\n</code></pre> <code>/materials/*/c1/value</code> (<code>float</code>)<code>/materials/*/c1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/c2</code> <pre><code>/materials/*/c2\n</code></pre> <code>/materials/*/c2</code> (<code>float</code>)<code>/materials/*/c2</code> (<code>string</code>)<code>/materials/*/c2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c2/value</code> <pre><code>/materials/*/c2/value\n</code></pre> <code>/materials/*/c2/value</code> (<code>float</code>)<code>/materials/*/c2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c2/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MooneyRivlin3Param Description Material Parameters including ID, for Mooney-Rivlin Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c1</code> <pre><code>/materials/*/c1\n</code></pre> <code>/materials/*/c1</code> (<code>float</code>)<code>/materials/*/c1</code> (<code>string</code>)<code>/materials/*/c1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c1/value</code> <pre><code>/materials/*/c1/value\n</code></pre> <code>/materials/*/c1/value</code> (<code>float</code>)<code>/materials/*/c1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/c2</code> <pre><code>/materials/*/c2\n</code></pre> <code>/materials/*/c2</code> (<code>float</code>)<code>/materials/*/c2</code> (<code>string</code>)<code>/materials/*/c2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c2/value</code> <pre><code>/materials/*/c2/value\n</code></pre> <code>/materials/*/c2/value</code> (<code>float</code>)<code>/materials/*/c2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c2/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/c3</code> <pre><code>/materials/*/c3\n</code></pre> <code>/materials/*/c3</code> (<code>float</code>)<code>/materials/*/c3</code> (<code>string</code>)<code>/materials/*/c3</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c3/value</code> <pre><code>/materials/*/c3/value\n</code></pre> <code>/materials/*/c3/value</code> (<code>float</code>)<code>/materials/*/c3/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c3/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/d1</code> <pre><code>/materials/*/d1\n</code></pre> <code>/materials/*/d1</code> (<code>float</code>)<code>/materials/*/d1</code> (<code>string</code>)<code>/materials/*/d1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/d1/value</code> <pre><code>/materials/*/d1/value\n</code></pre> <code>/materials/*/d1/value</code> (<code>float</code>)<code>/materials/*/d1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/d1/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MooneyRivlin3ParamSymbolic Description Material Parameters including ID, for Mooney-Rivlin Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c1</code> <pre><code>/materials/*/c1\n</code></pre> <code>/materials/*/c1</code> (<code>float</code>)<code>/materials/*/c1</code> (<code>string</code>)<code>/materials/*/c1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c1/value</code> <pre><code>/materials/*/c1/value\n</code></pre> <code>/materials/*/c1/value</code> (<code>float</code>)<code>/materials/*/c1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/c2</code> <pre><code>/materials/*/c2\n</code></pre> <code>/materials/*/c2</code> (<code>float</code>)<code>/materials/*/c2</code> (<code>string</code>)<code>/materials/*/c2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c2/value</code> <pre><code>/materials/*/c2/value\n</code></pre> <code>/materials/*/c2/value</code> (<code>float</code>)<code>/materials/*/c2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c2/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/c3</code> <pre><code>/materials/*/c3\n</code></pre> <code>/materials/*/c3</code> (<code>float</code>)<code>/materials/*/c3</code> (<code>string</code>)<code>/materials/*/c3</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c3/value</code> <pre><code>/materials/*/c3/value\n</code></pre> <code>/materials/*/c3/value</code> (<code>float</code>)<code>/materials/*/c3/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c3/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/d1</code> <pre><code>/materials/*/d1\n</code></pre> <code>/materials/*/d1</code> (<code>float</code>)<code>/materials/*/d1</code> (<code>string</code>)<code>/materials/*/d1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/d1/value</code> <pre><code>/materials/*/d1/value\n</code></pre> <code>/materials/*/d1/value</code> (<code>float</code>)<code>/materials/*/d1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/d1/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: UnconstrainedOgden Description Material Parameters including ID, for Ogden. Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/alphas</code> <pre><code>/materials/*/alphas\n</code></pre> <code>/materials/*/alphas</code> (<code>float</code>)<code>/materials/*/alphas</code> (<code>string</code>)<code>/materials/*/alphas</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/alphas/value</code> <pre><code>/materials/*/alphas/value\n</code></pre> <code>/materials/*/alphas/value</code> (<code>float</code>)<code>/materials/*/alphas/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/alphas/unit</code> (<code>string</code>) <p><pre><code>/materials/*/alphas/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/mus</code> (<code>list</code>) <p><pre><code>/materials/*/mus\n</code></pre> Description Ogden mu</p> <code>/materials/*/mus/*</code> <pre><code>/materials/*/mus/*\n</code></pre> <code>/materials/*/mus/*</code> (<code>float</code>)<code>/materials/*/mus/*</code> (<code>string</code>)<code>/materials/*/mus/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/mus/*/value</code> <pre><code>/materials/*/mus/*/value\n</code></pre> <code>/materials/*/mus/*/value</code> (<code>float</code>)<code>/materials/*/mus/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/mus/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mus/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/Ds</code> (<code>list</code>) <p><pre><code>/materials/*/Ds\n</code></pre> Description Ogden D</p> <code>/materials/*/Ds/*</code> <pre><code>/materials/*/Ds/*\n</code></pre> <code>/materials/*/Ds/*</code> (<code>float</code>)<code>/materials/*/Ds/*</code> (<code>string</code>)<code>/materials/*/Ds/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/Ds/*/value</code> <pre><code>/materials/*/Ds/*/value\n</code></pre> <code>/materials/*/Ds/*/value</code> (<code>float</code>)<code>/materials/*/Ds/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/Ds/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/Ds/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IncompressibleOgden Description Material Parameters including ID, for Ogden. Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c</code> <pre><code>/materials/*/c\n</code></pre> <code>/materials/*/c</code> (<code>float</code>)<code>/materials/*/c</code> (<code>string</code>)<code>/materials/*/c</code> (<code>object</code>)<code>/materials/*/c</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c/value</code> <pre><code>/materials/*/c/value\n</code></pre> <code>/materials/*/c/value</code> (<code>float</code>)<code>/materials/*/c/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c/unit\n</code></pre> Description The unit of the Value</p> <p>Description Coefficient(s) of Incompressible Ogden</p> <code>/materials/*/c/*</code> <pre><code>/materials/*/c/*\n</code></pre> <code>/materials/*/c/*</code> (<code>float</code>)<code>/materials/*/c/*</code> (<code>string</code>)<code>/materials/*/c/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/c/*/value</code> <pre><code>/materials/*/c/*/value\n</code></pre> <code>/materials/*/c/*/value</code> (<code>float</code>)<code>/materials/*/c/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/c/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/m</code> <pre><code>/materials/*/m\n</code></pre> <code>/materials/*/m</code> (<code>float</code>)<code>/materials/*/m</code> (<code>string</code>)<code>/materials/*/m</code> (<code>object</code>)<code>/materials/*/m</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/m/value</code> <pre><code>/materials/*/m/value\n</code></pre> <code>/materials/*/m/value</code> (<code>float</code>)<code>/materials/*/m/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/m/unit</code> (<code>string</code>) <p><pre><code>/materials/*/m/unit\n</code></pre> Description The unit of the Value</p> <p>Description Exponent(s) of Incompressible Ogden</p> <code>/materials/*/m/*</code> <pre><code>/materials/*/m/*\n</code></pre> <code>/materials/*/m/*</code> (<code>float</code>)<code>/materials/*/m/*</code> (<code>string</code>)<code>/materials/*/m/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/m/*/value</code> <pre><code>/materials/*/m/*/value\n</code></pre> <code>/materials/*/m/*/value</code> (<code>float</code>)<code>/materials/*/m/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/m/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/m/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: LinearElasticity Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: LinearElasticity Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: HookeLinearElasticity Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <p>Type: HookeLinearElasticity Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/elasticity_tensor\n</code></pre> Description Symmetric elasticity tensor</p> <code>/materials/*/elasticity_tensor/*</code> <pre><code>/materials/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/elasticity_tensor/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <p>Type: SaintVenant Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: SaintVenant Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/elasticity_tensor\n</code></pre> Description Symmetric elasticity tensor</p> <code>/materials/*/elasticity_tensor/*</code> <pre><code>/materials/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/elasticity_tensor/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Stokes Description Material Parameters including ID, viscosity, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/viscosity</code> <pre><code>/materials/*/viscosity\n</code></pre> <code>/materials/*/viscosity</code> (<code>float</code>)<code>/materials/*/viscosity</code> (<code>string</code>)<code>/materials/*/viscosity</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/viscosity/value</code> <pre><code>/materials/*/viscosity/value\n</code></pre> <code>/materials/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/viscosity/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/viscosity/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: NavierStokes Description Material Parameters including ID, viscosity, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/viscosity</code> <pre><code>/materials/*/viscosity\n</code></pre> <code>/materials/*/viscosity</code> (<code>float</code>)<code>/materials/*/viscosity</code> (<code>string</code>)<code>/materials/*/viscosity</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/viscosity/value</code> <pre><code>/materials/*/viscosity/value\n</code></pre> <code>/materials/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/viscosity/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/viscosity/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: OperatorSplitting Description Material Parameters including ID, viscosity, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/viscosity</code> <pre><code>/materials/*/viscosity\n</code></pre> <code>/materials/*/viscosity</code> (<code>float</code>)<code>/materials/*/viscosity</code> (<code>string</code>)<code>/materials/*/viscosity</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/viscosity/value</code> <pre><code>/materials/*/viscosity/value\n</code></pre> <code>/materials/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/viscosity/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/viscosity/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Electrostatics Description Material Parameters including ID, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/epsilon</code> <pre><code>/materials/*/epsilon\n</code></pre> <code>/materials/*/epsilon</code> (<code>float</code>)<code>/materials/*/epsilon</code> (<code>string</code>)<code>/materials/*/epsilon</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/epsilon/value</code> <pre><code>/materials/*/epsilon/value\n</code></pre> <code>/materials/*/epsilon/value</code> (<code>float</code>)<code>/materials/*/epsilon/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/epsilon/unit</code> (<code>string</code>) <p><pre><code>/materials/*/epsilon/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IncompressibleLinearElasticity Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MaterialSum Description Model that is a sum of other models Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models</code> (<code>list</code>) <p><pre><code>/materials/*/models\n</code></pre> Description List of models</p> <code>/materials/*/models/*</code> <pre><code>/materials/*/models/*\n</code></pre> NeoHookeanNeoHookeanIsochoricNeoHookeanIsochoricNeoHookeanMooneyRivlinMooneyRivlin3ParamMooneyRivlin3ParamSymbolicUnconstrainedOgdenIncompressibleOgdenLinearElasticityLinearElasticityHookeLinearElasticityHookeLinearElasticitySaintVenantSaintVenantStokesNavierStokesOperatorSplittingElectrostaticsIncompressibleLinearElasticityMaterialSumIncompressibleLinearElasticityLaplacianHelmholtzBilaplacianAMIPSAMIPSAutodiffFixedCorotationalFixedCorotationalVolumePenaltyHGOFiber <p>Type: NeoHookean Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: NeoHookean Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IsochoricNeoHookean Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IsochoricNeoHookean Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MooneyRivlin Description Material Parameters including ID, for Mooney-Rivlin Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c1</code> <pre><code>/materials/*/models/*/c1\n</code></pre> <code>/materials/*/models/*/c1</code> (<code>float</code>)<code>/materials/*/models/*/c1</code> (<code>string</code>)<code>/materials/*/models/*/c1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c1/value</code> <pre><code>/materials/*/models/*/c1/value\n</code></pre> <code>/materials/*/models/*/c1/value</code> (<code>float</code>)<code>/materials/*/models/*/c1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/c2</code> <pre><code>/materials/*/models/*/c2\n</code></pre> <code>/materials/*/models/*/c2</code> (<code>float</code>)<code>/materials/*/models/*/c2</code> (<code>string</code>)<code>/materials/*/models/*/c2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c2/value</code> <pre><code>/materials/*/models/*/c2/value\n</code></pre> <code>/materials/*/models/*/c2/value</code> (<code>float</code>)<code>/materials/*/models/*/c2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c2/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MooneyRivlin3Param Description Material Parameters including ID, for Mooney-Rivlin Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c1</code> <pre><code>/materials/*/models/*/c1\n</code></pre> <code>/materials/*/models/*/c1</code> (<code>float</code>)<code>/materials/*/models/*/c1</code> (<code>string</code>)<code>/materials/*/models/*/c1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c1/value</code> <pre><code>/materials/*/models/*/c1/value\n</code></pre> <code>/materials/*/models/*/c1/value</code> (<code>float</code>)<code>/materials/*/models/*/c1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/c2</code> <pre><code>/materials/*/models/*/c2\n</code></pre> <code>/materials/*/models/*/c2</code> (<code>float</code>)<code>/materials/*/models/*/c2</code> (<code>string</code>)<code>/materials/*/models/*/c2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c2/value</code> <pre><code>/materials/*/models/*/c2/value\n</code></pre> <code>/materials/*/models/*/c2/value</code> (<code>float</code>)<code>/materials/*/models/*/c2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c2/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/c3</code> <pre><code>/materials/*/models/*/c3\n</code></pre> <code>/materials/*/models/*/c3</code> (<code>float</code>)<code>/materials/*/models/*/c3</code> (<code>string</code>)<code>/materials/*/models/*/c3</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c3/value</code> <pre><code>/materials/*/models/*/c3/value\n</code></pre> <code>/materials/*/models/*/c3/value</code> (<code>float</code>)<code>/materials/*/models/*/c3/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c3/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/d1</code> <pre><code>/materials/*/models/*/d1\n</code></pre> <code>/materials/*/models/*/d1</code> (<code>float</code>)<code>/materials/*/models/*/d1</code> (<code>string</code>)<code>/materials/*/models/*/d1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/d1/value</code> <pre><code>/materials/*/models/*/d1/value\n</code></pre> <code>/materials/*/models/*/d1/value</code> (<code>float</code>)<code>/materials/*/models/*/d1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/d1/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MooneyRivlin3ParamSymbolic Description Material Parameters including ID, for Mooney-Rivlin Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c1</code> <pre><code>/materials/*/models/*/c1\n</code></pre> <code>/materials/*/models/*/c1</code> (<code>float</code>)<code>/materials/*/models/*/c1</code> (<code>string</code>)<code>/materials/*/models/*/c1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c1/value</code> <pre><code>/materials/*/models/*/c1/value\n</code></pre> <code>/materials/*/models/*/c1/value</code> (<code>float</code>)<code>/materials/*/models/*/c1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/c2</code> <pre><code>/materials/*/models/*/c2\n</code></pre> <code>/materials/*/models/*/c2</code> (<code>float</code>)<code>/materials/*/models/*/c2</code> (<code>string</code>)<code>/materials/*/models/*/c2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c2/value</code> <pre><code>/materials/*/models/*/c2/value\n</code></pre> <code>/materials/*/models/*/c2/value</code> (<code>float</code>)<code>/materials/*/models/*/c2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c2/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/c3</code> <pre><code>/materials/*/models/*/c3\n</code></pre> <code>/materials/*/models/*/c3</code> (<code>float</code>)<code>/materials/*/models/*/c3</code> (<code>string</code>)<code>/materials/*/models/*/c3</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c3/value</code> <pre><code>/materials/*/models/*/c3/value\n</code></pre> <code>/materials/*/models/*/c3/value</code> (<code>float</code>)<code>/materials/*/models/*/c3/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c3/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/d1</code> <pre><code>/materials/*/models/*/d1\n</code></pre> <code>/materials/*/models/*/d1</code> (<code>float</code>)<code>/materials/*/models/*/d1</code> (<code>string</code>)<code>/materials/*/models/*/d1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/d1/value</code> <pre><code>/materials/*/models/*/d1/value\n</code></pre> <code>/materials/*/models/*/d1/value</code> (<code>float</code>)<code>/materials/*/models/*/d1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/d1/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: UnconstrainedOgden Description Material Parameters including ID, for Ogden. Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/alphas</code> <pre><code>/materials/*/models/*/alphas\n</code></pre> <code>/materials/*/models/*/alphas</code> (<code>float</code>)<code>/materials/*/models/*/alphas</code> (<code>string</code>)<code>/materials/*/models/*/alphas</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/alphas/value</code> <pre><code>/materials/*/models/*/alphas/value\n</code></pre> <code>/materials/*/models/*/alphas/value</code> (<code>float</code>)<code>/materials/*/models/*/alphas/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/alphas/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/alphas/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/mus</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/mus\n</code></pre> Description Ogden mu</p> <code>/materials/*/models/*/mus/*</code> <pre><code>/materials/*/models/*/mus/*\n</code></pre> <code>/materials/*/models/*/mus/*</code> (<code>float</code>)<code>/materials/*/models/*/mus/*</code> (<code>string</code>)<code>/materials/*/models/*/mus/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/mus/*/value</code> <pre><code>/materials/*/models/*/mus/*/value\n</code></pre> <code>/materials/*/models/*/mus/*/value</code> (<code>float</code>)<code>/materials/*/models/*/mus/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/mus/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mus/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/Ds</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/Ds\n</code></pre> Description Ogden D</p> <code>/materials/*/models/*/Ds/*</code> <pre><code>/materials/*/models/*/Ds/*\n</code></pre> <code>/materials/*/models/*/Ds/*</code> (<code>float</code>)<code>/materials/*/models/*/Ds/*</code> (<code>string</code>)<code>/materials/*/models/*/Ds/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/Ds/*/value</code> <pre><code>/materials/*/models/*/Ds/*/value\n</code></pre> <code>/materials/*/models/*/Ds/*/value</code> (<code>float</code>)<code>/materials/*/models/*/Ds/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/Ds/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/Ds/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IncompressibleOgden Description Material Parameters including ID, for Ogden. Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c</code> <pre><code>/materials/*/models/*/c\n</code></pre> <code>/materials/*/models/*/c</code> (<code>float</code>)<code>/materials/*/models/*/c</code> (<code>string</code>)<code>/materials/*/models/*/c</code> (<code>object</code>)<code>/materials/*/models/*/c</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c/value</code> <pre><code>/materials/*/models/*/c/value\n</code></pre> <code>/materials/*/models/*/c/value</code> (<code>float</code>)<code>/materials/*/models/*/c/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c/unit\n</code></pre> Description The unit of the Value</p> <p>Description Coefficient(s) of Incompressible Ogden</p> <code>/materials/*/models/*/c/*</code> <pre><code>/materials/*/models/*/c/*\n</code></pre> <code>/materials/*/models/*/c/*</code> (<code>float</code>)<code>/materials/*/models/*/c/*</code> (<code>string</code>)<code>/materials/*/models/*/c/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/c/*/value</code> <pre><code>/materials/*/models/*/c/*/value\n</code></pre> <code>/materials/*/models/*/c/*/value</code> (<code>float</code>)<code>/materials/*/models/*/c/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/c/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/m</code> <pre><code>/materials/*/models/*/m\n</code></pre> <code>/materials/*/models/*/m</code> (<code>float</code>)<code>/materials/*/models/*/m</code> (<code>string</code>)<code>/materials/*/models/*/m</code> (<code>object</code>)<code>/materials/*/models/*/m</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/m/value</code> <pre><code>/materials/*/models/*/m/value\n</code></pre> <code>/materials/*/models/*/m/value</code> (<code>float</code>)<code>/materials/*/models/*/m/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/m/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/m/unit\n</code></pre> Description The unit of the Value</p> <p>Description Exponent(s) of Incompressible Ogden</p> <code>/materials/*/models/*/m/*</code> <pre><code>/materials/*/models/*/m/*\n</code></pre> <code>/materials/*/models/*/m/*</code> (<code>float</code>)<code>/materials/*/models/*/m/*</code> (<code>string</code>)<code>/materials/*/models/*/m/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/m/*/value</code> <pre><code>/materials/*/models/*/m/*/value\n</code></pre> <code>/materials/*/models/*/m/*/value</code> (<code>float</code>)<code>/materials/*/models/*/m/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/m/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/m/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: LinearElasticity Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: LinearElasticity Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: HookeLinearElasticity Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <p>Type: HookeLinearElasticity Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor\n</code></pre> Description Symmetric elasticity tensor</p> <code>/materials/*/models/*/elasticity_tensor/*</code> <pre><code>/materials/*/models/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/models/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <p>Type: SaintVenant Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: SaintVenant Description Material Parameters including ID, E, nu, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor\n</code></pre> Description Symmetric elasticity tensor</p> <code>/materials/*/models/*/elasticity_tensor/*</code> <pre><code>/materials/*/models/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/models/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Stokes Description Material Parameters including ID, viscosity, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/viscosity</code> <pre><code>/materials/*/models/*/viscosity\n</code></pre> <code>/materials/*/models/*/viscosity</code> (<code>float</code>)<code>/materials/*/models/*/viscosity</code> (<code>string</code>)<code>/materials/*/models/*/viscosity</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/viscosity/value</code> <pre><code>/materials/*/models/*/viscosity/value\n</code></pre> <code>/materials/*/models/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/models/*/viscosity/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/viscosity/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: NavierStokes Description Material Parameters including ID, viscosity, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/viscosity</code> <pre><code>/materials/*/models/*/viscosity\n</code></pre> <code>/materials/*/models/*/viscosity</code> (<code>float</code>)<code>/materials/*/models/*/viscosity</code> (<code>string</code>)<code>/materials/*/models/*/viscosity</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/viscosity/value</code> <pre><code>/materials/*/models/*/viscosity/value\n</code></pre> <code>/materials/*/models/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/models/*/viscosity/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/viscosity/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: OperatorSplitting Description Material Parameters including ID, viscosity, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/viscosity</code> <pre><code>/materials/*/models/*/viscosity\n</code></pre> <code>/materials/*/models/*/viscosity</code> (<code>float</code>)<code>/materials/*/models/*/viscosity</code> (<code>string</code>)<code>/materials/*/models/*/viscosity</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/viscosity/value</code> <pre><code>/materials/*/models/*/viscosity/value\n</code></pre> <code>/materials/*/models/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/models/*/viscosity/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/viscosity/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Electrostatics Description Material Parameters including ID, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/epsilon</code> <pre><code>/materials/*/models/*/epsilon\n</code></pre> <code>/materials/*/models/*/epsilon</code> (<code>float</code>)<code>/materials/*/models/*/epsilon</code> (<code>string</code>)<code>/materials/*/models/*/epsilon</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/epsilon/value</code> <pre><code>/materials/*/models/*/epsilon/value\n</code></pre> <code>/materials/*/models/*/epsilon/value</code> (<code>float</code>)<code>/materials/*/models/*/epsilon/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/epsilon/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/epsilon/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IncompressibleLinearElasticity Description Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: MaterialSum Description Model that is a sum of other models Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <p>Type: IncompressibleLinearElasticity Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Laplacian Description Material Parameters including ID, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Helmholtz Description Material Parameters including ID, k, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Bilaplacian Description Material Parameters including ID, density (\\(\\rho\\)) Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: AMIPS Description Material Parameters including ID Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/models/*/use_rest_pose</code> (<code>bool</code>) <p><pre><code>/materials/*/models/*/use_rest_pose\n</code></pre> Description Use amips wrt to rest pose or the regular element</p> <p>Default: <code>False</code></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: AMIPSAutodiff Description Material Parameters including ID Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: FixedCorotational Description Material Parameters including ID Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: FixedCorotational Description Material Parameters including ID Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: VolumePenalty Description Material Parameters including ID Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: HGOFiber Description Material Parameters Required</p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/k1</code> <pre><code>/materials/*/models/*/k1\n</code></pre> <code>/materials/*/models/*/k1</code> (<code>float</code>)<code>/materials/*/models/*/k1</code> (<code>string</code>)<code>/materials/*/models/*/k1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/k1/value</code> <pre><code>/materials/*/models/*/k1/value\n</code></pre> <code>/materials/*/models/*/k1/value</code> (<code>float</code>)<code>/materials/*/models/*/k1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/k1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/k2</code> <pre><code>/materials/*/models/*/k2\n</code></pre> <code>/materials/*/models/*/k2</code> (<code>float</code>)<code>/materials/*/models/*/k2</code> (<code>string</code>)<code>/materials/*/models/*/k2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/k2/value</code> <pre><code>/materials/*/models/*/k2/value\n</code></pre> <code>/materials/*/models/*/k2/value</code> (<code>float</code>)<code>/materials/*/models/*/k2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/k2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k2/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <p>Type: IncompressibleLinearElasticity Description Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Laplacian Description Material Parameters including ID, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Helmholtz Description Material Parameters including ID, k, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: Bilaplacian Description Material Parameters including ID, density (\\(\\rho\\)) Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: AMIPS Description Material Parameters including ID Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/use_rest_pose</code> (<code>bool</code>) <p><pre><code>/materials/*/use_rest_pose\n</code></pre> Description Use amips wrt to rest pose or the regular element</p> <p>Default: <code>False</code></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: AMIPSAutodiff Description Material Parameters including ID Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: FixedCorotational Description Material Parameters including ID Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: FixedCorotational Description Material Parameters including ID Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre> Description The unit of the Value</p> <p>Type: VolumePenalty Description Material Parameters including ID Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <p>Type: HGOFiber Description Material Parameters Required</p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre> Description Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/k1</code> <pre><code>/materials/*/k1\n</code></pre> <code>/materials/*/k1</code> (<code>float</code>)<code>/materials/*/k1</code> (<code>string</code>)<code>/materials/*/k1</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/k1/value</code> <pre><code>/materials/*/k1/value\n</code></pre> <code>/materials/*/k1/value</code> (<code>float</code>)<code>/materials/*/k1/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/k1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k1/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/k2</code> <pre><code>/materials/*/k2\n</code></pre> <code>/materials/*/k2</code> (<code>float</code>)<code>/materials/*/k2</code> (<code>string</code>)<code>/materials/*/k2</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/k2/value</code> <pre><code>/materials/*/k2/value\n</code></pre> <code>/materials/*/k2/value</code> (<code>float</code>)<code>/materials/*/k2/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/k2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k2/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p>Description Volume selection ID</p> <p>Default: <code>0</code></p> <p>Description Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre> Description Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>1</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre> Description The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre> Description Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/units</code> (<code>object</code>) <p><pre><code>/units\n</code></pre> Description Basic units used in the code.</p> <p>Default: <code>None</code> Optional</p> <code>/units/length</code> (<code>string</code>) <p><pre><code>/units/length\n</code></pre> Description Length unit.</p> <p>Default: <code>'m'</code></p> <code>/units/mass</code> (<code>string</code>) <p><pre><code>/units/mass\n</code></pre> Description Mass unit.</p> <p>Default: <code>'kg'</code></p> <code>/units/time</code> (<code>string</code>) <p><pre><code>/units/time\n</code></pre> Description Time unit.</p> <p>Default: <code>'s'</code></p> <code>/units/characteristic_length</code> (<code>float</code>) <p><pre><code>/units/characteristic_length\n</code></pre> Description Characteristic length, used for tolerances.</p> <p>Default: <code>1</code></p> <code>/preset_problem</code> <pre><code>/preset_problem\n</code></pre> LinearQuadraticCubicSineFrankeFrankeOldGenericScalarExactZero_BCElasticWalkTorsionElasticDoubleTorsionElasticElasticZeroBCElasticExactElasticCantileverExactCompressionElasticExactQuadraticElasticExactLinearElasticExactPointBasedTensorKernelNodeTimeDependentScalarMinSurfGravityConstantVelocityTwoSpheresDrivenCavityDrivenCavityC0DrivenCavitySmoothFlowFlowWithObstacleCornerFlowUnitFlowWithObstacleStokesLawTaylorGreenVortexSimpleStokeProblemExactSineStokeProblemExactTransientStokeProblemExactKovnaszyAirfoilLshapeTestProblemBilaplacianProblemWithSolution <p>Type: Linear Description TODO</p> <p>Default: <code>'skip'</code> Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Quadratic Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Cubic Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Sine Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Franke Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: FrankeOld Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: GenericScalarExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/func</code> (<code>int</code>) <p><pre><code>/preset_problem/func\n</code></pre> Description TODO</p> <p>Default: <code>0</code></p> <p>Type: Zero_BC Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Elastic Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Walk Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TorsionElastic Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/axis_coordiante</code> (<code>int</code>) <p><pre><code>/preset_problem/axis_coordiante\n</code></pre> Description TODO</p> <p>Default: <code>2</code></p> <code>/preset_problem/n_turns</code> (<code>float</code>) <p><pre><code>/preset_problem/n_turns\n</code></pre> Description TODO</p> <p>Default: <code>0.5</code></p> <code>/preset_problem/fixed_boundary</code> (<code>int</code>) <p><pre><code>/preset_problem/fixed_boundary\n</code></pre> Description TODO</p> <p>Default: <code>5</code></p> <code>/preset_problem/turning_boundary</code> (<code>int</code>) <p><pre><code>/preset_problem/turning_boundary\n</code></pre> Description TODO</p> <p>Default: <code>6</code></p> <code>/preset_problem/bbox_center</code> (<code>list</code>) <p><pre><code>/preset_problem/bbox_center\n</code></pre> Description TODO</p> <code>/preset_problem/bbox_center/*</code> (<code>float</code>) <p><pre><code>/preset_problem/bbox_center/*\n</code></pre> Description TODO</p> <p>Default: <code>0</code></p> <p>Type: DoubleTorsionElastic Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/axis_coordiante0</code> (<code>int</code>) <p><pre><code>/preset_problem/axis_coordiante0\n</code></pre> Description TODO</p> <p>Default: <code>2</code></p> <code>/preset_problem/axis_coordiante1</code> (<code>int</code>) <p><pre><code>/preset_problem/axis_coordiante1\n</code></pre> Description TODO</p> <p>Default: <code>2</code></p> <code>/preset_problem/angular_v0</code> (<code>float</code>) <p><pre><code>/preset_problem/angular_v0\n</code></pre> Description TODO</p> <p>Default: <code>0.5</code></p> <code>/preset_problem/angular_v1</code> (<code>float</code>) <p><pre><code>/preset_problem/angular_v1\n</code></pre> Description TODO</p> <p>Default: <code>-0.5</code></p> <code>/preset_problem/turning_boundary0</code> (<code>int</code>) <p><pre><code>/preset_problem/turning_boundary0\n</code></pre> Description TODO</p> <p>Default: <code>5</code></p> <code>/preset_problem/turning_boundary1</code> (<code>int</code>) <p><pre><code>/preset_problem/turning_boundary1\n</code></pre> Description TODO</p> <p>Default: <code>6</code></p> <code>/preset_problem/bbox_center</code> (<code>list</code>) <p><pre><code>/preset_problem/bbox_center\n</code></pre> Description TODO</p> <code>/preset_problem/bbox_center/*</code> (<code>float</code>) <p><pre><code>/preset_problem/bbox_center/*\n</code></pre> Description TODO</p> <p>Default: <code>0</code></p> <p>Type: ElasticZeroBC Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: ElasticExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: ElasticCantileverExact Description TODO, add displacement, E, nu, formulation, mesh_size Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: CompressionElasticExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: QuadraticElasticExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: LinearElasticExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: PointBasedTensor Description TODO, add optionals Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Kernel Description TODO, add optionals Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/formulation</code> (<code>string</code>) <p><pre><code>/preset_problem/formulation\n</code></pre> Description TODO</p> <p>Default: <code>''</code></p> <code>/preset_problem/n_kernels</code> (<code>int</code>) <p><pre><code>/preset_problem/n_kernels\n</code></pre> Description TODO</p> <p>Default: <code>0</code></p> <code>/preset_problem/kernel_distance</code> (<code>float</code>) <p><pre><code>/preset_problem/kernel_distance\n</code></pre> Description TODO</p> <p>Default: <code>0</code></p> <code>/preset_problem/kernel_weights</code> (<code>string</code>) <p><pre><code>/preset_problem/kernel_weights\n</code></pre> Description TODO</p> <p>Default: <code>''</code></p> <p>Type: Node Description TODO, add optionals Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TimeDependentScalar Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: MinSurf Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Gravity Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <p>Type: ConstantVelocity Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TwoSpheres Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: DrivenCavity Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: DrivenCavityC0 Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: DrivenCavitySmooth Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Flow Description TODO, add inflow, outflow, inflow_amout, outflow_amout, direction, obstacle Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: FlowWithObstacle Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <p>Type: CornerFlow Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <p>Type: UnitFlowWithObstacle Description TODO, add inflow_id, direction, no_slip Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <p>Type: StokesLaw Description TODO, add radius Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre> Description TODO</p> <p>Default: <code>1</code></p> <p>Type: TaylorGreenVortex Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre> Description TODO</p> <p>Default: <code>1</code></p> <p>Type: SimpleStokeProblemExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/func</code> (<code>int</code>) <p><pre><code>/preset_problem/func\n</code></pre> Description TODO</p> <p>Default: <code>0</code></p> <p>Type: SineStokeProblemExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TransientStokeProblemExact Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/func</code> (<code>int</code>) <p><pre><code>/preset_problem/func\n</code></pre> Description TODO</p> <p>Default: <code>0</code></p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre> Description TODO</p> <p>Default: <code>1</code></p> <p>Type: Kovnaszy Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre> Description TODO</p> <p>Default: <code>1</code></p> <p>Type: Airfoil Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <p>Type: Lshape Description TODO Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Optional</p> <p>Type: TestProblem Description TODO, type, omega, is_scalar Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: BilaplacianProblemWithSolution Description TODO, type, omega, is_scalar Required</p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre> Description Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <code>/common</code> (<code>file</code>) <p><pre><code>/common\n</code></pre> Description Path to common settings will patch the current file.</p> <p>Default: <code>''</code></p> <p>Extensions: <code>['.json']</code></p> <code>/root_path</code> (<code>string</code>) <p><pre><code>/root_path\n</code></pre> Description Path for all relative paths, set automatically to the folder containing this JSON.</p> <p>Default: <code>''</code></p> <code>/space</code> (<code>object</code>) <p><pre><code>/space\n</code></pre> Description Options related to the FE space.</p> <p>Default: <code>None</code> Optional</p> <code>/space/discr_order</code> <pre><code>/space/discr_order\n</code></pre> <code>/space/discr_order</code> (<code>int</code>)<code>/space/discr_order</code> (<code>file</code>)<code>/space/discr_order</code> (<code>list</code>) <p>Description Lagrange element order for the space for the main unknown, for all elements.</p> <p>Default: <code>1</code></p> <p>Description Path to file containing Lagrange element order for the space for the main unknown per element.</p> <p>Extensions: <code>['.txt', '.bin']</code></p> <p>Description List of Lagrange element order for the space for the main unknown with volume IDs.</p> <code>/space/discr_order/*</code> (<code>object</code>) <p><pre><code>/space/discr_order/*\n</code></pre> Description Lagrange element order for the a space tagged with volume ID for the main unknown. Required</p> <code>/space/discr_order/*/id</code> <pre><code>/space/discr_order/*/id\n</code></pre> <code>/space/discr_order/*/id</code> (<code>int</code>)<code>/space/discr_order/*/id</code> (<code>list</code>) <p>Description Volume selection ID to apply the discr_order to.</p> <p>Description List of volume selection IDs to apply the discr_order to.</p> <code>/space/discr_order/*/id/*</code> (<code>int</code>) <p><pre><code>/space/discr_order/*/id/*\n</code></pre> Description Volume selection ID to apply the discr_order to.</p> <code>/space/discr_order/*/order</code> (<code>int</code>) <p><pre><code>/space/discr_order/*/order\n</code></pre> Description Lagrange element order for the space for the main unknown, for all elements.</p> <code>/space/pressure_discr_order</code> (<code>int</code>) <p><pre><code>/space/pressure_discr_order\n</code></pre> Description  Lagrange element order for the space for the pressure unknown, for all elements.</p> <p>Default: <code>1</code></p> <code>/space/basis_type</code> (<code>string</code>) <p><pre><code>/space/basis_type\n</code></pre> Description Type of basis to use for non polygonal element, one of Lagrange, Spline, or Serendipity. Spline or Serendipity work only for quad/hex meshes</p> <p>Default: <code>'Lagrange'</code></p> <p>Options: <code>['Lagrange', 'Spline', 'Serendipity', 'Bernstein']</code></p> <code>/space/poly_basis_type</code> (<code>string</code>) <p><pre><code>/space/poly_basis_type\n</code></pre> Description Type of basis to use for a polygonal element, one of MFSHarmonic, MeanValue, or Wachspress see \u2018PolySpline..\u2019 paper for details.</p> <p>Default: <code>'MFSHarmonic'</code></p> <p>Options: <code>['MFSHarmonic', 'MeanValue', 'Wachspress']</code></p> <code>/space/use_p_ref</code> (<code>bool</code>) <p><pre><code>/space/use_p_ref\n</code></pre> Description Perform a priori p-refinement based on element shape, as described in \u2018Decoupling..\u2019 paper.</p> <p>Default: <code>False</code></p> <code>/space/remesh</code> (<code>object</code>) <p><pre><code>/space/remesh\n</code></pre> Description Settings for adaptive remeshing</p> <p>Default: <code>None</code> Optional</p> <code>/space/remesh/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/enabled\n</code></pre> Description Whether to do adaptive remeshing</p> <p>Default: <code>False</code></p> <code>/space/remesh/split</code> (<code>object</code>) <p><pre><code>/space/remesh/split\n</code></pre> Description Settings for adaptive remeshing edge splitting operations</p> <p>Default: <code>None</code> Optional</p> <code>/space/remesh/split/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/split/enabled\n</code></pre> Description Whether to do edge splitting in adaptive remeshing</p> <p>Default: <code>True</code></p> <code>/space/remesh/split/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/split/acceptance_tolerance\n</code></pre> Description Accept split operation if energy decreased by at least x</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/split/culling_threshold</code> (<code>float</code>) <p><pre><code>/space/remesh/split/culling_threshold\n</code></pre> Description Split operation culling threshold on energy</p> <p>Default: <code>0.95</code></p> <p>Range: <code>[0, 1]</code></p> <code>/space/remesh/split/max_depth</code> (<code>int</code>) <p><pre><code>/space/remesh/split/max_depth\n</code></pre> Description Maximum depth split per time-step</p> <p>Default: <code>3</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/split/min_edge_length</code> (<code>float</code>) <p><pre><code>/space/remesh/split/min_edge_length\n</code></pre> Description Minimum edge length to split</p> <p>Default: <code>1e-06</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/collapse</code> (<code>object</code>) <p><pre><code>/space/remesh/collapse\n</code></pre> Description Settings for adaptive remeshing edge collapse operations</p> <p>Default: <code>None</code> Optional</p> <code>/space/remesh/collapse/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/collapse/enabled\n</code></pre> Description Whether to do edge collapse in adaptive remeshing</p> <p>Default: <code>True</code></p> <code>/space/remesh/collapse/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/acceptance_tolerance\n</code></pre> Description Accept collapse operation if energy decreased by at least x</p> <p>Default: <code>-1e-08</code></p> <p>Range: <code>[-inf, 0]</code></p> <code>/space/remesh/collapse/culling_threshold</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/culling_threshold\n</code></pre> Description Collapse operation culling threshold on energy</p> <p>Default: <code>0.01</code></p> <p>Range: <code>[0, 1]</code></p> <code>/space/remesh/collapse/max_depth</code> (<code>int</code>) <p><pre><code>/space/remesh/collapse/max_depth\n</code></pre> Description Maximum depth collapse per time-step</p> <p>Default: <code>3</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/collapse/rel_max_edge_length</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/rel_max_edge_length\n</code></pre> Description Length of maximum edge length to collapse relative to initial minimum edge length</p> <p>Default: <code>1</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/collapse/abs_max_edge_length</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/abs_max_edge_length\n</code></pre> Description Length of maximum edge length to collapse in absolute units of distance</p> <p>Default: <code>1e+100</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/swap</code> (<code>object</code>) <p><pre><code>/space/remesh/swap\n</code></pre> Description Settings for adaptive remeshing edge/face swap operations</p> <p>Default: <code>None</code> Optional</p> <code>/space/remesh/swap/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/swap/enabled\n</code></pre> Description Whether to do edge/face swap in adaptive remeshing</p> <p>Default: <code>False</code></p> <code>/space/remesh/swap/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/swap/acceptance_tolerance\n</code></pre> Description Accept swap operation if energy decreased by at least x</p> <p>Default: <code>-1e-08</code></p> <p>Range: <code>[-inf, 0]</code></p> <code>/space/remesh/swap/max_depth</code> (<code>int</code>) <p><pre><code>/space/remesh/swap/max_depth\n</code></pre> Description Maximum depth swap per time-step</p> <p>Default: <code>3</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/smooth</code> (<code>object</code>) <p><pre><code>/space/remesh/smooth\n</code></pre> Description Settings for adaptive remeshing vertex smoothing operations</p> <p>Default: <code>None</code> Optional</p> <code>/space/remesh/smooth/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/smooth/enabled\n</code></pre> Description Whether to do vertex smoothing in adaptive remeshing</p> <p>Default: <code>False</code></p> <code>/space/remesh/smooth/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/smooth/acceptance_tolerance\n</code></pre> Description Accept smooth operation if energy decreased by at least x</p> <p>Default: <code>-1e-08</code></p> <p>Range: <code>[-inf, 0]</code></p> <code>/space/remesh/smooth/max_iters</code> (<code>int</code>) <p><pre><code>/space/remesh/smooth/max_iters\n</code></pre> Description Maximum number of smoothing iterations per time-step</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/local_relaxation</code> (<code>object</code>) <p><pre><code>/space/remesh/local_relaxation\n</code></pre> Description Settings for adaptive remeshing local relaxation</p> <p>Default: <code>None</code> Optional</p> <code>/space/remesh/local_relaxation/local_mesh_n_ring</code> (<code>int</code>) <p><pre><code>/space/remesh/local_relaxation/local_mesh_n_ring\n</code></pre> Description Size of n-ring for local relaxation</p> <p>Default: <code>2</code></p> <code>/space/remesh/local_relaxation/local_mesh_rel_area</code> (<code>float</code>) <p><pre><code>/space/remesh/local_relaxation/local_mesh_rel_area\n</code></pre> Description Minimum area for local relaxation</p> <p>Default: <code>0.01</code></p> <code>/space/remesh/local_relaxation/max_nl_iterations</code> (<code>int</code>) <p><pre><code>/space/remesh/local_relaxation/max_nl_iterations\n</code></pre> Description Maximum number of nonlinear solver iterations before acceptance check</p> <p>Default: <code>1</code></p> <code>/space/remesh/type</code> (<code>string</code>) <p><pre><code>/space/remesh/type\n</code></pre> Description Type of adaptive remeshing to use.</p> <p>Default: <code>'physics'</code></p> <p>Options: <code>['physics', 'sizing_field']</code></p> <code>/space/advanced</code> (<code>object</code>) <p><pre><code>/space/advanced\n</code></pre> Description Advanced settings for the FE space.</p> <p>Default: <code>None</code> Optional</p> <code>/space/advanced/discr_order_max</code> (<code>int</code>) <p><pre><code>/space/advanced/discr_order_max\n</code></pre> Description Maximal discretization order in adaptive p-refinement and hp-refinement</p> <p>Default: <code>4</code></p> <code>/space/advanced/isoparametric</code> (<code>bool</code>) <p><pre><code>/space/advanced/isoparametric\n</code></pre> Description Forces geometric map basis to be the same degree as the main variable basis, irrespective of the degree associated with the geom. map degrees associated with the elements of the geometry.</p> <p>Default: <code>False</code></p> <code>/space/advanced/bc_method</code> (<code>string</code>) <p><pre><code>/space/advanced/bc_method\n</code></pre> Description Method for imposing analytic Dirichet boundary conditions. If \u2018lsq\u2019 (least-squares fit), then the bc function is sampled at quadrature points, and the FEspace nodal values on the boundary are determined by minimizing L2 norm of the difference. If \u2018sample\u2019, then the analytic bc function is sampled at the boundary nodes.</p> <p>Default: <code>'sample'</code></p> <p>Options: <code>['lsq', 'sample']</code></p> <code>/space/advanced/n_boundary_samples</code> (<code>int</code>) <p><pre><code>/space/advanced/n_boundary_samples\n</code></pre> Description Per-element number of boundary samples for analytic Dirichlet and Neumann boundary conditions.</p> <p>Default: <code>-1</code></p> <code>/space/advanced/quadrature_order</code> (<code>int</code>) <p><pre><code>/space/advanced/quadrature_order\n</code></pre> Description Minimal quadrature order to use in matrix and rhs assembly; the actual order is determined as min(2*(p-1)+1,quadrature_order).</p> <p>Default: <code>-1</code></p> <code>/space/advanced/mass_quadrature_order</code> (<code>int</code>) <p><pre><code>/space/advanced/mass_quadrature_order\n</code></pre> Description Minimal quadrature order to use in mass matrix assembler; the actual order is determined as min(2*p+1,quadrature_order)</p> <p>Default: <code>-1</code></p> <code>/space/advanced/use_corner_quadrature</code> (<code>bool</code>) <p><pre><code>/space/advanced/use_corner_quadrature\n</code></pre> Description Use quadrature rules that always include all the vertices of the element.</p> <p>Default: <code>False</code></p> <code>/space/advanced/integral_constraints</code> (<code>int</code>) <p><pre><code>/space/advanced/integral_constraints\n</code></pre> Description Number of constraints for non-conforming polygonal basis;  0, 1, or 2; see \u2018PolySpline..\u2019 paper for details.</p> <p>Default: <code>2</code></p> <code>/space/advanced/n_harmonic_samples</code> (<code>int</code>) <p><pre><code>/space/advanced/n_harmonic_samples\n</code></pre> Description If MFSHarmonics is used for a polygonal element, number of collocation samples used in the basis construction;see \u2018PolySpline..\u2019 paper for details.</p> <p>Default: <code>10</code></p> <code>/space/advanced/force_no_ref_for_harmonic</code> (<code>bool</code>) <p><pre><code>/space/advanced/force_no_ref_for_harmonic\n</code></pre> Description If true, do not do uniform global refinement if the mesh contains polygonal elements.</p> <p>Default: <code>False</code></p> <code>/space/advanced/B</code> (<code>int</code>) <p><pre><code>/space/advanced/B\n</code></pre> Description The target deviation of the error on elements from perfect element error, for a priori geometry-dependent p-refinement, see \u2018Decoupling .. \u2018 paper.</p> <p>Default: <code>3</code></p> <code>/space/advanced/h1_formula</code> (<code>bool</code>) <p><pre><code>/space/advanced/h1_formula\n</code></pre> Description</p> <p>Default: <code>False</code></p> <code>/space/advanced/count_flipped_els</code> (<code>bool</code>) <p><pre><code>/space/advanced/count_flipped_els\n</code></pre> Description Count the number of elements with Jacobian of the geometric map not positive at quadrature points.</p> <p>Default: <code>True</code></p> <code>/space/advanced/count_flipped_els_continuous</code> (<code>bool</code>) <p><pre><code>/space/advanced/count_flipped_els_continuous\n</code></pre> Description Count the number of elements with Jacobian of the geometric map not positive at any point.</p> <p>Default: <code>False</code></p> <code>/space/advanced/use_particle_advection</code> (<code>bool</code>) <p><pre><code>/space/advanced/use_particle_advection\n</code></pre> Description Use particle advection in splitting method for solving NS equation.</p> <p>Default: <code>False</code></p> <code>/time</code> <pre><code>/time\n</code></pre> <code>/time</code> (<code>object</code>)<code>/time</code> (<code>object</code>)<code>/time</code> (<code>object</code>) <p>Description The time parameters: start time <code>t0</code>, end time <code>tend</code>, time step <code>dt</code>.</p> <p>Default: <code>'skip'</code> Required</p> <code>/time/tend</code> (<code>float</code>) <p><pre><code>/time/tend\n</code></pre> Description Ending time</p> <p>Range: <code>[0, inf]</code></p> <code>/time/dt</code> (<code>float</code>) <p><pre><code>/time/dt\n</code></pre> Description Time step size \\(\\Delta t\\)</p> <p>Range: <code>[0, inf]</code></p> <p>Optional</p> <code>/time/t0</code> (<code>float</code>) <p><pre><code>/time/t0\n</code></pre> Description Startning time</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/time/integrator</code> <pre><code>/time/integrator\n</code></pre> <code>/time/integrator</code> (<code>string</code>)ImplicitEulerBDFImplicitNewmark <p>Description Time integrator</p> <p>Default: <code>'ImplicitEuler'</code></p> <p>Options: <code>['ImplicitEuler', 'BDF1', 'BDF2', 'BDF3', 'BDF4', 'BDF5', 'BDF6', 'ImplicitNewmark']</code></p> <p>Type: ImplicitEuler Description Implicit Euler time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Type: BDF Description Backwards differentiation formula time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Optional</p> <code>/time/integrator/steps</code> (<code>int</code>) <p><pre><code>/time/integrator/steps\n</code></pre> Description BDF order</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, 6]</code></p> <p>Type: ImplicitNewmark Description Implicit Newmark time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Optional</p> <code>/time/integrator/gamma</code> (<code>float</code>) <p><pre><code>/time/integrator/gamma\n</code></pre> Description Newmark gamma</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, 1]</code></p> <code>/time/integrator/beta</code> (<code>float</code>) <p><pre><code>/time/integrator/beta\n</code></pre> Description Newmark beta</p> <p>Default: <code>0.25</code></p> <p>Range: <code>[0, 0.5]</code></p> <code>/time/quasistatic</code> (<code>bool</code>) <p><pre><code>/time/quasistatic\n</code></pre> Description Ignore inertia in time dependent. Used for doing incremental load.</p> <p>Default: <code>False</code></p> <p>Description The time parameters: start time <code>t0</code>, time step <code>dt</code>, number of time steps. Required</p> <code>/time/time_steps</code> (<code>int</code>) <p><pre><code>/time/time_steps\n</code></pre> Description Number of time steps</p> <p>Range: <code>[0, inf]</code></p> <code>/time/dt</code> (<code>float</code>) <p><pre><code>/time/dt\n</code></pre> Description Time step size \\(\\Delta t\\)</p> <p>Range: <code>[0, inf]</code></p> <p>Optional</p> <code>/time/t0</code> (<code>float</code>) <p><pre><code>/time/t0\n</code></pre> Description Startning time</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/time/integrator</code> <pre><code>/time/integrator\n</code></pre> <code>/time/integrator</code> (<code>string</code>)ImplicitEulerBDFImplicitNewmark <p>Description Time integrator</p> <p>Default: <code>'ImplicitEuler'</code></p> <p>Options: <code>['ImplicitEuler', 'BDF1', 'BDF2', 'BDF3', 'BDF4', 'BDF5', 'BDF6', 'ImplicitNewmark']</code></p> <p>Type: ImplicitEuler Description Implicit Euler time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Type: BDF Description Backwards differentiation formula time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Optional</p> <code>/time/integrator/steps</code> (<code>int</code>) <p><pre><code>/time/integrator/steps\n</code></pre> Description BDF order</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, 6]</code></p> <p>Type: ImplicitNewmark Description Implicit Newmark time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Optional</p> <code>/time/integrator/gamma</code> (<code>float</code>) <p><pre><code>/time/integrator/gamma\n</code></pre> Description Newmark gamma</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, 1]</code></p> <code>/time/integrator/beta</code> (<code>float</code>) <p><pre><code>/time/integrator/beta\n</code></pre> Description Newmark beta</p> <p>Default: <code>0.25</code></p> <p>Range: <code>[0, 0.5]</code></p> <code>/time/quasistatic</code> (<code>bool</code>) <p><pre><code>/time/quasistatic\n</code></pre> Description Ignore inertia in time dependent. Used for doing incremental load.</p> <p>Default: <code>False</code></p> <p>Description The time parameters: start time <code>t0</code>, end time <code>tend</code>, number of time steps. Required</p> <code>/time/time_steps</code> (<code>int</code>) <p><pre><code>/time/time_steps\n</code></pre> Description Number of time steps</p> <p>Range: <code>[0, inf]</code></p> <code>/time/tend</code> (<code>float</code>) <p><pre><code>/time/tend\n</code></pre> Description Ending time</p> <p>Range: <code>[0, inf]</code></p> <p>Optional</p> <code>/time/t0</code> (<code>float</code>) <p><pre><code>/time/t0\n</code></pre> Description Startning time</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/time/integrator</code> <pre><code>/time/integrator\n</code></pre> <code>/time/integrator</code> (<code>string</code>)ImplicitEulerBDFImplicitNewmark <p>Description Time integrator</p> <p>Default: <code>'ImplicitEuler'</code></p> <p>Options: <code>['ImplicitEuler', 'BDF1', 'BDF2', 'BDF3', 'BDF4', 'BDF5', 'BDF6', 'ImplicitNewmark']</code></p> <p>Type: ImplicitEuler Description Implicit Euler time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Type: BDF Description Backwards differentiation formula time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Optional</p> <code>/time/integrator/steps</code> (<code>int</code>) <p><pre><code>/time/integrator/steps\n</code></pre> Description BDF order</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, 6]</code></p> <p>Type: ImplicitNewmark Description Implicit Newmark time integration Required</p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre> Description Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Optional</p> <code>/time/integrator/gamma</code> (<code>float</code>) <p><pre><code>/time/integrator/gamma\n</code></pre> Description Newmark gamma</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, 1]</code></p> <code>/time/integrator/beta</code> (<code>float</code>) <p><pre><code>/time/integrator/beta\n</code></pre> Description Newmark beta</p> <p>Default: <code>0.25</code></p> <p>Range: <code>[0, 0.5]</code></p> <code>/time/quasistatic</code> (<code>bool</code>) <p><pre><code>/time/quasistatic\n</code></pre> Description Ignore inertia in time dependent. Used for doing incremental load.</p> <p>Default: <code>False</code></p> <code>/contact</code> (<code>object</code>) <p><pre><code>/contact\n</code></pre> Description Contact handling parameters.</p> <p>Default: <code>None</code> Optional</p> <code>/contact/enabled</code> (<code>bool</code>) <p><pre><code>/contact/enabled\n</code></pre> Description True if contact handling is enabled.</p> <p>Default: <code>False</code></p> <code>/contact/dhat</code> (<code>float</code>) <p><pre><code>/contact/dhat\n</code></pre> Description Contact barrier activation distance.</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/contact/dhat_percentage</code> (<code>float</code>) <p><pre><code>/contact/dhat_percentage\n</code></pre> Description \\(\\hat{d}\\) as percentage of the diagonal of the bounding box</p> <p>Default: <code>0.8</code></p> <code>/contact/epsv</code> (<code>float</code>) <p><pre><code>/contact/epsv\n</code></pre> Description Friction smoothing parameter.</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/contact/friction_coefficient</code> (<code>float</code>) <p><pre><code>/contact/friction_coefficient\n</code></pre> Description Coefficient of friction (global)</p> <p>Default: <code>0</code></p> <code>/contact/use_convergent_formulation</code> (<code>bool</code>) <p><pre><code>/contact/use_convergent_formulation\n</code></pre> Description Whether to use the convergent (area weighted) formulation of IPC.</p> <p>Default: <code>False</code></p> <code>/contact/use_area_weighting</code> (<code>bool</code>) <p><pre><code>/contact/use_area_weighting\n</code></pre> Description If using the convergent formulation, whether or not to use area weighting. Currently not implemented.</p> <p>Default: <code>True</code></p> <code>/contact/use_improved_max_operator</code> (<code>bool</code>) <p><pre><code>/contact/use_improved_max_operator\n</code></pre> Description If using the convergent formulation, whether or not to use improved max operator. Currently not implemented.</p> <p>Default: <code>True</code></p> <code>/contact/use_physical_barrier</code> (<code>bool</code>) <p><pre><code>/contact/use_physical_barrier\n</code></pre> Description If using the convergent formulation, whether or not to use physical barrier stiffness. Currently not implemented.</p> <p>Default: <code>True</code></p> <code>/contact/collision_mesh</code> <pre><code>/contact/collision_mesh\n</code></pre> <code>/contact/collision_mesh</code> (<code>object</code>)<code>/contact/collision_mesh</code> (<code>object</code>)<code>/contact/collision_mesh</code> (<code>object</code>) <p>Description Load a preconstructed collision mesh.</p> <p>Default: <code>'skip'</code> Required</p> <code>/contact/collision_mesh/mesh</code> (<code>string</code>) <p><pre><code>/contact/collision_mesh/mesh\n</code></pre> Description Path to preconstructed collision mesh.</p> <code>/contact/collision_mesh/linear_map</code> (<code>string</code>) <p><pre><code>/contact/collision_mesh/linear_map\n</code></pre> Description HDF file storing the linear mapping of displacements.</p> <p>Optional</p> <code>/contact/collision_mesh/enabled</code> (<code>bool</code>) <p><pre><code>/contact/collision_mesh/enabled\n</code></pre> Description</p> <p>Default: <code>True</code></p> <p>Description Construct a collision mesh with a maximum edge length. Required</p> <code>/contact/collision_mesh/max_edge_length</code> (<code>float</code>) <p><pre><code>/contact/collision_mesh/max_edge_length\n</code></pre> Description Maximum edge length to use for building the collision mesh.</p> <p>Optional</p> <code>/contact/collision_mesh/tessellation_type</code> (<code>string</code>) <p><pre><code>/contact/collision_mesh/tessellation_type\n</code></pre> Description Type of tessellation to use for building the collision mesh.</p> <p>Default: <code>'regular'</code></p> <p>Options: <code>['regular', 'irregular']</code></p> <code>/contact/collision_mesh/enabled</code> (<code>bool</code>) <p><pre><code>/contact/collision_mesh/enabled\n</code></pre> Description</p> <p>Default: <code>True</code></p> <p>Description Construct a collision mesh. Optional</p> <code>/contact/collision_mesh/enabled</code> (<code>bool</code>) <p><pre><code>/contact/collision_mesh/enabled\n</code></pre> Description</p> <p>Default: <code>True</code></p> <code>/contact/use_gcp_formulation</code> (<code>bool</code>) <p><pre><code>/contact/use_gcp_formulation\n</code></pre> Description True if the smooth contact formulation is used.</p> <p>Default: <code>False</code></p> <code>/contact/alpha_n</code> (<code>float</code>) <p><pre><code>/contact/alpha_n\n</code></pre> Description Control the smoothness of normal angle contraints of contact pairs.</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[-1, 1]</code></p> <code>/contact/alpha_t</code> (<code>float</code>) <p><pre><code>/contact/alpha_t\n</code></pre> Description Control the smoothness of tangent angle contraints of contact pairs.</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[-1, 1]</code></p> <code>/contact/min_distance_ratio</code> (<code>float</code>) <p><pre><code>/contact/min_distance_ratio\n</code></pre> Description Ratio of the minimum distance to contact to define local epsilon.</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, inf]</code></p> <code>/contact/use_adaptive_dhat</code> (<code>bool</code>) <p><pre><code>/contact/use_adaptive_dhat\n</code></pre> Description True if adaptive epsilon is used.</p> <p>Default: <code>False</code></p> <code>/contact/periodic</code> (<code>bool</code>) <p><pre><code>/contact/periodic\n</code></pre> Description Set to true to check collision between adjacent periodic cells.</p> <p>Default: <code>False</code></p> <code>/contact/adhesion</code> (<code>object</code>) <p><pre><code>/contact/adhesion\n</code></pre> Description Adhesion settings.</p> <p>Default: <code>None</code> Optional</p> <code>/contact/adhesion/adhesion_enabled</code> (<code>bool</code>) <p><pre><code>/contact/adhesion/adhesion_enabled\n</code></pre> Description Set to true to enable normal adhesion forces.</p> <p>Default: <code>False</code></p> <code>/contact/adhesion/dhat_p</code> (<code>float</code>) <p><pre><code>/contact/adhesion/dhat_p\n</code></pre> Description Distance at which normal adhesion force reaches its maximum.</p> <p>Default: <code>0.001</code></p> <code>/contact/adhesion/dhat_a</code> (<code>float</code>) <p><pre><code>/contact/adhesion/dhat_a\n</code></pre> Description Distance at which normal adhesion force is activated.</p> <p>Default: <code>0.01</code></p> <code>/contact/adhesion/adhesion_strength</code> (<code>float</code>) <p><pre><code>/contact/adhesion/adhesion_strength\n</code></pre> Description Parameter that sets the strength of the normal adhesion force.</p> <p>Default: <code>0.001</code></p> <code>/contact/adhesion/tangential_adhesion_coefficient</code> (<code>float</code>) <p><pre><code>/contact/adhesion/tangential_adhesion_coefficient\n</code></pre> Description Coefficient of tangential adhesion (global)</p> <p>Default: <code>0.0</code></p> <code>/contact/adhesion/epsa</code> (<code>float</code>) <p><pre><code>/contact/adhesion/epsa\n</code></pre> Description Tangential adhesion smoothing parameter.</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver</code> (<code>object</code>) <p><pre><code>/solver\n</code></pre> Description The settings for the solver including linear solver, nonlinear solver, and some advanced options.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/max_threads</code> (<code>int</code>) <p><pre><code>/solver/max_threads\n</code></pre> Description Maximum number of threads used; 0 is unlimited.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/linear</code> (<code>object</code>) <p><pre><code>/solver/linear\n</code></pre> Description Settings for the linear solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/enable_overwrite_solver</code> (<code>bool</code>) <p><pre><code>/solver/linear/enable_overwrite_solver\n</code></pre> Description If solver name is not present, falls back to default</p> <p>Default: <code>False</code></p> <code>/solver/linear/solver</code> (<code>string</code>) <p><pre><code>/solver/linear/solver\n</code></pre> Description Linear solver type.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::SimplicialLDLT', 'Eigen::SparseLU', 'Eigen::CholmodSupernodalLLT', 'Eigen::UmfPackLU', 'Eigen::SuperLU', 'Eigen::PardisoLDLT', 'Eigen::PardisoLLT', 'Eigen::PardisoLU', 'Pardiso', 'Hypre', 'AMGCL', 'Eigen::LeastSquaresConjugateGradient', 'Eigen::DGMRES', 'Eigen::ConjugateGradient', 'Eigen::BiCGSTAB', 'Eigen::GMRES', 'Eigen::MINRES']</code></p> <code>/solver/linear/precond</code> (<code>string</code>) <p><pre><code>/solver/linear/precond\n</code></pre> Description Preconditioner used if using an iterative linear solver.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::IdentityPreconditioner', 'Eigen::DiagonalPreconditioner', 'Eigen::IncompleteCholesky', 'Eigen::LeastSquareDiagonalPreconditioner', 'Eigen::IncompleteLUT']</code></p> <code>/solver/linear/Eigen::LeastSquaresConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::LeastSquaresConjugateGradient\n</code></pre> Description Settings for the Eigen\u2019s Least Squares Conjugate Gradient solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Eigen::LeastSquaresConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::LeastSquaresConjugateGradient/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::LeastSquaresConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::LeastSquaresConjugateGradient/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::DGMRES</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::DGMRES\n</code></pre> Description Settings for the Eigen\u2019s DGMRES solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Eigen::DGMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::DGMRES/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::DGMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::DGMRES/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::ConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::ConjugateGradient\n</code></pre> Description Settings for the Eigen\u2019s Conjugate Gradient solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Eigen::ConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::ConjugateGradient/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::ConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::ConjugateGradient/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::BiCGSTAB</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::BiCGSTAB\n</code></pre> Description Settings for the Eigen\u2019s BiCGSTAB solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Eigen::BiCGSTAB/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::BiCGSTAB/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::BiCGSTAB/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::BiCGSTAB/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::GMRES</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::GMRES\n</code></pre> Description Settings for the Eigen\u2019s GMRES solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Eigen::GMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::GMRES/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::GMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::GMRES/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::MINRES</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::MINRES\n</code></pre> Description Settings for the Eigen\u2019s MINRES solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Eigen::MINRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::MINRES/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::MINRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::MINRES/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Pardiso</code> (<code>object</code>) <p><pre><code>/solver/linear/Pardiso\n</code></pre> Description Settings for the Pardiso solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Pardiso/mtype</code> (<code>int</code>) <p><pre><code>/solver/linear/Pardiso/mtype\n</code></pre> Description Matrix type.</p> <p>Default: <code>11</code></p> <p>Options: <code>[1, 2, -2, 3, 4, -4, 6, 11, 13]</code></p> <code>/solver/linear/Hypre</code> (<code>object</code>) <p><pre><code>/solver/linear/Hypre\n</code></pre> Description Settings for the Hypre solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/Hypre/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Hypre/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Hypre/pre_max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Hypre/pre_max_iter\n</code></pre> Description Maximum number of pre iterations.</p> <p>Default: <code>1</code></p> <code>/solver/linear/Hypre/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Hypre/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/linear/AMGCL</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL\n</code></pre> Description Settings for the AMGCL solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/AMGCL/solver</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/solver\n</code></pre> Description Solver settings for the AMGCL.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/AMGCL/solver/tol</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/solver/tol\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/linear/AMGCL/solver/maxiter</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/solver/maxiter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/AMGCL/solver/type</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/solver/type\n</code></pre> Description Type of solver to use.</p> <p>Default: <code>'cg'</code></p> <code>/solver/linear/AMGCL/precond</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond\n</code></pre> Description Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/AMGCL/precond/relax</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax\n</code></pre> Description Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/AMGCL/precond/relax/degree</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/degree\n</code></pre> Description Degree of the polynomial.</p> <p>Default: <code>16</code></p> <code>/solver/linear/AMGCL/precond/relax/type</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/type\n</code></pre> Description Type of relaxation to use.</p> <p>Default: <code>'chebyshev'</code></p> <code>/solver/linear/AMGCL/precond/relax/power_iters</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/power_iters\n</code></pre> Description Number of power iterations.</p> <p>Default: <code>100</code></p> <code>/solver/linear/AMGCL/precond/relax/higher</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/higher\n</code></pre> Description Higher level relaxation.</p> <p>Default: <code>2</code></p> <code>/solver/linear/AMGCL/precond/relax/lower</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/lower\n</code></pre> Description Lower level relaxation.</p> <p>Default: <code>0.008333333333</code></p> <code>/solver/linear/AMGCL/precond/relax/scale</code> (<code>bool</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/scale\n</code></pre> Description Scale.</p> <p>Default: <code>True</code></p> <code>/solver/linear/AMGCL/precond/class</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/precond/class\n</code></pre> Description Type of preconditioner to use.</p> <p>Default: <code>'amg'</code></p> <code>/solver/linear/AMGCL/precond/max_levels</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/max_levels\n</code></pre> Description Maximum number of levels.</p> <p>Default: <code>6</code></p> <code>/solver/linear/AMGCL/precond/direct_coarse</code> (<code>bool</code>) <p><pre><code>/solver/linear/AMGCL/precond/direct_coarse\n</code></pre> Description Use direct solver for the coarsest level.</p> <p>Default: <code>False</code></p> <code>/solver/linear/AMGCL/precond/ncycle</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/ncycle\n</code></pre> Description Number of cycles.</p> <p>Default: <code>2</code></p> <code>/solver/linear/AMGCL/precond/coarsening</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening\n</code></pre> Description Coarsening parameters.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/AMGCL/precond/coarsening/type</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/type\n</code></pre> Description Coarsening type.</p> <p>Default: <code>'smoothed_aggregation'</code></p> <code>/solver/linear/AMGCL/precond/coarsening/estimate_spectral_radius</code> (<code>bool</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/estimate_spectral_radius\n</code></pre> Description Should the spectral radius be estimated.</p> <p>Default: <code>True</code></p> <code>/solver/linear/AMGCL/precond/coarsening/relax</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/relax\n</code></pre> Description Coarsening relaxation.</p> <p>Default: <code>1</code></p> <code>/solver/linear/AMGCL/precond/coarsening/aggr</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/aggr\n</code></pre> Description Aggregation settings.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/linear/AMGCL/precond/coarsening/aggr/eps_strong</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/aggr/eps_strong\n</code></pre> Description Aggregation epsilon strong.</p> <p>Default: <code>0</code></p> <code>/solver/adjoint_linear</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear\n</code></pre> Description Settings for the linear solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/enable_overwrite_solver</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/enable_overwrite_solver\n</code></pre> Description If solver name is not present, falls back to default</p> <p>Default: <code>False</code></p> <code>/solver/adjoint_linear/solver</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/solver\n</code></pre> Description Linear solver type.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::SimplicialLDLT', 'Eigen::SparseLU', 'Eigen::CholmodSupernodalLLT', 'Eigen::UmfPackLU', 'Eigen::SuperLU', 'Eigen::PardisoLDLT', 'Eigen::PardisoLLT', 'Eigen::PardisoLU', 'Pardiso', 'Hypre', 'AMGCL', 'Eigen::LeastSquaresConjugateGradient', 'Eigen::DGMRES', 'Eigen::ConjugateGradient', 'Eigen::BiCGSTAB', 'Eigen::GMRES', 'Eigen::MINRES']</code></p> <code>/solver/adjoint_linear/precond</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/precond\n</code></pre> Description Preconditioner used if using an iterative linear solver.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::IdentityPreconditioner', 'Eigen::DiagonalPreconditioner', 'Eigen::IncompleteCholesky', 'Eigen::LeastSquareDiagonalPreconditioner', 'Eigen::IncompleteLUT']</code></p> <code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient\n</code></pre> Description Settings for the Eigen\u2019s Least Squares Conjugate Gradient solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::DGMRES</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::DGMRES\n</code></pre> Description Settings for the Eigen\u2019s DGMRES solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Eigen::DGMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::DGMRES/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::DGMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::DGMRES/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::ConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::ConjugateGradient\n</code></pre> Description Settings for the Eigen\u2019s Conjugate Gradient solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Eigen::ConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::ConjugateGradient/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::ConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::ConjugateGradient/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::BiCGSTAB</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::BiCGSTAB\n</code></pre> Description Settings for the Eigen\u2019s BiCGSTAB solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Eigen::BiCGSTAB/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::BiCGSTAB/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::BiCGSTAB/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::BiCGSTAB/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::GMRES</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::GMRES\n</code></pre> Description Settings for the Eigen\u2019s GMRES solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Eigen::GMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::GMRES/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::GMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::GMRES/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::MINRES</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::MINRES\n</code></pre> Description Settings for the Eigen\u2019s MINRES solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Eigen::MINRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::MINRES/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::MINRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::MINRES/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Pardiso</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Pardiso\n</code></pre> Description Settings for the Pardiso solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Pardiso/mtype</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Pardiso/mtype\n</code></pre> Description Matrix type.</p> <p>Default: <code>11</code></p> <p>Options: <code>[1, 2, -2, 3, 4, -4, 6, 11, 13]</code></p> <code>/solver/adjoint_linear/Hypre</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Hypre\n</code></pre> Description Settings for the Hypre solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/Hypre/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Hypre/max_iter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Hypre/pre_max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Hypre/pre_max_iter\n</code></pre> Description Maximum number of pre iterations.</p> <p>Default: <code>1</code></p> <code>/solver/adjoint_linear/Hypre/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Hypre/tolerance\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/adjoint_linear/AMGCL</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL\n</code></pre> Description Settings for the AMGCL solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/AMGCL/solver</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver\n</code></pre> Description Solver settings for the AMGCL.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/AMGCL/solver/tol</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver/tol\n</code></pre> Description Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/adjoint_linear/AMGCL/solver/maxiter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver/maxiter\n</code></pre> Description Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/AMGCL/solver/type</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver/type\n</code></pre> Description Type of solver to use.</p> <p>Default: <code>'cg'</code></p> <code>/solver/adjoint_linear/AMGCL/precond</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond\n</code></pre> Description Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/AMGCL/precond/relax</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax\n</code></pre> Description Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/AMGCL/precond/relax/degree</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/degree\n</code></pre> Description Degree of the polynomial.</p> <p>Default: <code>16</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/type</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/type\n</code></pre> Description Type of relaxation to use.</p> <p>Default: <code>'chebyshev'</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/power_iters</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/power_iters\n</code></pre> Description Number of power iterations.</p> <p>Default: <code>100</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/higher</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/higher\n</code></pre> Description Higher level relaxation.</p> <p>Default: <code>2</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/lower</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/lower\n</code></pre> Description Lower level relaxation.</p> <p>Default: <code>0.008333333333</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/scale</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/scale\n</code></pre> Description Scale.</p> <p>Default: <code>True</code></p> <code>/solver/adjoint_linear/AMGCL/precond/class</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/class\n</code></pre> Description Type of preconditioner to use.</p> <p>Default: <code>'amg'</code></p> <code>/solver/adjoint_linear/AMGCL/precond/max_levels</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/max_levels\n</code></pre> Description Maximum number of levels.</p> <p>Default: <code>6</code></p> <code>/solver/adjoint_linear/AMGCL/precond/direct_coarse</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/direct_coarse\n</code></pre> Description Use direct solver for the coarsest level.</p> <p>Default: <code>False</code></p> <code>/solver/adjoint_linear/AMGCL/precond/ncycle</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/ncycle\n</code></pre> Description Number of cycles.</p> <p>Default: <code>2</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening\n</code></pre> Description Coarsening parameters.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/type</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/type\n</code></pre> Description Coarsening type.</p> <p>Default: <code>'smoothed_aggregation'</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/estimate_spectral_radius</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/estimate_spectral_radius\n</code></pre> Description Should the spectral radius be estimated.</p> <p>Default: <code>True</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/relax</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/relax\n</code></pre> Description Coarsening relaxation.</p> <p>Default: <code>1</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr\n</code></pre> Description Aggregation settings.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr/eps_strong</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr/eps_strong\n</code></pre> Description Aggregation epsilon strong.</p> <p>Default: <code>0</code></p> <code>/solver/nonlinear</code> (<code>object</code>) <p><pre><code>/solver/nonlinear\n</code></pre> Description Settings for nonlinear solver. Interior-loop linear solver settings are defined in the solver/linear section.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/solver</code> <pre><code>/solver/nonlinear/solver\n</code></pre> <code>/solver/nonlinear/solver</code> (<code>string</code>)<code>/solver/nonlinear/solver</code> (<code>list</code>) <p>Description Nonlinear solver type</p> <p>Default: <code>'Newton'</code></p> <p>Options: <code>['Newton', 'DenseNewton', 'GradientDescent', 'ADAM', 'StochasticADAM', 'StochasticGradientDescent', 'L-BFGS', 'BFGS', 'L-BFGS-B', 'MMA']</code></p> <p>Description List of solvers for ballback. Eg, [{\u2018type\u2019:\u2019Newton\u2019}, {\u2018type\u2019:\u2019L-BFGS\u2019}, {\u2018type\u2019:\u2019GradientDescent\u2019}] will solve using Newton, in case of failure will fallback to L-BFGS and eventually to GradientDescent</p> <code>/solver/nonlinear/solver/*</code> <pre><code>/solver/nonlinear/solver/*\n</code></pre> NewtonProjectedNewtonRegularizedNewtonRegularizedProjectedNewtonDenseNewtonDenseProjectedNewtonDenseRegularizedNewtonDenseRegularizedProjectedNewtonGradientDescentStochasticGradientDescentL-BFGSBFGSADAMStochasticADAM <p>Type: Newton Description Options for Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: ProjectedNewton Description Options for projected Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: RegularizedNewton Description Options for regularized Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: RegularizedProjectedNewton Description Options for regularized projected Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseNewton Description Options for Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseProjectedNewton Description Options for projected Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseRegularizedNewton Description Options for regularized Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseRegularizedProjectedNewton Description Options for projected regularized Newton. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: GradientDescent Description Options for Gradient Descent. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: StochasticGradientDescent Description Options for Stochastic Gradient Descent. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <p>Type: L-BFGS Description Options for L-BFGS. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/history_size</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/solver/*/history_size\n</code></pre> Description The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <p>Type: BFGS Description Options for BFGS. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: ADAM Description Options for ADAM. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <p>Type: StochasticADAM Description Options for ADAM. Required</p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <code>/solver/nonlinear/x_delta</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/x_delta\n</code></pre> Description Stopping criterion: minimal change of the variables x for the iterations to continue. Computed as the L2 norm of x divide by the time step.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/grad_norm</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/grad_norm\n</code></pre> Description Stopping criterion: Minimal gradient norm for the iterations to continue.</p> <p>Default: <code>1e-08</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/first_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/first_grad_norm_tol\n</code></pre> Description Minimal gradient norm for the iterations to not start, assume we already are at a minimum.</p> <p>Default: <code>1e-10</code></p> <code>/solver/nonlinear/max_iterations</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/max_iterations\n</code></pre> Description Maximum number of iterations for a nonlinear solve.</p> <p>Default: <code>500</code></p> <code>/solver/nonlinear/iterations_per_strategy</code> <pre><code>/solver/nonlinear/iterations_per_strategy\n</code></pre> <code>/solver/nonlinear/iterations_per_strategy</code> (<code>int</code>)<code>/solver/nonlinear/iterations_per_strategy</code> (<code>list</code>) <p>Description Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <p>Description Number of iterations for every substrategy before reset.</p> <code>/solver/nonlinear/iterations_per_strategy/*</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/iterations_per_strategy/*\n</code></pre> Description Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <code>/solver/nonlinear/line_search</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/line_search\n</code></pre> Description Settings for line-search in the nonlinear solver</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/line_search/method</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/line_search/method\n</code></pre> Description Line-search type</p> <p>Default: <code>'RobustArmijo'</code></p> <p>Options: <code>['Armijo', 'RobustArmijo', 'Backtracking', 'None']</code></p> <code>/solver/nonlinear/line_search/use_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/use_grad_norm_tol\n</code></pre> Description When the energy is smaller than use_grad_norm_tol, line-search uses norm of gradient instead of energy</p> <p>Default: <code>1e-06</code></p> <code>/solver/nonlinear/line_search/min_step_size</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/min_step_size\n</code></pre> Description Mimimum step size</p> <p>Default: <code>1e-10</code></p> <code>/solver/nonlinear/line_search/max_step_size_iter</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/line_search/max_step_size_iter\n</code></pre> Description Number of iterations</p> <p>Default: <code>30</code></p> <code>/solver/nonlinear/line_search/min_step_size_final</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/min_step_size_final\n</code></pre> Description Mimimum step size for last descent strategy</p> <p>Default: <code>1e-20</code></p> <code>/solver/nonlinear/line_search/max_step_size_iter_final</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/line_search/max_step_size_iter_final\n</code></pre> Description Number of iterations for last descent strategy</p> <p>Default: <code>100</code></p> <code>/solver/nonlinear/line_search/default_init_step_size</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/default_init_step_size\n</code></pre> Description Initial step size</p> <p>Default: <code>1</code></p> <code>/solver/nonlinear/line_search/step_ratio</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/step_ratio\n</code></pre> Description Ratio used to decrease the step</p> <p>Default: <code>0.5</code></p> <code>/solver/nonlinear/line_search/Armijo</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/line_search/Armijo\n</code></pre> Description Options for Armijo.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/line_search/Armijo/c</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/Armijo/c\n</code></pre> Description Armijo c parameter.</p> <p>Default: <code>0.0001</code></p> <code>/solver/nonlinear/line_search/RobustArmijo</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/line_search/RobustArmijo\n</code></pre> Description Options for RobustArmijo.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/line_search/RobustArmijo/delta_relative_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/RobustArmijo/delta_relative_tolerance\n</code></pre> Description Relative tolerance on E to switch to approximate.</p> <p>Default: <code>0.1</code></p> <code>/solver/nonlinear/allow_out_of_iterations</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/allow_out_of_iterations\n</code></pre> Description If false (default), an exception will be thrown when the nonlinear solver reaches the maximum number of iterations.</p> <p>Default: <code>False</code></p> <code>/solver/nonlinear/L-BFGS</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/L-BFGS\n</code></pre> Description Options for LBFGS.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/L-BFGS/history_size</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/L-BFGS/history_size\n</code></pre> Description The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/nonlinear/L-BFGS-B</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/L-BFGS-B\n</code></pre> Description Options for the boxed L-BFGS.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/L-BFGS-B/history_size</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/L-BFGS-B/history_size\n</code></pre> Description The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/nonlinear/Newton</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/Newton\n</code></pre> Description Options for Newton.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/Newton/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/Newton/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/Newton/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/Newton/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <code>/solver/nonlinear/Newton/force_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/Newton/force_psd_projection\n</code></pre> Description Force the Hessian to be PSD when using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>False</code></p> <code>/solver/nonlinear/Newton/use_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/Newton/use_psd_projection\n</code></pre> Description Use PSD as fallback using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>True</code></p> <code>/solver/nonlinear/Newton/use_psd_projection_in_regularized</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/Newton/use_psd_projection_in_regularized\n</code></pre> Description Use PSD in regularized Newton.</p> <p>Default: <code>True</code></p> <code>/solver/nonlinear/ADAM</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/ADAM\n</code></pre> Description Options for ADAM.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/ADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/ADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/ADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/ADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/StochasticADAM</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/StochasticADAM\n</code></pre> Description Options for ADAM.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/StochasticADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/StochasticADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/StochasticADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/StochasticADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/StochasticADAM/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for ADAM.</p> <p>Default: <code>0.3</code></p> <code>/solver/nonlinear/StochasticGradientDescent</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/StochasticGradientDescent\n</code></pre> Description Options for Stochastic Gradient Descent.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/StochasticGradientDescent/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticGradientDescent/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for StochasticGradientDescent.</p> <p>Default: <code>0.3</code></p> <code>/solver/nonlinear/box_constraints</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/box_constraints\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/box_constraints/bounds</code> (<code>list</code>) <p><pre><code>/solver/nonlinear/box_constraints/bounds\n</code></pre> Description Box constraints on optimization variables.</p> <code>/solver/nonlinear/box_constraints/bounds/*</code> <pre><code>/solver/nonlinear/box_constraints/bounds/*\n</code></pre> <code>/solver/nonlinear/box_constraints/bounds/*</code> (<code>list</code>)<code>/solver/nonlinear/box_constraints/bounds/*</code> (<code>float</code>) <p>Description Box constraint values on optimization variables.</p> <code>/solver/nonlinear/box_constraints/bounds/*/*</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/box_constraints/bounds/*/*\n</code></pre> Description Box constraint values on optimization variables.</p> <p>Description Box constraint values on optimization variables.</p> <code>/solver/nonlinear/box_constraints/max_change</code> <pre><code>/solver/nonlinear/box_constraints/max_change\n</code></pre> <code>/solver/nonlinear/box_constraints/max_change</code> (<code>float</code>)<code>/solver/nonlinear/box_constraints/max_change</code> (<code>list</code>) <p>Description Maximum change of optimization variables in one iteration, only for solvers with box constraints. Negative value to disable this constraint.</p> <p>Default: <code>-1</code></p> <p>Description Maximum change of optimization variables in one iteration, only for solvers with box constraints.</p> <code>/solver/nonlinear/box_constraints/max_change/*</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/box_constraints/max_change/*\n</code></pre> Description Maximum change of every optimization variable in one iteration, only for solvers with box constraints.</p> <code>/solver/nonlinear/advanced</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/advanced\n</code></pre> Description Nonlinear solver advanced options</p> <p>Default: <code>None</code> Optional</p> <code>/solver/nonlinear/advanced/f_delta</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/advanced/f_delta\n</code></pre> Description Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/advanced/f_delta_step_tol</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/advanced/f_delta_step_tol\n</code></pre> Description Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>100</code></p> <code>/solver/nonlinear/advanced/derivative_along_delta_x_tol</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/advanced/derivative_along_delta_x_tol\n</code></pre> Description Quit the optimization if the directional derivative along the descent direction is smaller than this tolerance.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/advanced/apply_gradient_fd</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/advanced/apply_gradient_fd\n</code></pre> Description Expensive Option: For every iteration of the nonlinear solver, run finite difference to verify gradient of energy.</p> <p>Default: <code>'None'</code></p> <p>Options: <code>['None', 'DirectionalDerivative', 'FullFiniteDiff']</code></p> <code>/solver/nonlinear/advanced/gradient_fd_eps</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/advanced/gradient_fd_eps\n</code></pre> Description Expensive Option: Eps for finite difference to verify gradient of energy.</p> <p>Default: <code>1e-07</code></p> <code>/solver/augmented_lagrangian</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian\n</code></pre> Description Parameters for the AL for imposing Dirichlet BCs. If the bc are not imposable, we add \\(w\\|u - bc\\|^2\\) to the energy (\\(u\\) is the solution at the Dirichlet nodes and \\(bc\\) are the Dirichlet values). After convergence, we try to impose bc again. The algorithm computes E + a/2*AL^2 - lambda AL, where E is the current energy (elastic, inertia, contact, etc.) and AL is the augmented Lagrangian energy. a starts at <code>initial_weight</code> and, in case DBC cannot be imposed, we update a as <code>a *= scaling</code> until <code>max_weight</code>. See IPC additional material</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/initial_weight</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/initial_weight\n</code></pre> Description Initial weight for AL</p> <p>Default: <code>1000000.0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/scaling</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/scaling\n</code></pre> Description Multiplication factor</p> <p>Default: <code>2.0</code></p> <code>/solver/augmented_lagrangian/max_weight</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/max_weight\n</code></pre> Description Maximum weight</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/eta</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/eta\n</code></pre> Description Tolerance for increasing the weight or updating the lagrangian</p> <p>Default: <code>0.99</code></p> <p>Range: <code>[0, 1]</code></p> <code>/solver/augmented_lagrangian/nonlinear</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear\n</code></pre> Description Settings for nonlinear solver. Interior-loop linear solver settings are defined in the solver/linear section.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver</code> <pre><code>/solver/augmented_lagrangian/nonlinear/solver\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/solver</code> (<code>string</code>)<code>/solver/augmented_lagrangian/nonlinear/solver</code> (<code>list</code>) <p>Description Nonlinear solver type</p> <p>Default: <code>'Newton'</code></p> <p>Options: <code>['Newton', 'DenseNewton', 'GradientDescent', 'ADAM', 'StochasticADAM', 'StochasticGradientDescent', 'L-BFGS', 'BFGS', 'L-BFGS-B', 'MMA']</code></p> <p>Description List of solvers for ballback. Eg, [{\u2018type\u2019:\u2019Newton\u2019}, {\u2018type\u2019:\u2019L-BFGS\u2019}, {\u2018type\u2019:\u2019GradientDescent\u2019}] will solve using Newton, in case of failure will fallback to L-BFGS and eventually to GradientDescent</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*</code> <pre><code>/solver/augmented_lagrangian/nonlinear/solver/*\n</code></pre> NewtonProjectedNewtonRegularizedNewtonRegularizedProjectedNewtonDenseNewtonDenseProjectedNewtonDenseRegularizedNewtonDenseRegularizedProjectedNewtonGradientDescentStochasticGradientDescentL-BFGSBFGSADAMStochasticADAM <p>Type: Newton Description Options for Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: ProjectedNewton Description Options for projected Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: RegularizedNewton Description Options for regularized Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: RegularizedProjectedNewton Description Options for regularized projected Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseNewton Description Options for Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseProjectedNewton Description Options for projected Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseRegularizedNewton Description Options for regularized Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseRegularizedProjectedNewton Description Options for projected regularized Newton. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: GradientDescent Description Options for Gradient Descent. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: StochasticGradientDescent Description Options for Stochastic Gradient Descent. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <p>Type: L-BFGS Description Options for L-BFGS. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/history_size</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/history_size\n</code></pre> Description The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <p>Type: BFGS Description Options for BFGS. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: ADAM Description Options for ADAM. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <p>Type: StochasticADAM Description Options for ADAM. Required</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre> Description Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Optional</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <code>/solver/augmented_lagrangian/nonlinear/x_delta</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/x_delta\n</code></pre> Description Stopping criterion: minimal change of the variables x for the iterations to continue. Computed as the L2 norm of x divide by the time step.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/grad_norm</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/grad_norm\n</code></pre> Description Stopping criterion: Minimal gradient norm for the iterations to continue.</p> <p>Default: <code>1e-08</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/first_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/first_grad_norm_tol\n</code></pre> Description Minimal gradient norm for the iterations to not start, assume we already are at a minimum.</p> <p>Default: <code>1e-10</code></p> <code>/solver/augmented_lagrangian/nonlinear/max_iterations</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/max_iterations\n</code></pre> Description Maximum number of iterations for a nonlinear solve.</p> <p>Default: <code>500</code></p> <code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy</code> <pre><code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy</code> (<code>int</code>)<code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy</code> (<code>list</code>) <p>Description Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <p>Description Number of iterations for every substrategy before reset.</p> <code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy/*</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy/*\n</code></pre> Description Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search\n</code></pre> Description Settings for line-search in the nonlinear solver</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/line_search/method</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/method\n</code></pre> Description Line-search type</p> <p>Default: <code>'RobustArmijo'</code></p> <p>Options: <code>['Armijo', 'RobustArmijo', 'Backtracking', 'None']</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/use_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/use_grad_norm_tol\n</code></pre> Description When the energy is smaller than use_grad_norm_tol, line-search uses norm of gradient instead of energy</p> <p>Default: <code>1e-06</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size\n</code></pre> Description Mimimum step size</p> <p>Default: <code>1e-10</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter\n</code></pre> Description Number of iterations</p> <p>Default: <code>30</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size_final</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size_final\n</code></pre> Description Mimimum step size for last descent strategy</p> <p>Default: <code>1e-20</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter_final</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter_final\n</code></pre> Description Number of iterations for last descent strategy</p> <p>Default: <code>100</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/default_init_step_size</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/default_init_step_size\n</code></pre> Description Initial step size</p> <p>Default: <code>1</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/step_ratio</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/step_ratio\n</code></pre> Description Ratio used to decrease the step</p> <p>Default: <code>0.5</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo\n</code></pre> Description Options for Armijo.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo/c</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo/c\n</code></pre> Description Armijo c parameter.</p> <p>Default: <code>0.0001</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo\n</code></pre> Description Options for RobustArmijo.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo/delta_relative_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo/delta_relative_tolerance\n</code></pre> Description Relative tolerance on E to switch to approximate.</p> <p>Default: <code>0.1</code></p> <code>/solver/augmented_lagrangian/nonlinear/allow_out_of_iterations</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/allow_out_of_iterations\n</code></pre> Description If false (default), an exception will be thrown when the nonlinear solver reaches the maximum number of iterations.</p> <p>Default: <code>False</code></p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS\n</code></pre> Description Options for LBFGS.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS/history_size</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS/history_size\n</code></pre> Description The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B\n</code></pre> Description Options for the boxed L-BFGS.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B/history_size</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B/history_size\n</code></pre> Description The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton\n</code></pre> Description Options for Newton.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/Newton/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/residual_tolerance\n</code></pre> Description Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_min\n</code></pre> Description Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_max\n</code></pre> Description Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_inc\n</code></pre> Description Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/force_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/force_psd_projection\n</code></pre> Description Force the Hessian to be PSD when using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>False</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection\n</code></pre> Description Use PSD as fallback using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>True</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection_in_regularized</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection_in_regularized\n</code></pre> Description Use PSD in regularized Newton.</p> <p>Default: <code>True</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM\n</code></pre> Description Options for ADAM.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM\n</code></pre> Description Options for ADAM.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/alpha\n</code></pre> Description Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_1\n</code></pre> Description Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_2\n</code></pre> Description Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/epsilon\n</code></pre> Description Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for ADAM.</p> <p>Default: <code>0.3</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent\n</code></pre> Description Options for Stochastic Gradient Descent.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent/erase_component_probability\n</code></pre> Description Probability of erasing a component on the gradient for StochasticGradientDescent.</p> <p>Default: <code>0.3</code></p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints\n</code></pre> Description FIXME: Missing documentation in the specification.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds</code> (<code>list</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds\n</code></pre> Description Box constraints on optimization variables.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*</code> <pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*</code> (<code>list</code>)<code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*</code> (<code>float</code>) <p>Description Box constraint values on optimization variables.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*/*</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*/*\n</code></pre> Description Box constraint values on optimization variables.</p> <p>Description Box constraint values on optimization variables.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change</code> <pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change</code> (<code>float</code>)<code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change</code> (<code>list</code>) <p>Description Maximum change of optimization variables in one iteration, only for solvers with box constraints. Negative value to disable this constraint.</p> <p>Default: <code>-1</code></p> <p>Description Maximum change of optimization variables in one iteration, only for solvers with box constraints.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change/*</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change/*\n</code></pre> Description Maximum change of every optimization variable in one iteration, only for solvers with box constraints.</p> <code>/solver/augmented_lagrangian/nonlinear/advanced</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced\n</code></pre> Description Nonlinear solver advanced options</p> <p>Default: <code>None</code> Optional</p> <code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta\n</code></pre> Description Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta_step_tol</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta_step_tol\n</code></pre> Description Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>100</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/derivative_along_delta_x_tol</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/derivative_along_delta_x_tol\n</code></pre> Description Quit the optimization if the directional derivative along the descent direction is smaller than this tolerance.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/apply_gradient_fd</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/apply_gradient_fd\n</code></pre> Description Expensive Option: For every iteration of the nonlinear solver, run finite difference to verify gradient of energy.</p> <p>Default: <code>'None'</code></p> <p>Options: <code>['None', 'DirectionalDerivative', 'FullFiniteDiff']</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/gradient_fd_eps</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/gradient_fd_eps\n</code></pre> Description Expensive Option: Eps for finite difference to verify gradient of energy.</p> <p>Default: <code>1e-07</code></p> <code>/solver/contact</code> (<code>object</code>) <p><pre><code>/solver/contact\n</code></pre> Description Settings for contact handling in the solver.</p> <p>Default: <code>None</code> Optional</p> <code>/solver/contact/CCD</code> (<code>object</code>) <p><pre><code>/solver/contact/CCD\n</code></pre> Description CCD options</p> <p>Default: <code>None</code> Optional</p> <code>/solver/contact/CCD/broad_phase</code> (<code>string</code>) <p><pre><code>/solver/contact/CCD/broad_phase\n</code></pre> Description Broad phase collision-detection algorithm to use</p> <p>Default: <code>'hash_grid'</code></p> <p>Options: <code>['hash_grid', 'HG', 'brute_force', 'BF', 'spatial_hash', 'SH', 'bvh', 'BVH', 'sweep_and_prune', 'SAP', 'sweep_and_tiniest_queue', 'STQ']</code></p> <code>/solver/contact/CCD/tolerance</code> (<code>float</code>) <p><pre><code>/solver/contact/CCD/tolerance\n</code></pre> Description CCD tolerance</p> <p>Default: <code>1e-06</code></p> <code>/solver/contact/CCD/max_iterations</code> (<code>int</code>) <p><pre><code>/solver/contact/CCD/max_iterations\n</code></pre> Description Maximum number of iterations for continuous collision detection</p> <p>Default: <code>1000000</code></p> <code>/solver/contact/friction_iterations</code> (<code>int</code>) <p><pre><code>/solver/contact/friction_iterations\n</code></pre> Description Maximum number of update iterations for lagged friction formulation (see IPC paper).</p> <p>Default: <code>1</code></p> <code>/solver/contact/tangential_adhesion_iterations</code> (<code>int</code>) <p><pre><code>/solver/contact/tangential_adhesion_iterations\n</code></pre> Description Maximum number of update iterations for lagged tangential adhesion formulation (see IPC paper).</p> <p>Default: <code>1</code></p> <code>/solver/contact/friction_convergence_tol</code> (<code>float</code>) <p><pre><code>/solver/contact/friction_convergence_tol\n</code></pre> Description Tolerence for friction convergence</p> <p>Default: <code>0.01</code></p> <code>/solver/contact/barrier_stiffness</code> <pre><code>/solver/contact/barrier_stiffness\n</code></pre> <code>/solver/contact/barrier_stiffness</code> (<code>string</code>)<code>/solver/contact/barrier_stiffness</code> (<code>float</code>) <p>Description How coefficient of clamped log-barrier function for contact is updated</p> <p>Default: <code>'adaptive'</code></p> <p>Options: <code>['adaptive']</code></p> <p>Description The coefficient of clamped log-barrier function value when not adaptive</p> <code>/solver/contact/initial_barrier_stiffness</code> (<code>float</code>) <p><pre><code>/solver/contact/initial_barrier_stiffness\n</code></pre> Description Initial barrier stiffness if adaptive barrier is used.</p> <p>Default: <code>1</code></p> <code>/solver/rayleigh_damping</code> (<code>list</code>) <p><pre><code>/solver/rayleigh_damping\n</code></pre> Description Apply Rayleigh damping.</p> <code>/solver/rayleigh_damping/*</code> <pre><code>/solver/rayleigh_damping/*\n</code></pre> <code>/solver/rayleigh_damping/*</code> (<code>object</code>)<code>/solver/rayleigh_damping/*</code> (<code>object</code>) <p>Description Apply Rayleigh damping to the given Form with a stiffness ratio. Required</p> <code>/solver/rayleigh_damping/*/form</code> (<code>string</code>) <p><pre><code>/solver/rayleigh_damping/*/form\n</code></pre> Description Form to damp.</p> <p>Options: <code>['elasticity', 'contact', 'friction']</code></p> <code>/solver/rayleigh_damping/*/stiffness_ratio</code> (<code>float</code>) <p><pre><code>/solver/rayleigh_damping/*/stiffness_ratio\n</code></pre> Description Ratio of to damp (stiffness = 0.75 * stiffness_ratio * \u0394t\u00b3).</p> <p>Range: <code>[0, inf]</code></p> <p>Optional</p> <code>/solver/rayleigh_damping/*/lagging_iterations</code> (<code>int</code>) <p><pre><code>/solver/rayleigh_damping/*/lagging_iterations\n</code></pre> Description Maximum number of update iterations for lagging.</p> <p>Default: <code>1</code></p> <p>Description Apply Rayleigh damping to the given Form with a stiffness. Required</p> <code>/solver/rayleigh_damping/*/form</code> (<code>string</code>) <p><pre><code>/solver/rayleigh_damping/*/form\n</code></pre> Description Form to damp.</p> <p>Options: <code>['elasticity', 'contact', 'friction']</code></p> <code>/solver/rayleigh_damping/*/stiffness</code> (<code>float</code>) <p><pre><code>/solver/rayleigh_damping/*/stiffness\n</code></pre> Description Ratio of to damp.</p> <p>Range: <code>[0, inf]</code></p> <p>Optional</p> <code>/solver/rayleigh_damping/*/lagging_iterations</code> (<code>int</code>) <p><pre><code>/solver/rayleigh_damping/*/lagging_iterations\n</code></pre> Description Maximum number of update iterations for lagging.</p> <p>Default: <code>1</code></p> <code>/solver/advanced</code> (<code>object</code>) <p><pre><code>/solver/advanced\n</code></pre> Description Advanced settings for the solver</p> <p>Default: <code>None</code> Optional</p> <code>/solver/advanced/cache_size</code> (<code>int</code>) <p><pre><code>/solver/advanced/cache_size\n</code></pre> Description Maximum number of elements when the assembly values are cached.</p> <p>Default: <code>900000</code></p> <code>/solver/advanced/lump_mass_matrix</code> (<code>bool</code>) <p><pre><code>/solver/advanced/lump_mass_matrix\n</code></pre> Description If true, use diagonal mass matrix with entries on the diagonal equal to the sum of entries in each row of the full mass matrix.}</p> <p>Default: <code>False</code></p> <code>/solver/advanced/lagged_regularization_weight</code> (<code>float</code>) <p><pre><code>/solver/advanced/lagged_regularization_weight\n</code></pre> Description Weight used to regularize singular static problems.</p> <p>Default: <code>0</code></p> <code>/solver/advanced/lagged_regularization_iterations</code> (<code>int</code>) <p><pre><code>/solver/advanced/lagged_regularization_iterations\n</code></pre> Description Number of regularize singular static problems.</p> <p>Default: <code>1</code></p> <code>/solver/advanced/check_inversion</code> (<code>string</code>) <p><pre><code>/solver/advanced/check_inversion\n</code></pre> Description The method for checking if any element is flipped.</p> <p>Default: <code>'Discrete'</code></p> <p>Options: <code>['Discrete', 'Conservative']</code></p> <code>/solver/advanced/jacobian_threshold</code> (<code>float</code>) <p><pre><code>/solver/advanced/jacobian_threshold\n</code></pre> Description .</p> <p>Default: <code>0</code></p> <code>/boundary_conditions</code> (<code>object</code>) <p><pre><code>/boundary_conditions\n</code></pre> Description The settings for boundary conditions.</p> <p>Default: <code>None</code> Optional</p> <code>/boundary_conditions/rhs</code> <pre><code>/boundary_conditions/rhs\n</code></pre> <code>/boundary_conditions/rhs</code> (<code>float</code>)<code>/boundary_conditions/rhs</code> (<code>string</code>)<code>/boundary_conditions/rhs</code> (<code>object</code>)<code>/boundary_conditions/rhs</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/rhs/value</code> <pre><code>/boundary_conditions/rhs/value\n</code></pre> <code>/boundary_conditions/rhs/value</code> (<code>float</code>)<code>/boundary_conditions/rhs/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/rhs/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/rhs/unit\n</code></pre> Description The unit of the Value</p> <p>Description Right-hand side of the system being solved for vector-valued PDEs.</p> <code>/boundary_conditions/rhs/*</code> <pre><code>/boundary_conditions/rhs/*\n</code></pre> <code>/boundary_conditions/rhs/*</code> (<code>float</code>)<code>/boundary_conditions/rhs/*</code> (<code>string</code>)<code>/boundary_conditions/rhs/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/rhs/*/value</code> <pre><code>/boundary_conditions/rhs/*/value\n</code></pre> <code>/boundary_conditions/rhs/*/value</code> (<code>float</code>)<code>/boundary_conditions/rhs/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/rhs/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/rhs/*/unit\n</code></pre> Description The unit of the Value</p> <code>/boundary_conditions/dirichlet_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary\n</code></pre> Description The list of boundary conditions for the main variable. Elements of the list are assignment pairs (ID, value) where ID is assigned by surface selection.</p> <code>/boundary_conditions/dirichlet_boundary/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*</code> (<code>object</code>)<code>/boundary_conditions/dirichlet_boundary/*</code> (<code>string</code>) <p>Description Dirichlet boundary condition.</p> <p>Default: <code>None</code> Required</p> <code>/boundary_conditions/dirichlet_boundary/*/id</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/id\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/id</code> (<code>int</code>)<code>/boundary_conditions/dirichlet_boundary/*/id</code> (<code>string</code>) <p>Description ID of boundary condition from surface selection.</p> <p>Range: <code>[0, 2147483646]</code></p> <p>Description select all ids.</p> <p>Options: <code>['all']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/value</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/value\n</code></pre> Description Values of boundary condition, length 1 for scalar-valued pde, \u2154 for vector-valued PDEs depending on the dimension.</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>object</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/value</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/value\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/unit\n</code></pre> Description The unit of the Value</p> <p>Description Dirichlet boundary condition specified per timestep.</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/*\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> (<code>string</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/boundary_conditions/dirichlet_boundary/*/time_reference</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/time_reference\n</code></pre> Description List of times when the Dirichlet boundary condition is specified</p> <code>/boundary_conditions/dirichlet_boundary/*/time_reference/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/time_reference/*\n</code></pre> Description Values of Dirichlet boundary condition for timestep</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation\n</code></pre> Description interpolation of boundary condition</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none Description interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> Required</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp Description interpolation of boundary condition Required</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/to\n</code></pre> Description interpolation ending time</p> <p>Optional</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/from\n</code></pre> Description interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant Description interpolation of boundary condition Required</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic Description interpolation of boundary condition Required</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/dimension</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/dimension\n</code></pre> Description List of 2 (2D) or 3 (3D) boolean values indicating if the Dirichlet boundary condition  is applied for a particular dimension.</p> <code>/boundary_conditions/dirichlet_boundary/*/dimension/*</code> (<code>bool</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/dimension/*\n</code></pre> Description value</p> <p>Default: <code>True</code></p> <p>Description Dirichlet boundary condition loaded from a file,  , 1 for scalar, \u2154 for tensor depending on dimension. <code>/boundary_conditions/neumann_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary\n</code></pre> Description The list of boundary conditions for the main variable. Elements of the list are assignment pairs (ID, value) where ID is assigned by surface selection.</p> <code>/boundary_conditions/neumann_boundary/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*\n</code></pre> Description Neumann boundary condition</p> <p>Default: <code>None</code> Required</p> <code>/boundary_conditions/neumann_boundary/*/id</code> <pre><code>/boundary_conditions/neumann_boundary/*/id\n</code></pre> <code>/boundary_conditions/neumann_boundary/*/id</code> (<code>int</code>)<code>/boundary_conditions/neumann_boundary/*/id</code> (<code>string</code>) <p>Description ID of boundary condition from surface selection.</p> <p>Range: <code>[0, 2147483646]</code></p> <p>Description select all ids.</p> <p>Options: <code>['all']</code></p> <code>/boundary_conditions/neumann_boundary/*/value</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/value\n</code></pre> Description Values of boundary condition, length 1 for scalar-valued pde, \u2154 for vector-valued PDEs depending on the dimension.</p> <code>/boundary_conditions/neumann_boundary/*/value/*</code> <pre><code>/boundary_conditions/neumann_boundary/*/value/*\n</code></pre> <code>/boundary_conditions/neumann_boundary/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/neumann_boundary/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/neumann_boundary/*/value/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/neumann_boundary/*/value/*/value</code> <pre><code>/boundary_conditions/neumann_boundary/*/value/*/value\n</code></pre> <code>/boundary_conditions/neumann_boundary/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/neumann_boundary/*/value/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/neumann_boundary/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/value/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/boundary_conditions/neumann_boundary/*/interpolation</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation\n</code></pre> Description interpolation of boundary condition</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*</code> <pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none Description interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> Required</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp Description interpolation of boundary condition Required</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/to\n</code></pre> Description interpolation ending time</p> <p>Optional</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/from\n</code></pre> Description interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant Description interpolation of boundary condition Required</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic Description interpolation of boundary condition Required</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary\n</code></pre> Description Neumann boundary condition for normal times value for vector-valued PDEs.</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*\n</code></pre> Description pressure BC entry</p> <p>Default: <code>None</code> Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/id</code> (<code>int</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/id\n</code></pre> Description ID for the pressure Neumann boundary condition</p> <p>Range: <code>[0, 2147483646]</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> <pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/value\n</code></pre> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> (<code>float</code>)<code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> (<code>string</code>)<code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value</code> <pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value\n</code></pre> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value</code> (<code>float</code>)<code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation</code> <pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none Description interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp Description interpolation of boundary condition Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/to\n</code></pre> Description interpolation ending time</p> <p>Optional</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/from\n</code></pre> Description interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant Description interpolation of boundary condition Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic Description interpolation of boundary condition Required</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/pressure_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/pressure_boundary\n</code></pre> Description Neumann boundary condition for normal times value for vector-valued PDEs.</p> <code>/boundary_conditions/pressure_boundary/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*\n</code></pre> Description pressure BC entry</p> <p>Default: <code>None</code> Required</p> <code>/boundary_conditions/pressure_boundary/*/id</code> (<code>int</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/id\n</code></pre> Description ID for the pressure Neumann boundary condition</p> <p>Range: <code>[0, 2147483646]</code></p> <code>/boundary_conditions/pressure_boundary/*/value</code> <pre><code>/boundary_conditions/pressure_boundary/*/value\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value</code> (<code>string</code>)<code>/boundary_conditions/pressure_boundary/*/value</code> (<code>object</code>)<code>/boundary_conditions/pressure_boundary/*/value</code> (<code>list</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/pressure_boundary/*/value/value</code> <pre><code>/boundary_conditions/pressure_boundary/*/value/value\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/pressure_boundary/*/value/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/value/unit\n</code></pre> Description The unit of the Value</p> <p>Description Values of pressure boundary condition specified per timestep</p> <code>/boundary_conditions/pressure_boundary/*/value/*</code> <pre><code>/boundary_conditions/pressure_boundary/*/value/*\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/pressure_boundary/*/value/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Default: <code>0</code></p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/pressure_boundary/*/value/*/value</code> <pre><code>/boundary_conditions/pressure_boundary/*/value/*/value\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/pressure_boundary/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/value/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/boundary_conditions/pressure_boundary/*/time_reference</code> (<code>list</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/time_reference\n</code></pre> Description List of times when the pressure boundary condition is specified</p> <code>/boundary_conditions/pressure_boundary/*/time_reference/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/time_reference/*\n</code></pre> Description Values of pressure boundary condition for timestep</p> <code>/boundary_conditions/pressure_cavity</code> (<code>list</code>) <p><pre><code>/boundary_conditions/pressure_cavity\n</code></pre> Description Neumann boundary condition for normal times value for vector-valued PDEs.</p> <code>/boundary_conditions/pressure_cavity/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/pressure_cavity/*\n</code></pre> Description pressure BC entry</p> <p>Default: <code>None</code> Required</p> <code>/boundary_conditions/pressure_cavity/*/id</code> (<code>int</code>) <p><pre><code>/boundary_conditions/pressure_cavity/*/id\n</code></pre> Description ID for the pressure Neumann boundary condition</p> <p>Range: <code>[0, 2147483646]</code></p> <code>/boundary_conditions/pressure_cavity/*/value</code> <pre><code>/boundary_conditions/pressure_cavity/*/value\n</code></pre> <code>/boundary_conditions/pressure_cavity/*/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_cavity/*/value</code> (<code>string</code>)<code>/boundary_conditions/pressure_cavity/*/value</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/pressure_cavity/*/value/value</code> <pre><code>/boundary_conditions/pressure_cavity/*/value/value\n</code></pre> <code>/boundary_conditions/pressure_cavity/*/value/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_cavity/*/value/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/pressure_cavity/*/value/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/pressure_cavity/*/value/unit\n</code></pre> Description The unit of the Value</p> <code>/boundary_conditions/obstacle_displacements</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements\n</code></pre> Description The list of boundary conditions for the main variable. Elements of the list are assignment pairs (ID, value) where ID is assigned by surface selection.</p> <code>/boundary_conditions/obstacle_displacements/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*\n</code></pre> Description Obstacle displacements</p> <p>Default: <code>None</code> Required</p> <code>/boundary_conditions/obstacle_displacements/*/id</code> <pre><code>/boundary_conditions/obstacle_displacements/*/id\n</code></pre> <code>/boundary_conditions/obstacle_displacements/*/id</code> (<code>int</code>)<code>/boundary_conditions/obstacle_displacements/*/id</code> (<code>string</code>) <p>Description ID of boundary condition from surface selection.</p> <p>Range: <code>[0, 2147483646]</code></p> <p>Description select all ids.</p> <p>Options: <code>['all']</code></p> <code>/boundary_conditions/obstacle_displacements/*/value</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/value\n</code></pre> Description Values of boundary condition, length 1 for scalar-valued pde, \u2154 for vector-valued PDEs depending on the dimension.</p> <code>/boundary_conditions/obstacle_displacements/*/value/*</code> <pre><code>/boundary_conditions/obstacle_displacements/*/value/*\n</code></pre> <code>/boundary_conditions/obstacle_displacements/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/obstacle_displacements/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/obstacle_displacements/*/value/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/boundary_conditions/obstacle_displacements/*/value/*/value</code> <pre><code>/boundary_conditions/obstacle_displacements/*/value/*/value\n</code></pre> <code>/boundary_conditions/obstacle_displacements/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/obstacle_displacements/*/value/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/boundary_conditions/obstacle_displacements/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/value/*/unit\n</code></pre> Description The unit of the Value</p> <p>Optional</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation\n</code></pre> Description interpolation of boundary condition</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*</code> <pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none Description interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> Required</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp Description interpolation of boundary condition Required</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/to\n</code></pre> Description interpolation ending time</p> <p>Optional</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/from\n</code></pre> Description interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant Description interpolation of boundary condition Required</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear Description interpolation of boundary condition Required</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic Description interpolation of boundary condition Required</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre> Description type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points\n</code></pre> Description interpolation time points</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*\n</code></pre> Description interpolation time point</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values\n</code></pre> Description interpolation values</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*\n</code></pre> Description interpolation value</p> <p>Optional</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend\n</code></pre> Description how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/periodic_boundary</code> (<code>object</code>) <p><pre><code>/boundary_conditions/periodic_boundary\n</code></pre> Description Options for periodic boundary conditions.</p> <p>Default: <code>None</code> Optional</p> <code>/boundary_conditions/periodic_boundary/enabled</code> (<code>bool</code>) <p><pre><code>/boundary_conditions/periodic_boundary/enabled\n</code></pre> Description</p> <p>Default: <code>False</code></p> <code>/boundary_conditions/periodic_boundary/tolerance</code> (<code>float</code>) <p><pre><code>/boundary_conditions/periodic_boundary/tolerance\n</code></pre> Description Relative tolerance of deciding periodic correspondence</p> <p>Default: <code>1e-05</code></p> <code>/boundary_conditions/periodic_boundary/correspondence</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/correspondence\n</code></pre> Description Periodic directions for periodic boundary conditions. If not specified, default to axis-aligned directions.</p> <code>/boundary_conditions/periodic_boundary/correspondence/*</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/correspondence/*\n</code></pre> Description One periodic direction.</p> <code>/boundary_conditions/periodic_boundary/correspondence/*/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/periodic_boundary/correspondence/*/*\n</code></pre> Description One entry of a periodic direction.</p> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/linear_displacement_offset\n</code></pre> Description</p> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*\n</code></pre> Description</p> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*</code> <pre><code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*\n</code></pre> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*</code> (<code>float</code>)<code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*</code> (<code>string</code>) <p>Description</p> <p>Description</p> <code>/boundary_conditions/periodic_boundary/fixed_macro_strain</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/fixed_macro_strain\n</code></pre> Description</p> <code>/boundary_conditions/periodic_boundary/fixed_macro_strain/*</code> (<code>int</code>) <p><pre><code>/boundary_conditions/periodic_boundary/fixed_macro_strain/*\n</code></pre> Description</p> <code>/boundary_conditions/periodic_boundary/force_zero_mean</code> (<code>bool</code>) <p><pre><code>/boundary_conditions/periodic_boundary/force_zero_mean\n</code></pre> Description The periodic solution is not unique, set to true to find the solution with zero mean.</p> <p>Default: <code>False</code></p> <code>/initial_conditions</code> (<code>object</code>) <p><pre><code>/initial_conditions\n</code></pre> Description Initial conditions for the time-dependent problem, imposed on the main variable, its derivative or second derivative</p> <p>Default: <code>None</code> Optional</p> <code>/initial_conditions/solution</code> (<code>list</code>) <p><pre><code>/initial_conditions/solution\n</code></pre> Description initial solution</p> <code>/initial_conditions/solution/*</code> (<code>object</code>) <p><pre><code>/initial_conditions/solution/*\n</code></pre> Description A list of (ID, value) pairs defining the initial conditions for the main variable values. Ids are set by selection, and values can be floats or formulas.</p> <p>Default: <code>None</code> Required</p> <code>/initial_conditions/solution/*/id</code> (<code>int</code>) <p><pre><code>/initial_conditions/solution/*/id\n</code></pre> Description ID from volume selections</p> <code>/initial_conditions/solution/*/value</code> (<code>list</code>) <p><pre><code>/initial_conditions/solution/*/value\n</code></pre> Description value of the solution</p> <code>/initial_conditions/solution/*/value/*</code> <pre><code>/initial_conditions/solution/*/value/*\n</code></pre> <code>/initial_conditions/solution/*/value/*</code> (<code>float</code>)<code>/initial_conditions/solution/*/value/*</code> (<code>string</code>)<code>/initial_conditions/solution/*/value/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/initial_conditions/solution/*/value/*/value</code> <pre><code>/initial_conditions/solution/*/value/*/value\n</code></pre> <code>/initial_conditions/solution/*/value/*/value</code> (<code>float</code>)<code>/initial_conditions/solution/*/value/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/initial_conditions/solution/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/initial_conditions/solution/*/value/*/unit\n</code></pre> Description The unit of the Value</p> <code>/initial_conditions/velocity</code> (<code>list</code>) <p><pre><code>/initial_conditions/velocity\n</code></pre> Description initial velocity</p> <code>/initial_conditions/velocity/*</code> (<code>object</code>) <p><pre><code>/initial_conditions/velocity/*\n</code></pre> Description A list of (ID, value) pairs defining the initial conditions for the first derivative of the main variable values. Ids are set by selection, and values can be floats or formulas.</p> <p>Default: <code>None</code> Required</p> <code>/initial_conditions/velocity/*/id</code> (<code>int</code>) <p><pre><code>/initial_conditions/velocity/*/id\n</code></pre> Description ID from volume selections</p> <code>/initial_conditions/velocity/*/value</code> (<code>list</code>) <p><pre><code>/initial_conditions/velocity/*/value\n</code></pre> Description value od the initial velocity</p> <code>/initial_conditions/velocity/*/value/*</code> <pre><code>/initial_conditions/velocity/*/value/*\n</code></pre> <code>/initial_conditions/velocity/*/value/*</code> (<code>float</code>)<code>/initial_conditions/velocity/*/value/*</code> (<code>string</code>)<code>/initial_conditions/velocity/*/value/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/initial_conditions/velocity/*/value/*/value</code> <pre><code>/initial_conditions/velocity/*/value/*/value\n</code></pre> <code>/initial_conditions/velocity/*/value/*/value</code> (<code>float</code>)<code>/initial_conditions/velocity/*/value/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/initial_conditions/velocity/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/initial_conditions/velocity/*/value/*/unit\n</code></pre> Description The unit of the Value</p> <code>/initial_conditions/acceleration</code> (<code>list</code>) <p><pre><code>/initial_conditions/acceleration\n</code></pre> Description initial acceleration</p> <code>/initial_conditions/acceleration/*</code> (<code>object</code>) <p><pre><code>/initial_conditions/acceleration/*\n</code></pre> Description entries</p> <p>Default: <code>None</code> Required</p> <code>/initial_conditions/acceleration/*/id</code> (<code>int</code>) <p><pre><code>/initial_conditions/acceleration/*/id\n</code></pre> Description ID from volume selections</p> <code>/initial_conditions/acceleration/*/value</code> (<code>list</code>) <p><pre><code>/initial_conditions/acceleration/*/value\n</code></pre> Description value</p> <code>/initial_conditions/acceleration/*/value/*</code> <pre><code>/initial_conditions/acceleration/*/value/*\n</code></pre> <code>/initial_conditions/acceleration/*/value/*</code> (<code>float</code>)<code>/initial_conditions/acceleration/*/value/*</code> (<code>string</code>)<code>/initial_conditions/acceleration/*/value/*</code> (<code>object</code>) <p>Description Value as a constant float</p> <p>Description Value as an expression of \\(x,y,z,t\\) or a file</p> <p>Description Value with unit Required</p> <code>/initial_conditions/acceleration/*/value/*/value</code> <pre><code>/initial_conditions/acceleration/*/value/*/value\n</code></pre> <code>/initial_conditions/acceleration/*/value/*/value</code> (<code>float</code>)<code>/initial_conditions/acceleration/*/value/*/value</code> (<code>string</code>) <p>Description The value of the constant</p> <p>Description The value as an expression or a file</p> <code>/initial_conditions/acceleration/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/initial_conditions/acceleration/*/value/*/unit\n</code></pre> Description The unit of the Value</p> <code>/constraints</code> (<code>object</code>) <p><pre><code>/constraints\n</code></pre> Description soft and hard constraints</p> <p>Default: <code>None</code> Optional</p> <code>/constraints/soft</code> (<code>list</code>) <p><pre><code>/constraints/soft\n</code></pre> Description list of file containing soft constraints</p> <code>/constraints/soft/*</code> (<code>object</code>) <p><pre><code>/constraints/soft/*\n</code></pre> Description constraint hdf5 file for soft constraint w||Ax-b||^2. The file must contain these datasets: weight w, local2global, dense/sparse matrix A, and vector b. The colums of b nees to be the same as the dimentionality of the problem. if A is sparse it should contain A_triplets/value A_triplets/cols A_triplets/rows A_triplets/shape</p> <p>Default: <code>''</code> Optional</p> <code>/constraints/soft/*/weight</code> (<code>float</code>) <p><pre><code>/constraints/soft/*/weight\n</code></pre> Description weight</p> <p>Default: <code>0</code></p> <code>/constraints/soft/*/data</code> (<code>string</code>) <p><pre><code>/constraints/soft/*/data\n</code></pre> Description constraint hdf5 file for soft constraint w||Ax-b||^2. The file must contain these datasets: local2global, dense/sparse matrix A, and vector b. The colums of b nees to be the same as the dimentionality of the problem. if A is sparse it should contain A_triplets/value A_triplets/col A_triplets/rows A_triplets/shape</p> <p>Default: <code>''</code></p> <code>/constraints/hard</code> (<code>list</code>) <p><pre><code>/constraints/hard\n</code></pre> Description list of file containing hard constraints</p> <code>/constraints/hard/*</code> (<code>string</code>) <p><pre><code>/constraints/hard/*\n</code></pre> Description constraint hdf5 file for hard constraint Ax=b. The file must contain these datasets: local2global, dense/sparse matrix A, and vector b. The colums of b nees to be the same as the dimentionality of the problem. if A is sparse it should contain A_triplets/value A_triplets/cols A_triplets/rows A_triplets/shape</p> <p>Default: <code>''</code></p> <code>/output</code> (<code>object</code>) <p><pre><code>/output\n</code></pre> Description output settings</p> <p>Default: <code>None</code> Optional</p> <code>/output/directory</code> (<code>string</code>) <p><pre><code>/output/directory\n</code></pre> Description Directory for output files.</p> <p>Default: <code>''</code></p> <code>/output/log</code> (<code>object</code>) <p><pre><code>/output/log\n</code></pre> Description Setting for the output log.</p> <p>Default: <code>None</code> Optional</p> <code>/output/log/level</code> <pre><code>/output/log/level\n</code></pre> <code>/output/log/level</code> (<code>int</code>)<code>/output/log/level</code> (<code>string</code>) <p>Description Level of logging, 0 trace, 1 debug, 2 info, 3 warning, 4 error, 5 critical, and 6 off.</p> <p>Range: <code>[0, 6]</code></p> <p>Description Level of logging.</p> <p>Default: <code>'debug'</code></p> <p>Options: <code>['trace', 'debug', 'info', 'warning', 'error', 'critical', 'off']</code></p> <code>/output/log/file_level</code> <pre><code>/output/log/file_level\n</code></pre> <code>/output/log/file_level</code> (<code>int</code>)<code>/output/log/file_level</code> (<code>string</code>) <p>Description Level of logging to a file, 0 trace, 1 debug, 2 info, 3 warning, 4 error, 5 critical, and 6 off.</p> <p>Range: <code>[0, 6]</code></p> <p>Description Level of logging.</p> <p>Default: <code>'trace'</code></p> <p>Options: <code>['trace', 'debug', 'info', 'warning', 'error', 'critical', 'off']</code></p> <code>/output/log/path</code> (<code>string</code>) <p><pre><code>/output/log/path\n</code></pre> Description File where to save the log; empty string is output to terminal.</p> <p>Default: <code>''</code></p> <code>/output/log/quiet</code> (<code>bool</code>) <p><pre><code>/output/log/quiet\n</code></pre> Description Disable cout for logging.</p> <p>Default: <code>False</code></p> <code>/output/json</code> (<code>string</code>) <p><pre><code>/output/json\n</code></pre> Description File name for JSON output statistics on time/error/etc.</p> <p>Default: <code>''</code></p> <code>/output/restart_json</code> (<code>string</code>) <p><pre><code>/output/restart_json\n</code></pre> Description File name for JSON output to restart the simulation.</p> <p>Default: <code>''</code></p> <code>/output/paraview</code> (<code>object</code>) <p><pre><code>/output/paraview\n</code></pre> Description Output in paraview format</p> <p>Default: <code>None</code> Optional</p> <code>/output/paraview/file_name</code> (<code>string</code>) <p><pre><code>/output/paraview/file_name\n</code></pre> Description Paraview output file name</p> <p>Default: <code>''</code></p> <code>/output/paraview/vismesh_rel_area</code> (<code>float</code>) <p><pre><code>/output/paraview/vismesh_rel_area\n</code></pre> Description relative area for the upsampled visualisation mesh</p> <p>Default: <code>1e-05</code></p> <code>/output/paraview/skip_frame</code> (<code>int</code>) <p><pre><code>/output/paraview/skip_frame\n</code></pre> Description export every skip_frame-th frames for time dependent simulations</p> <p>Default: <code>1</code></p> <code>/output/paraview/high_order_mesh</code> (<code>bool</code>) <p><pre><code>/output/paraview/high_order_mesh\n</code></pre> Description Enables/disables high-order output for paraview. Supported only for isoparametric or linear meshes with high-order solutions.</p> <p>Default: <code>True</code></p> <code>/output/paraview/volume</code> (<code>bool</code>) <p><pre><code>/output/paraview/volume\n</code></pre> Description Export volumetric mesh</p> <p>Default: <code>True</code></p> <code>/output/paraview/surface</code> (<code>bool</code>) <p><pre><code>/output/paraview/surface\n</code></pre> Description Export surface mesh (in 2d polygon)</p> <p>Default: <code>False</code></p> <code>/output/paraview/wireframe</code> (<code>bool</code>) <p><pre><code>/output/paraview/wireframe\n</code></pre> Description Export the wireframe of the mesh</p> <p>Default: <code>False</code></p> <code>/output/paraview/fields</code> (<code>list</code>) <p><pre><code>/output/paraview/fields\n</code></pre> Description list of names of fields to export. If empty, all fields are exported.</p> <code>/output/paraview/fields/*</code> (<code>string</code>) <p><pre><code>/output/paraview/fields/*\n</code></pre> Description field name</p> <p>Default: <code>''</code></p> <code>/output/paraview/points</code> (<code>bool</code>) <p><pre><code>/output/paraview/points\n</code></pre> Description Export the Dirichlet points</p> <p>Default: <code>False</code></p> <code>/output/paraview/options</code> (<code>object</code>) <p><pre><code>/output/paraview/options\n</code></pre> Description Optional fields in the output</p> <p>Default: <code>None</code> Optional</p> <code>/output/paraview/options/use_hdf5</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/use_hdf5\n</code></pre> Description If true, export the data as hdf5, compatible with paraview &gt;5.11</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/material</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/material\n</code></pre> Description If true, write out material values sampled on the vertices of the mesh</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/body_ids</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/body_ids\n</code></pre> Description Export volumes ids</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/contact_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/contact_forces\n</code></pre> Description If true, write out contact forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/friction_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/friction_forces\n</code></pre> Description If true, write out friction forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/normal_adhesion_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/normal_adhesion_forces\n</code></pre> Description If true, write out normal adhesion forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/tangential_adhesion_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/tangential_adhesion_forces\n</code></pre> Description If true, write out tangential adhesion forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/velocity</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/velocity\n</code></pre> Description If true, write out velocities</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/acceleration</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/acceleration\n</code></pre> Description If true, write out accelerations</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/scalar_values</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/scalar_values\n</code></pre> Description If true, write out scalar values</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/tensor_values</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/tensor_values\n</code></pre> Description If true, write out tensor values</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/discretization_order</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/discretization_order\n</code></pre> Description If true, write out discretization order</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/nodes</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/nodes\n</code></pre> Description If true, write out node order</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/forces\n</code></pre> Description If true, write out all variational forces on the FE mesh</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/force_high_order</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/force_high_order\n</code></pre> Description If true, force write out high-order mesh, might break the output</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/jacobian_validity</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/jacobian_validity\n</code></pre> Description If true, perform robust Jacobian check on the deformed elements and mark elements with non-positive Jacobian.</p> <p>Default: <code>False</code></p> <code>/output/data</code> (<code>object</code>) <p><pre><code>/output/data\n</code></pre> Description File names to write output data to.</p> <p>Default: <code>None</code> Optional</p> <code>/output/data/solution</code> (<code>string</code>) <p><pre><code>/output/data/solution\n</code></pre> Description Main variable solution. Unrolled [xyz, xyz, \u2026] using PolyFEM ordering. If reorder_nodes exports the solution with the same order the vertices of the input mesh as a #n x d file</p> <p>Default: <code>''</code></p> <code>/output/data/full_mat</code> (<code>string</code>) <p><pre><code>/output/data/full_mat\n</code></pre> Description System matrix without boundary conditions. Doesn\u2019t work for nonlinear problems</p> <p>Default: <code>''</code></p> <code>/output/data/stiffness_mat</code> (<code>string</code>) <p><pre><code>/output/data/stiffness_mat\n</code></pre> Description System matrix with boundary conditions. Doesn\u2019t work for nonlinear problems</p> <p>Default: <code>''</code></p> <code>/output/data/stress_mat</code> (<code>string</code>) <p><pre><code>/output/data/stress_mat\n</code></pre> Description Exports stress</p> <p>Default: <code>''</code></p> <code>/output/data/state</code> (<code>string</code>) <p><pre><code>/output/data/state\n</code></pre> Description Writes the complete state in PolyFEM hdf5 format, used to restart the sim</p> <p>Default: <code>''</code></p> <code>/output/data/rest_mesh</code> (<code>string</code>) <p><pre><code>/output/data/rest_mesh\n</code></pre> Description Writes the rest mesh in MSH format, used to restart the sim</p> <p>Default: <code>''</code></p> <code>/output/data/mises</code> (<code>string</code>) <p><pre><code>/output/data/mises\n</code></pre> Description File name to write per-node Von Mises stress values to.</p> <p>Default: <code>''</code></p> <code>/output/data/nodes</code> (<code>string</code>) <p><pre><code>/output/data/nodes\n</code></pre> Description Writes the FEM nodes</p> <p>Default: <code>''</code></p> <code>/output/data/advanced</code> (<code>object</code>) <p><pre><code>/output/data/advanced\n</code></pre> Description advanced options</p> <p>Default: <code>None</code> Optional</p> <code>/output/data/advanced/reorder_nodes</code> (<code>bool</code>) <p><pre><code>/output/data/advanced/reorder_nodes\n</code></pre> Description Reorder nodes accodring to input</p> <p>Default: <code>False</code></p> <code>/output/advanced</code> (<code>object</code>) <p><pre><code>/output/advanced\n</code></pre> Description Additional output options</p> <p>Default: <code>None</code> Optional</p> <code>/output/advanced/timestep_prefix</code> (<code>string</code>) <p><pre><code>/output/advanced/timestep_prefix\n</code></pre> Description Prefix for output file names for each time step, the final file is step_i.[vtu|vtm] where i is the time index.</p> <p>Default: <code>'step_'</code></p> <code>/output/advanced/sol_on_grid</code> (<code>float</code>) <p><pre><code>/output/advanced/sol_on_grid\n</code></pre> Description exports the solution sampled on a grid, specify the grid spacing</p> <p>Default: <code>-1</code></p> <code>/output/advanced/compute_error</code> (<code>bool</code>) <p><pre><code>/output/advanced/compute_error\n</code></pre> Description Enables the computation of the error. If no reference solution is provided, return the norms of the solution</p> <p>Default: <code>True</code></p> <code>/output/advanced/sol_at_node</code> (<code>int</code>) <p><pre><code>/output/advanced/sol_at_node\n</code></pre> Description Write out solution values at a specific node. the values will be written in the output JSON file</p> <p>Default: <code>-1</code></p> <code>/output/advanced/vis_boundary_only</code> (<code>bool</code>) <p><pre><code>/output/advanced/vis_boundary_only\n</code></pre> Description saves only elements touching the boundaries</p> <p>Default: <code>False</code></p> <code>/output/advanced/curved_mesh_size</code> (<code>bool</code>) <p><pre><code>/output/advanced/curved_mesh_size\n</code></pre> Description upsample curved edges to compute mesh size</p> <p>Default: <code>False</code></p> <code>/output/advanced/save_solve_sequence_debug</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_solve_sequence_debug\n</code></pre> Description saves AL internal steps, for debugging</p> <p>Default: <code>False</code></p> <code>/output/advanced/save_ccd_debug_meshes</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_ccd_debug_meshes\n</code></pre> Description saves AL internal steps, for debugging</p> <p>Default: <code>False</code></p> <code>/output/advanced/save_time_sequence</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_time_sequence\n</code></pre> Description saves timesteps</p> <p>Default: <code>True</code></p> <code>/output/advanced/save_nl_solve_sequence</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_nl_solve_sequence\n</code></pre> Description saves obj after every nonlinear iteration, for debugging</p> <p>Default: <code>False</code></p> <code>/output/advanced/spectrum</code> (<code>bool</code>) <p><pre><code>/output/advanced/spectrum\n</code></pre> Description exports the spectrum of the matrix in the output JSON. Works only if POLYSOLVE_WITH_SPECTRA is enabled</p> <p>Default: <code>False</code></p> <code>/output/reference</code> (<code>object</code>) <p><pre><code>/output/reference\n</code></pre> Description Write out the analytic/numerical ground-truth solution and or its gradient</p> <p>Default: <code>None</code> Optional</p> <code>/output/reference/solution</code> (<code>list</code>) <p><pre><code>/output/reference/solution\n</code></pre> Description reference solution used to compute errors</p> <code>/output/reference/solution/*</code> (<code>string</code>) <p><pre><code>/output/reference/solution/*\n</code></pre> Description value as a function of \\(x,y,z,t\\)</p> <p>Default: <code>''</code></p> <code>/output/reference/gradient</code> (<code>list</code>) <p><pre><code>/output/reference/gradient\n</code></pre> Description gradient of the reference solution to compute errors</p> <code>/output/reference/gradient/*</code> (<code>string</code>) <p><pre><code>/output/reference/gradient/*\n</code></pre> Description value as a function of \\(x,y,z,t\\)</p> <p>Default: <code>''</code></p> <code>/output/stats</code> (<code>bool</code>) <p><pre><code>/output/stats\n</code></pre> Description Saves csv for energy and stats of the non linear solver.</p> <p>Default: <code>False</code></p> <code>/input</code> (<code>object</code>) <p><pre><code>/input\n</code></pre> Description input data</p> <p>Default: <code>None</code> Optional</p> <code>/input/data</code> (<code>object</code>) <p><pre><code>/input/data\n</code></pre> Description input to restart time dependent sim</p> <p>Default: <code>None</code> Optional</p> <code>/input/data/state</code> (<code>file</code>) <p><pre><code>/input/data/state\n</code></pre> Description input state as hdf5</p> <p>Default: <code>''</code></p> <code>/input/data/reorder</code> (<code>bool</code>) <p><pre><code>/input/data/reorder\n</code></pre> Description reorder input data</p> <p>Default: <code>False</code></p> <code>/tests</code> (<code>object</code>) <p><pre><code>/tests\n</code></pre> Description Used to test to compare different norms of solutions.</p> <p>Default: <code>None</code> Optional</p> <code>/tests/err_h1</code> (<code>float</code>) <p><pre><code>/tests/err_h1\n</code></pre> Description Reference h1 solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_h1_semi</code> (<code>float</code>) <p><pre><code>/tests/err_h1_semi\n</code></pre> Description Reference h1 seminorm solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_l2</code> (<code>float</code>) <p><pre><code>/tests/err_l2\n</code></pre> Description Reference \\(L^2\\) solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_linf</code> (<code>float</code>) <p><pre><code>/tests/err_linf\n</code></pre> Description Reference \\(L^\\infty\\) solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_linf_grad</code> (<code>float</code>) <p><pre><code>/tests/err_linf_grad\n</code></pre> Description Reference \\(L^\\infty\\) solution\u2019s gradient norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_lp</code> (<code>float</code>) <p><pre><code>/tests/err_lp\n</code></pre> Description Reference \\(L^8\\) solution\u2019s gradient norm.</p> <p>Default: <code>0</code></p> <code>/tests/margin</code> (<code>float</code>) <p><pre><code>/tests/margin\n</code></pre> Description Reference tolerance used in tests.</p> <p>Default: <code>1e-05</code></p> <code>/tests/time_steps</code> <pre><code>/tests/time_steps\n</code></pre> <code>/tests/time_steps</code> (<code>int</code>)<code>/tests/time_steps</code> (<code>string</code>) <p>Description Number of time steps to test.</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, inf]</code></p> <p>Description Number of time steps to test.</p> <p>Options: <code>['all', 'static']</code></p>"},{"location":"cxx_index/","title":"C++ Library","text":"<p>PolyFEM in C++ uses modern CMake and is cross-platform.</p>"},{"location":"cxx_index/#compilation","title":"Compilation","text":"<p>All the C++ dependencies required to build the code are automatically downloaded through CMake. We test PolyFEM on macOS, Linux, and Windows, and it should build out-of-the-box with CMake:</p> <pre><code>mkdir build\ncd build\ncmake ..\nmake -j4\n</code></pre>"},{"location":"cxx_index/#optional","title":"Optional","text":"<p>Optionally, the formulas for higher-order bases can be computed at CMake time using a Python script. If you choose to do so, PolyFEM requires a working installation of Python and some additional packages to build correctly:</p> <ul> <li><code>numpy</code> and <code>sympy</code> (optional)</li> <li><code>quadpy</code> (optional)</li> </ul>"},{"location":"cxx_index/#usage","title":"Usage","text":"<p>The main executable, <code>./PolyFEM_bin</code>, can as command-line interface. Simply run:</p> <pre><code>./PolyFEM_bin --help\n</code></pre> <p>More detailed documentation can be found in the tutorial.</p>"},{"location":"json/","title":"JSON Input","text":""},{"location":"json/#json-files-structure","title":"JSON Files Structure","text":"<p><code>PolyFEM_bin</code> expects as input a JSON file containing the setup and parameters of the problem you wish to solve. A basic example of such a file is as follows:</p> <pre><code>{\n\"common\": \"\", // path to another JSON file containing default arguments on which to patch these arguments\n\n\"geometry\": [{\n\"mesh\": \"\" // mesh path (absolute or relative to JSON file)\n}],\n\n\"time\": {                         // time-dependent problem\n\"tend\": 1,                    // end time\n\"dt\": 0.1,                    // time step size\n\"time_steps\": 10,             // (alternativly) number of time steps\n\"integrator\": \"ImplicitEuler\" // time integration method\n},\n\n\"contact\": {\n\"enabled\": true // enable contact handling\n},\n\n\"solver\": {\n\"linear\": {\n\"solver\": \"Eigen::PardisoLDLT\"\n},\n\"nonlinear\": {\n\"line_search\": {\n\"method\": \"backtracking\"\n},\n\"solver\": \"newton\"\n}\n},\n\n// Material parameter\n\"materials\": {\n\"type\": \"NeoHookean\", // material model\n\"E\": 1.5, // Young's modulus\n\"nu\": 0.3, // Poisson ratio\n\"rho\": 1 // density\n},\n\n\"output\": {\n\"json\": \"sim.json\",           // output statistics\n\"paraview\": {                 // output geometry as paraview VTU files\n\"file_name\": \"sim.pvd\",\n\"options\": {\n\"material\": true,     // save material properties\n\"body_ids\": true      // save body ids\n},\n\"vismesh_rel_area\": 1e-05 // relative area for upsampling the solution\n}\n}\n}\n</code></pre>"},{"location":"json/#materials","title":"Materials","text":"<p>Options:</p> <ul> <li>scalar_formulation: <code>Helmholtz</code>, <code>Laplacian</code>, <code>Bilaplacian</code> (mixed)</li> <li>tensor_formulation: <code>HookeLinearElasticity</code>, <code>LinearElasticity</code>, <code>NeoHookean</code>, <code>SaintVenant</code>, <code>IncompressibleLinearElasticity</code> (mixed), <code>Stokes</code> (mixed), <code>NavierStokes</code> (mixed)</li> </ul> <p>Each formulation has a set of material parameters that can be set alongside it in <code>materials</code>.</p> <p>See formulations for more details.</p>"},{"location":"json/#time-integrators","title":"Time Integrators","text":"<p>Options: <code>ImplicitEuler</code>, <code>ImplicitNewmark</code>, <code>BDF</code></p> <p>The parameters for the time integration are stored inside the <code>\"time_integrator_params\"</code> field.</p> <p>See time integrators for more details.</p>"},{"location":"json/#solvers","title":"Solvers","text":""},{"location":"json/#linear-solver","title":"Linear Solver","text":"<p>PolyFEM offers several linear solver options based on compilation options. For more information, see PolySolve a stand-alone linear solver wrapper library used by PolyFEM.</p> <p>Options: <code>AMGCL</code>, <code>Eigen::BiCGSTAB</code>, <code>Eigen::CholmodSupernodalLLT</code>, <code>Eigen::ConjugateGradient</code>, <code>Eigen::DGMRES</code>, <code>Eigen::GMRES</code>, <code>Eigen::LeastSquaresConjugateGradient</code>, <code>Eigen::MINRES</code>, <code>Eigen::PardisoLDLT</code>, <code>Eigen::PardisoLU</code>, <code>Eigen::SimplicialLDLT</code>, <code>Eigen::SparseLU</code>, <code>Eigen::UmfPackLU</code>, <code>Hypre</code>, <code>Pardiso</code></p>"},{"location":"json/#nonlinear-solver","title":"Nonlinear Solver","text":"<p>Options: <code>newton</code>, <code>lbfgs</code></p> <p>See solvers for more details.</p>"},{"location":"json/#line-search","title":"Line Search","text":"<p>Options: <code>backtracking</code>, <code>armijo</code>, <code>armijo_alt</code>, <code>more_thuente</code></p> <p>See solvers for more details.</p>"},{"location":"json/#contact","title":"Contact","text":"<pre><code>\"contact\": {\n\"has_collision\": false,           // Enable collision detection\n\"dhat\": 0.03,                     // Barrier activation distance, check IPC paper\n\"mu\": 0.0,                        // Coefficient of friction (0 disables friction)\n\"epsv\": 1e-3,                     // Smoothing parameter for the transition between static and dynamic friction\n\"friction_iterations\": 1,         // Friction lagging iterations (0 disables friction and &lt; 0 indicates unlimited iterations)\n\"friction_convergence_tol\": 1e-2, // Friction lagging convergence tolerance\n\"barrier_stiffness\": \"adaptive\",\n}\n\n\"solver\": {\n\"contact\": {\n\"broad_phase_method\": \"hash_grid\",\n\"ccd_tolerance\": 1e-6,\n\"ccd_max_iterations\": 1e6\n}\n},\n</code></pre> <p>See contact for more details.</p>"},{"location":"json/#geometry","title":"Geometry","text":"<pre><code>\"geometry\": [{\n\"mesh\": \" \", // Mesh path (absolute or relative to JSON file)\n\"enabled\": true,\n\n\"transformation\": {\n\"scale\": [1, 1, 1],\n\"rotation\": [0, 0, 0],\n\"rotation_mode\": \"xyz\",\n\"translation\": [0, 0, 0]\n},\n\n\"surface_selection\": [],\n\"volume_selection\": [],\n\n\"is_obstacle\": false\n}],\n</code></pre>"},{"location":"json/#mesh","title":"Mesh","text":"<p>The path to the mesh file (absolute or relative to JSON file).</p>"},{"location":"json/#enable","title":"Enable","text":"<p>A boolean for enabling the body. By default, bodies are enabled.</p>"},{"location":"json/#transformation","title":"Transformation","text":"<p>A pre-transform is applied to the geometry at load. The order of the transformation is scale, rotate, then translate.</p>"},{"location":"json/#scale","title":"Scale","text":"<p>The <code>\"scale\"</code> field encodes a scaling of the mesh. This can either be a single number for uniform scaling or an array of \\(d\\) numbers for scaling in each axis.</p>"},{"location":"json/#dimensions","title":"Dimensions","text":"<p>Alternatively, the <code>\"dimensions\"</code> field encodes the absolute size of the mesh\u2019s axis-aligned bounding box. This should be an array of \\(d\\) numbers for the dimensions of each axis. This is equivalent to using a scale of <code>dimensions / initial_dimensions</code> where nonfinite values are replaced by <code>1</code>. If the <code>\"dimensions\"</code> field is present, the <code>\"scale\"</code> field is ignored.</p>"},{"location":"json/#rotation","title":"Rotation","text":"<p>The <code>\"rotation\"</code> field encodes a rotation around the mesh\u2019s origin. The rotation can either be a single number or an array of numbers depending on the <code>\"rotation_mode\"</code>.</p> <p>The <code>\"rotation_mode\"</code> field indicates how the <code>\"rotation\"</code> is represented. The options are:</p> <ul> <li><code>\"axis_angle\"</code>: The <code>\"rotation\"</code> must be an array of four numbers where the first number is the angle of rotation in degrees and the last three are the axis of rotation. The axis will be normalized.</li> <li><code>\"quaternion\"</code>: The <code>\"rotation\"</code> must be an array of four numbers which represent a quaternion \\(w + xi + yj + zk\\). The order of <code>\"rotation\"</code> is <code>[x, y, z, w]</code>. The quaternion will be normalized.</li> <li><code>\"rotation_vector\"</code>: The <code>\"rotation\"</code> must be an array of three numbers whose magnitude is the angle of rotation in degrees and the normalized version is the axis of rotation.</li> <li><code>r\"[xyz]+\"</code>: Indicates the <code>\"rotation\"</code> is a series of Euler angle rotations in degrees. The <code>\"rotation\"</code> can be either a number or variable-length array as long as the length matches the rotation mode string\u2019s length. The Euler rotations will be applied in the order of the string (from left to right).</li> </ul> <p>The default <code>\"rotation_mode\"</code> is <code>\"xyz\"</code> which indicates an Euler angle rotation in the order <code>x</code>, <code>y</code>, and then <code>z</code>.</p>"},{"location":"json/#translation","title":"Translation","text":"<p>The <code>\"translation\"</code> field encodes a translation of the mesh. This must be an array of length \\(d\\), the dimension of the scene.</p>"},{"location":"json/#surface-selection","title":"Surface Selection","text":"<p>Either * a single number for a selection ID to apply to all surfaces in the mesh, * a file path containing one ID per surface element, or * a single or list of selection objects used to assign a given <code>\"id\"</code> (see selections).</p>"},{"location":"json/#volume-selection","title":"Volume Selection","text":"<p>Same as surface selection, but for assigning IDs to the volume elements of the mesh.</p>"},{"location":"json/#obstacles","title":"Obstacles","text":"<p>Obstacles serve as a way of specifying non-simulated collision objects.</p>"},{"location":"json/#mesh_1","title":"Mesh","text":"<p>The path to the mesh file (absolute or relative to JSON file). In addition to the standard volumetric meshes supported by simulated meshes, this can be a codimensional/surface mesh (i.e., points, edges, or triangles). Currently, codimensional points and edges are only supported using the OBJ file format. Codimensional points are specified as vertices that are not indexed by any elements. Codimensional edges are specified as OBJ line elements.</p>"},{"location":"json/#surface-selection_1","title":"Surface Selection","text":"<p>Must be a single number.</p>"},{"location":"json/#selections","title":"Selections","text":""},{"location":"json/#box","title":"Box","text":"<p>An axis-aligned box selection.</p> <p>Parameters:</p> <ul> <li><code>box</code>: a \\(2 \\times n\\) array where the first row is the minimum corner and the second row is the maximum corner</li> <li><code>relative</code> (default: <code>false</code>): if the coordinates of <code>box</code> are relative to the mesh\u2019s rest bounding box</li> </ul> <p>Example</p> <p><code>{\"box\": [[0, 0, 0], [1, 0.1, 1]], \"relative\": true}</code> will select all points in the bottom 10% of the mesh (assuming the vertical direction if in the y-axis).</p>"},{"location":"json/#sphere","title":"Sphere","text":"<p>A sphere (or circle in 2D) selection.</p> <p>Parameters:</p> <ul> <li><code>center</code>: center of the sphere (\\(n\\)-length array)</li> <li><code>radius</code>: radius of the sphere (float value)</li> <li><code>relative</code> (default: <code>false</code>): if the <code>center</code> is relative to the mesh\u2019s rest bounding box and the radius is relative to the mesh\u2019s bounding box diagonal</li> </ul> <p>Example</p> <p><code>{\"center\": [0, 0, 0], \"radius\": 1}</code> will select points that are less than 1 unit from the origin.</p>"},{"location":"json/#axis-plane","title":"Axis-Plane","text":"<p>An axis-aligned plane selection. Everything on one side of the plane is selected.</p> <p>Parameters:</p> <ul> <li><code>axis</code>: axis aligned with the plane<ul> <li>Input can either be a string of format <code>r\"[+-]?[xyzXYZ]\"</code> or int matching the regular expression <code>[+-]?[123]</code> where the sign is the side of the plane to select and coordinate is the axis to align the plane with</li> </ul> </li> <li><code>position</code>: position of the plane along the axis (float value)</li> <li><code>relative</code> (default: <code>false</code>): if the <code>position</code> is relative to the mesh\u2019s rest bounding box</li> </ul> <p>Example</p> <p><code>{\"axis\": \"-X\", \"position\": 1}</code> will select points with a x-coordinate less than 1.</p>"},{"location":"json/#plane","title":"Plane","text":"<p>A plane selection. Everything on one side of the plane is selected.</p> <p>Parameters:</p> <ul> <li><code>normal</code>: normal of the plane (\\(n\\)-length array)</li> <li><code>point</code>: point on the plane (has priority over <code>offset</code>) (\\(n\\)-length array)<ul> <li>(alternatively) <code>offset</code>: offset along the normal from the origin defining the point (float value)</li> </ul> </li> <li><code>relative</code> (default: <code>false</code>): if the <code>point</code> is relative to the mesh\u2019s rest bounding box (does not apply to the offset)</li> </ul> <p>Example</p> <p><code>{\"normal\": [1, 1, 0], \"point\": [0, 1, 0]}</code> will select points \\(x\\) where \\((x-p) \\cdot n \\ge 0\\).</p>"},{"location":"json/#restart","title":"Restart","text":"<p>For time-dependent simulation, the state variables (\\(u\\), \\(v = \\dot{u}\\), and \\(a = \\ddot{u}\\)) are exported using the following parameters:</p> <pre><code>\"output\": {\n\"data\": {\n\"state\": \"&lt;path/to/state.hdf5&gt;\"\n}\n}\n</code></pre> <p>The path can be either absolute or relative to the output directory. The state will be saved in HDF5 format containing the keys <code>u</code>, <code>v</code>, and <code>a</code> for the solution, velocity, and acceleration, respectively.</p> <p>This file can then be used to initialize (or restart) the simulation from the saved state by specifying:</p> <pre><code>\"input\": {\n\"data\": {\n\"state\": \"&lt;path/to/state.hdf5&gt;\"\n}\n}\n</code></pre> <p>Note</p> <p>When restarting the simulation it is necessary to also specify the <code>\"time\": {\"t0\": &lt;start_time&gt;}</code> parameter for the starting time. Otherwise, it will assume a starting time of <code>0</code>.</p>"},{"location":"json_defaults_and_spec/","title":"JSON Specification","text":""},{"location":"json_defaults_and_spec/#defaults","title":"Defaults","text":"<p>The following json contains the default values by PolyFEM.</p> <p>Values of <code>\"REQUIRED!\"</code> indicate the field has no default and must be specified by the user.</p> <pre><code>{\n\"boundary_conditions\": {\n\"dirichlet_boundary\": [],\n\"neumann_boundary\": [],\n\"normal_aligned_neumann_boundary\": [],\n\"obstacle_displacements\": [],\n\"periodic_boundary\": {\n\"correspondence\": [],\n\"enabled\": false,\n\"fixed_macro_strain\": [],\n\"force_zero_mean\": false,\n\"linear_displacement_offset\": [],\n\"tolerance\": 1e-05\n},\n\"pressure_boundary\": [],\n\"pressure_cavity\": [],\n\"rhs\": {\n\"unit\": \"REQUIRED!\",\n\"value\": \"REQUIRED!\"\n}\n},\n\"common\": \"\",\n\"constraints\": {\n\"hard\": [],\n\"soft\": []\n},\n\"contact\": {\n\"adhesion\": {\n\"adhesion_enabled\": false,\n\"adhesion_strength\": 0.001,\n\"dhat_a\": 0.01,\n\"dhat_p\": 0.001,\n\"epsa\": 0.001,\n\"tangential_adhesion_coefficient\": 0.0\n},\n\"alpha_n\": 0.5,\n\"alpha_t\": 0.5,\n\"collision_mesh\": {\n\"enabled\": true,\n\"linear_map\": \"REQUIRED!\",\n\"max_edge_length\": \"REQUIRED!\",\n\"mesh\": \"REQUIRED!\",\n\"tessellation_type\": \"regular\"\n},\n\"dhat\": 0.001,\n\"dhat_percentage\": 0.8,\n\"enabled\": false,\n\"epsv\": 0.001,\n\"friction_coefficient\": 0,\n\"min_distance_ratio\": 0.5,\n\"periodic\": false,\n\"use_adaptive_dhat\": false,\n\"use_area_weighting\": true,\n\"use_convergent_formulation\": false,\n\"use_gcp_formulation\": false,\n\"use_improved_max_operator\": true,\n\"use_physical_barrier\": true\n},\n\"geometry\": \"REQUIRED!\",\n\"initial_conditions\": {\n\"acceleration\": [],\n\"solution\": [],\n\"velocity\": []\n},\n\"input\": {\n\"data\": {\n\"reorder\": false,\n\"state\": \"\"\n}\n},\n\"materials\": \"REQUIRED!\",\n\"output\": {\n\"advanced\": {\n\"compute_error\": true,\n\"curved_mesh_size\": false,\n\"save_ccd_debug_meshes\": false,\n\"save_nl_solve_sequence\": false,\n\"save_solve_sequence_debug\": false,\n\"save_time_sequence\": true,\n\"sol_at_node\": -1,\n\"sol_on_grid\": -1,\n\"spectrum\": false,\n\"timestep_prefix\": \"step_\",\n\"vis_boundary_only\": false\n},\n\"data\": {\n\"advanced\": {\n\"reorder_nodes\": false\n},\n\"full_mat\": \"\",\n\"mises\": \"\",\n\"nodes\": \"\",\n\"rest_mesh\": \"\",\n\"solution\": \"\",\n\"state\": \"\",\n\"stiffness_mat\": \"\",\n\"stress_mat\": \"\"\n},\n\"directory\": \"\",\n\"json\": \"\",\n\"log\": {\n\"file_level\": \"trace\",\n\"level\": \"debug\",\n\"path\": \"\",\n\"quiet\": false\n},\n\"paraview\": {\n\"fields\": [],\n\"file_name\": \"\",\n\"high_order_mesh\": true,\n\"options\": {\n\"acceleration\": false,\n\"body_ids\": false,\n\"contact_forces\": false,\n\"discretization_order\": true,\n\"force_high_order\": false,\n\"forces\": false,\n\"friction_forces\": false,\n\"jacobian_validity\": false,\n\"material\": false,\n\"nodes\": true,\n\"normal_adhesion_forces\": false,\n\"scalar_values\": true,\n\"tangential_adhesion_forces\": false,\n\"tensor_values\": true,\n\"use_hdf5\": false,\n\"velocity\": false\n},\n\"points\": false,\n\"skip_frame\": 1,\n\"surface\": false,\n\"vismesh_rel_area\": 1e-05,\n\"volume\": true,\n\"wireframe\": false\n},\n\"reference\": {\n\"gradient\": [],\n\"solution\": []\n},\n\"restart_json\": \"\",\n\"stats\": false\n},\n\"preset_problem\": {\n\"U\": {},\n\"angular_v0\": 0.5,\n\"angular_v1\": -0.5,\n\"axis_coordiante\": 2,\n\"axis_coordiante0\": 2,\n\"axis_coordiante1\": 2,\n\"bbox_center\": [],\n\"fixed_boundary\": 5,\n\"force\": {},\n\"formulation\": \"\",\n\"func\": 0,\n\"kernel_distance\": 0,\n\"kernel_weights\": \"\",\n\"n_kernels\": 0,\n\"n_turns\": 0.5,\n\"time_dependent\": {},\n\"turning_boundary\": 6,\n\"turning_boundary0\": 5,\n\"turning_boundary1\": 6,\n\"type\": \"REQUIRED!\",\n\"viscosity\": 1\n},\n\"root_path\": \"\",\n\"solver\": {\n\"adjoint_linear\": {\n\"AMGCL\": {\n\"precond\": {\n\"class\": \"amg\",\n\"coarsening\": {\n\"aggr\": {\n\"eps_strong\": 0\n},\n\"estimate_spectral_radius\": true,\n\"relax\": 1,\n\"type\": \"smoothed_aggregation\"\n},\n\"direct_coarse\": false,\n\"max_levels\": 6,\n\"ncycle\": 2,\n\"relax\": {\n\"degree\": 16,\n\"higher\": 2,\n\"lower\": 0.008333333333,\n\"power_iters\": 100,\n\"scale\": true,\n\"type\": \"chebyshev\"\n}\n},\n\"solver\": {\n\"maxiter\": 1000,\n\"tol\": 1e-10,\n\"type\": \"cg\"\n}\n},\n\"Eigen::BiCGSTAB\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::ConjugateGradient\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::DGMRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::GMRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::LeastSquaresConjugateGradient\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::MINRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Hypre\": {\n\"max_iter\": 1000,\n\"pre_max_iter\": 1,\n\"tolerance\": 1e-10\n},\n\"Pardiso\": {\n\"mtype\": 11\n},\n\"enable_overwrite_solver\": false,\n\"precond\": \"\",\n\"solver\": \"\"\n},\n\"advanced\": {\n\"cache_size\": 900000,\n\"check_inversion\": \"Discrete\",\n\"jacobian_threshold\": 0,\n\"lagged_regularization_iterations\": 1,\n\"lagged_regularization_weight\": 0,\n\"lump_mass_matrix\": false\n},\n\"augmented_lagrangian\": {\n\"eta\": 0.99,\n\"initial_weight\": 1000000.0,\n\"max_weight\": 100000000.0,\n\"nonlinear\": {\n\"ADAM\": {\n\"alpha\": 0.001,\n\"beta_1\": 0.9,\n\"beta_2\": 0.999,\n\"epsilon\": 1e-08\n},\n\"L-BFGS\": {\n\"history_size\": 6\n},\n\"L-BFGS-B\": {\n\"history_size\": 6\n},\n\"Newton\": {\n\"force_psd_projection\": false,\n\"reg_weight_inc\": 10,\n\"reg_weight_max\": 100000000.0,\n\"reg_weight_min\": 1e-08,\n\"residual_tolerance\": 1e-05,\n\"use_psd_projection\": true,\n\"use_psd_projection_in_regularized\": true\n},\n\"StochasticADAM\": {\n\"alpha\": 0.001,\n\"beta_1\": 0.9,\n\"beta_2\": 0.999,\n\"epsilon\": 1e-08,\n\"erase_component_probability\": 0.3\n},\n\"StochasticGradientDescent\": {\n\"erase_component_probability\": 0.3\n},\n\"advanced\": {\n\"apply_gradient_fd\": \"None\",\n\"derivative_along_delta_x_tol\": 0,\n\"f_delta\": 0,\n\"f_delta_step_tol\": 100,\n\"gradient_fd_eps\": 1e-07\n},\n\"allow_out_of_iterations\": false,\n\"box_constraints\": {\n\"bounds\": [],\n\"max_change\": -1\n},\n\"first_grad_norm_tol\": 1e-10,\n\"grad_norm\": 1e-08,\n\"iterations_per_strategy\": 5,\n\"line_search\": {\n\"Armijo\": {\n\"c\": 0.0001\n},\n\"RobustArmijo\": {\n\"delta_relative_tolerance\": 0.1\n},\n\"default_init_step_size\": 1,\n\"max_step_size_iter\": 30,\n\"max_step_size_iter_final\": 100,\n\"method\": \"RobustArmijo\",\n\"min_step_size\": 1e-10,\n\"min_step_size_final\": 1e-20,\n\"step_ratio\": 0.5,\n\"use_grad_norm_tol\": 1e-06\n},\n\"max_iterations\": 500,\n\"solver\": \"Newton\",\n\"x_delta\": 0\n},\n\"scaling\": 2.0\n},\n\"contact\": {\n\"CCD\": {\n\"broad_phase\": \"hash_grid\",\n\"max_iterations\": 1000000,\n\"tolerance\": 1e-06\n},\n\"barrier_stiffness\": \"adaptive\",\n\"friction_convergence_tol\": 0.01,\n\"friction_iterations\": 1,\n\"initial_barrier_stiffness\": 1,\n\"tangential_adhesion_iterations\": 1\n},\n\"linear\": {\n\"AMGCL\": {\n\"precond\": {\n\"class\": \"amg\",\n\"coarsening\": {\n\"aggr\": {\n\"eps_strong\": 0\n},\n\"estimate_spectral_radius\": true,\n\"relax\": 1,\n\"type\": \"smoothed_aggregation\"\n},\n\"direct_coarse\": false,\n\"max_levels\": 6,\n\"ncycle\": 2,\n\"relax\": {\n\"degree\": 16,\n\"higher\": 2,\n\"lower\": 0.008333333333,\n\"power_iters\": 100,\n\"scale\": true,\n\"type\": \"chebyshev\"\n}\n},\n\"solver\": {\n\"maxiter\": 1000,\n\"tol\": 1e-10,\n\"type\": \"cg\"\n}\n},\n\"Eigen::BiCGSTAB\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::ConjugateGradient\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::DGMRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::GMRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::LeastSquaresConjugateGradient\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Eigen::MINRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-12\n},\n\"Hypre\": {\n\"max_iter\": 1000,\n\"pre_max_iter\": 1,\n\"tolerance\": 1e-10\n},\n\"Pardiso\": {\n\"mtype\": 11\n},\n\"enable_overwrite_solver\": false,\n\"precond\": \"\",\n\"solver\": \"\"\n},\n\"max_threads\": 0,\n\"nonlinear\": {\n\"ADAM\": {\n\"alpha\": 0.001,\n\"beta_1\": 0.9,\n\"beta_2\": 0.999,\n\"epsilon\": 1e-08\n},\n\"L-BFGS\": {\n\"history_size\": 6\n},\n\"L-BFGS-B\": {\n\"history_size\": 6\n},\n\"Newton\": {\n\"force_psd_projection\": false,\n\"reg_weight_inc\": 10,\n\"reg_weight_max\": 100000000.0,\n\"reg_weight_min\": 1e-08,\n\"residual_tolerance\": 1e-05,\n\"use_psd_projection\": true,\n\"use_psd_projection_in_regularized\": true\n},\n\"StochasticADAM\": {\n\"alpha\": 0.001,\n\"beta_1\": 0.9,\n\"beta_2\": 0.999,\n\"epsilon\": 1e-08,\n\"erase_component_probability\": 0.3\n},\n\"StochasticGradientDescent\": {\n\"erase_component_probability\": 0.3\n},\n\"advanced\": {\n\"apply_gradient_fd\": \"None\",\n\"derivative_along_delta_x_tol\": 0,\n\"f_delta\": 0,\n\"f_delta_step_tol\": 100,\n\"gradient_fd_eps\": 1e-07\n},\n\"allow_out_of_iterations\": false,\n\"box_constraints\": {\n\"bounds\": [],\n\"max_change\": -1\n},\n\"first_grad_norm_tol\": 1e-10,\n\"grad_norm\": 1e-08,\n\"iterations_per_strategy\": 5,\n\"line_search\": {\n\"Armijo\": {\n\"c\": 0.0001\n},\n\"RobustArmijo\": {\n\"delta_relative_tolerance\": 0.1\n},\n\"default_init_step_size\": 1,\n\"max_step_size_iter\": 30,\n\"max_step_size_iter_final\": 100,\n\"method\": \"RobustArmijo\",\n\"min_step_size\": 1e-10,\n\"min_step_size_final\": 1e-20,\n\"step_ratio\": 0.5,\n\"use_grad_norm_tol\": 1e-06\n},\n\"max_iterations\": 500,\n\"solver\": \"Newton\",\n\"x_delta\": 0\n},\n\"rayleigh_damping\": []\n},\n\"space\": {\n\"advanced\": {\n\"B\": 3,\n\"bc_method\": \"sample\",\n\"count_flipped_els\": true,\n\"count_flipped_els_continuous\": false,\n\"discr_order_max\": 4,\n\"force_no_ref_for_harmonic\": false,\n\"h1_formula\": false,\n\"integral_constraints\": 2,\n\"isoparametric\": false,\n\"mass_quadrature_order\": -1,\n\"n_boundary_samples\": -1,\n\"n_harmonic_samples\": 10,\n\"quadrature_order\": -1,\n\"use_corner_quadrature\": false,\n\"use_particle_advection\": false\n},\n\"basis_type\": \"Lagrange\",\n\"discr_order\": 1,\n\"poly_basis_type\": \"MFSHarmonic\",\n\"pressure_discr_order\": 1,\n\"remesh\": {\n\"collapse\": {\n\"abs_max_edge_length\": 1e+100,\n\"acceptance_tolerance\": -1e-08,\n\"culling_threshold\": 0.01,\n\"enabled\": true,\n\"max_depth\": 3,\n\"rel_max_edge_length\": 1\n},\n\"enabled\": false,\n\"local_relaxation\": {\n\"local_mesh_n_ring\": 2,\n\"local_mesh_rel_area\": 0.01,\n\"max_nl_iterations\": 1\n},\n\"smooth\": {\n\"acceptance_tolerance\": -1e-08,\n\"enabled\": false,\n\"max_iters\": 1\n},\n\"split\": {\n\"acceptance_tolerance\": 0.001,\n\"culling_threshold\": 0.95,\n\"enabled\": true,\n\"max_depth\": 3,\n\"min_edge_length\": 1e-06\n},\n\"swap\": {\n\"acceptance_tolerance\": -1e-08,\n\"enabled\": false,\n\"max_depth\": 3\n},\n\"type\": \"physics\"\n},\n\"use_p_ref\": false\n},\n\"tests\": {\n\"err_h1\": 0,\n\"err_h1_semi\": 0,\n\"err_l2\": 0,\n\"err_linf\": 0,\n\"err_linf_grad\": 0,\n\"err_lp\": 0,\n\"margin\": 1e-05,\n\"time_steps\": 1\n},\n\"time\": {\n\"dt\": \"REQUIRED!\",\n\"integrator\": {\n\"beta\": 0.25,\n\"gamma\": 0.5,\n\"steps\": 1,\n\"type\": \"REQUIRED!\"\n},\n\"quasistatic\": false,\n\"t0\": 0,\n\"tend\": \"REQUIRED!\",\n\"time_steps\": \"REQUIRED!\"\n},\n\"units\": {\n\"characteristic_length\": 1,\n\"length\": \"m\",\n\"mass\": \"kg\",\n\"time\": \"s\"\n}\n}\n</code></pre>"},{"location":"json_defaults_and_spec/#full-specification","title":"Full ","text":"<p>The following json contains the full specification of the PolyFEM JSON API.</p> <p><code>/</code> (<code>object</code>)</p> <p><pre><code>/\n</code></pre>  Root of the configuration file. </p> <code>/geometry</code> (<code>list</code>) <p><pre><code>/geometry\n</code></pre>  List of geometry objects.</p> <code>/geometry/*</code> <pre><code>/geometry/*\n</code></pre> <code>/geometry/*</code> (<code>object</code>)mesh_arrayplanegroundmesh_sequence <p> Each geometry object stores a mesh, a set of transformations applied to it after loading, and a set of selections, which can be used to specify boundary conditions, materials, optimization parameters and other quantities that can be associated with a part of an object. </p> <code>/geometry/*/mesh</code> (<code>file</code>) <p><pre><code>/geometry/*/mesh\n</code></pre>  Path of the mesh file to load.</p> <p>Extensions: <code>['.obj', '.msh', '.stl', '.ply', '.mesh']</code></p> <p></p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre>  Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/extract</code> (<code>string</code>) <p><pre><code>/geometry/*/extract\n</code></pre>  Used to extract stuff from the mesh. Eg extract surface extracts the surface from a tet mesh.</p> <p>Default: <code>'volume'</code></p> <p>Options: <code>['volume', 'edges', 'points', 'surface']</code></p> <code>/geometry/*/unit</code> (<code>string</code>) <p><pre><code>/geometry/*/unit\n</code></pre>  Units of the geometric model.</p> <p>Default: <code>''</code></p> <code>/geometry/*/transformation</code> (<code>object</code>) <p><pre><code>/geometry/*/transformation\n</code></pre>  Geometric transformations applied to the geometry after loading it.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/transformation/translation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/translation\n</code></pre>  Translate (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/translation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/translation/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/rotation\n</code></pre>  Rotate, in 2D, one number, the rotation angle, in 3D, three or four Euler angles, axis+angle, or a unit quaternion. Depends on rotation mode.</p> <code>/geometry/*/transformation/rotation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/rotation/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation_mode</code> (<code>string</code>) <p><pre><code>/geometry/*/transformation/rotation_mode\n</code></pre>  Type of rotation, supported are any permutation of [xyz]+, axis_angle, quaternion, or rotation_vector.</p> <p>Default: <code>'xyz'</code></p> <code>/geometry/*/transformation/scale</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/scale\n</code></pre>  Scale by specified factors along axes (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/scale/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/scale/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/dimensions</code> <pre><code>/geometry/*/transformation/dimensions\n</code></pre> <code>/geometry/*/transformation/dimensions</code> (<code>float</code>)<code>/geometry/*/transformation/dimensions</code> (<code>list</code>) <p> Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <p>Default: <code>1</code></p> <p> Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <code>/geometry/*/transformation/dimensions/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/dimensions/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/volume_selection</code> <pre><code>/geometry/*/volume_selection\n</code></pre> <code>/geometry/*/volume_selection</code> (<code>int</code>)<code>/geometry/*/volume_selection</code> (<code>file</code>)<code>/geometry/*/volume_selection</code> (<code>object</code>)<code>/geometry/*/volume_selection</code> (<code>list</code>) <p> Assign specified ID to all elements of the geometry.</p> <p> Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p> Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/id_offset\n</code></pre>  Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>0</code></p> <p> List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/volume_selection/*</code> <pre><code>/geometry/*/volume_selection/*\n</code></pre> <code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>) <p> Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/center\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/center/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p1\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p1/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p2\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p2/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/point\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/point/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/normal\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/normal/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/axis</code> <pre><code>/geometry/*/volume_selection/*/axis\n</code></pre> <code>/geometry/*/volume_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/volume_selection/*/axis</code> (<code>string</code>) <p> FIXME: Missing documentation in the specification.</p> <p> FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/position\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <code>/geometry/*/surface_selection</code> <pre><code>/geometry/*/surface_selection\n</code></pre> <code>/geometry/*/surface_selection</code> (<code>int</code>)<code>/geometry/*/surface_selection</code> (<code>file</code>)<code>/geometry/*/surface_selection</code> (<code>list</code>) <p> Assign specified ID to all elements of the geometry.</p> <p> Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p> List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/surface_selection/*</code> <pre><code>/geometry/*/surface_selection/*\n</code></pre> <code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>) <p> Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/center\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/center/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p1\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p1/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p2\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p2/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/point\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/point/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/normal\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/normal/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/axis</code> <pre><code>/geometry/*/surface_selection/*/axis\n</code></pre> <code>/geometry/*/surface_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/surface_selection/*/axis</code> (<code>string</code>) <p> FIXME: Missing documentation in the specification.</p> <p> FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/position\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/threshold\n</code></pre>  Threshold for box side selection.</p> <p></p> <code>/geometry/*/surface_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id_offset\n</code></pre>  ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/curve_selection</code> (<code>object</code>) <p><pre><code>/geometry/*/curve_selection\n</code></pre>  Selection of curves</p> <p>Default: <code>None</code></p> <code>/geometry/*/point_selection</code> <pre><code>/geometry/*/point_selection\n</code></pre> <code>/geometry/*/point_selection</code> (<code>int</code>)<code>/geometry/*/point_selection</code> (<code>file</code>)<code>/geometry/*/point_selection</code> (<code>list</code>) <p> Assign specified ID to all elements of the geometry.</p> <p> Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p> List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/point_selection/*</code> <pre><code>/geometry/*/point_selection/*\n</code></pre> <code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>) <p> Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/box/*/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/center\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/center/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p1\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p1/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p2\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p2/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/point\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/point/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/normal\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/normal/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/axis</code> <pre><code>/geometry/*/point_selection/*/axis\n</code></pre> <code>/geometry/*/point_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/point_selection/*/axis</code> (<code>string</code>) <p> FIXME: Missing documentation in the specification.</p> <p> FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/position\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/threshold\n</code></pre>  Threshold for box side selection.</p> <p></p> <code>/geometry/*/point_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id_offset\n</code></pre>  ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/n_refs</code> (<code>int</code>) <p><pre><code>/geometry/*/n_refs\n</code></pre>  number of uniform refinements</p> <p>Default: <code>0</code></p> <code>/geometry/*/advanced</code> (<code>object</code>) <p><pre><code>/geometry/*/advanced\n</code></pre>  Advanced options for geometry</p> <p>Default: <code>None</code> </p> <code>/geometry/*/advanced/normalize_mesh</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/normalize_mesh\n</code></pre>  Rescale the mesh to it fits in the biunit cube</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/force_linear_geometry</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/force_linear_geometry\n</code></pre>  Discard high-order nodes for curved geometries</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/refinement_location</code> (<code>float</code>) <p><pre><code>/geometry/*/advanced/refinement_location\n</code></pre>  parametric location of the refinement</p> <p>Default: <code>0.5</code></p> <code>/geometry/*/advanced/min_component</code> (<code>int</code>) <p><pre><code>/geometry/*/advanced/min_component\n</code></pre>  Size of the minimum component for collision</p> <p>Default: <code>-1</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre>  Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre>  The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: mesh_array  Each geometry object stores a mesh, a set of transformations applied to it after loading, and a set of selections, which can be used to specify boundary conditions, materials, optimization parameters and other quantities that can be associated with a part of an object. </p> <code>/geometry/*/mesh</code> (<code>file</code>) <p><pre><code>/geometry/*/mesh\n</code></pre>  Path of the mesh file to load.</p> <p>Extensions: <code>['.obj', '.msh', '.stl', '.ply', '.mesh']</code></p> <code>/geometry/*/array</code> (<code>object</code>) <p><pre><code>/geometry/*/array\n</code></pre>  Array of meshes </p> <code>/geometry/*/array/offset</code> (<code>float</code>) <p><pre><code>/geometry/*/array/offset\n</code></pre>  Offset of the mesh in the array.</p> <code>/geometry/*/array/size</code> (<code>list</code>) <p><pre><code>/geometry/*/array/size\n</code></pre>  Size of the array (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/array/size/*</code> (<code>int</code>) <p><pre><code>/geometry/*/array/size/*\n</code></pre>  Size of the array (two entries for 2D problems or three entries for 3D problems).</p> <p>Range: <code>[1, inf]</code></p> <p></p> <code>/geometry/*/array/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/array/relative\n</code></pre>  Is the offset value relative to the mesh\u2019s dimensions.</p> <p>Default: <code>False</code></p> <p></p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre>  Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/extract</code> (<code>string</code>) <p><pre><code>/geometry/*/extract\n</code></pre>  Used to extract stuff from the mesh. Eg extract surface extracts the surface from a tet mesh.</p> <p>Default: <code>'volume'</code></p> <p>Options: <code>['volume', 'edges', 'points', 'surface']</code></p> <code>/geometry/*/unit</code> (<code>string</code>) <p><pre><code>/geometry/*/unit\n</code></pre>  Units of the geometric model.</p> <p>Default: <code>''</code></p> <code>/geometry/*/transformation</code> (<code>object</code>) <p><pre><code>/geometry/*/transformation\n</code></pre>  Geometric transformations applied to the geometry after loading it.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/transformation/translation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/translation\n</code></pre>  Translate (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/translation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/translation/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/rotation\n</code></pre>  Rotate, in 2D, one number, the rotation angle, in 3D, three or four Euler angles, axis+angle, or a unit quaternion. Depends on rotation mode.</p> <code>/geometry/*/transformation/rotation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/rotation/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation_mode</code> (<code>string</code>) <p><pre><code>/geometry/*/transformation/rotation_mode\n</code></pre>  Type of rotation, supported are any permutation of [xyz]+, axis_angle, quaternion, or rotation_vector.</p> <p>Default: <code>'xyz'</code></p> <code>/geometry/*/transformation/scale</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/scale\n</code></pre>  Scale by specified factors along axes (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/scale/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/scale/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/dimensions</code> <pre><code>/geometry/*/transformation/dimensions\n</code></pre> <code>/geometry/*/transformation/dimensions</code> (<code>float</code>)<code>/geometry/*/transformation/dimensions</code> (<code>list</code>) <p> Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <p>Default: <code>1</code></p> <p> Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <code>/geometry/*/transformation/dimensions/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/dimensions/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/volume_selection</code> <pre><code>/geometry/*/volume_selection\n</code></pre> <code>/geometry/*/volume_selection</code> (<code>int</code>)<code>/geometry/*/volume_selection</code> (<code>file</code>)<code>/geometry/*/volume_selection</code> (<code>object</code>)<code>/geometry/*/volume_selection</code> (<code>list</code>) <p> Assign specified ID to all elements of the geometry.</p> <p> Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p> Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/id_offset\n</code></pre>  Offsets the volume IDs loaded from the mesh.</p> <p>Default: <code>0</code></p> <p> List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/volume_selection/*</code> <pre><code>/geometry/*/volume_selection/*\n</code></pre> <code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>)<code>/geometry/*/volume_selection/*</code> (<code>object</code>) <p> Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/box/*/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/center\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/center/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p1\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p1/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/p2\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/p2/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/point\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/point/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/volume_selection/*/normal\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/normal/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/volume_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/volume_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/axis</code> <pre><code>/geometry/*/volume_selection/*/axis\n</code></pre> <code>/geometry/*/volume_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/volume_selection/*/axis</code> (<code>string</code>) <p> FIXME: Missing documentation in the specification.</p> <p> FIXME: Missing documentation in the specification.</p> <code>/geometry/*/volume_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/volume_selection/*/position\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/volume_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/volume_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <code>/geometry/*/surface_selection</code> <pre><code>/geometry/*/surface_selection\n</code></pre> <code>/geometry/*/surface_selection</code> (<code>int</code>)<code>/geometry/*/surface_selection</code> (<code>file</code>)<code>/geometry/*/surface_selection</code> (<code>list</code>) <p> Assign specified ID to all elements of the geometry.</p> <p> Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p> List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/surface_selection/*</code> <pre><code>/geometry/*/surface_selection/*\n</code></pre> <code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>)<code>/geometry/*/surface_selection/*</code> (<code>object</code>) <p> Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/box/*/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/center\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/center/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p1\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p1/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/p2\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/p2/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/point\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/point/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/surface_selection/*/normal\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/normal/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/axis</code> <pre><code>/geometry/*/surface_selection/*/axis\n</code></pre> <code>/geometry/*/surface_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/surface_selection/*/axis</code> (<code>string</code>) <p> FIXME: Missing documentation in the specification.</p> <p> FIXME: Missing documentation in the specification.</p> <code>/geometry/*/surface_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/position\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/surface_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/surface_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/surface_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/surface_selection/*/threshold\n</code></pre>  Threshold for box side selection.</p> <p></p> <code>/geometry/*/surface_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/surface_selection/*/id_offset\n</code></pre>  ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/curve_selection</code> (<code>object</code>) <p><pre><code>/geometry/*/curve_selection\n</code></pre>  Selection of curves</p> <p>Default: <code>None</code></p> <code>/geometry/*/point_selection</code> <pre><code>/geometry/*/point_selection\n</code></pre> <code>/geometry/*/point_selection</code> (<code>int</code>)<code>/geometry/*/point_selection</code> (<code>file</code>)<code>/geometry/*/point_selection</code> (<code>list</code>) <p> Assign specified ID to all elements of the geometry.</p> <p> Load ids from a file; the file is required to have one ID per element of the geometry</p> <p>Extensions: <code>['.txt']</code></p> <p> List of selection (ID assignment) operations to apply to the geometry; operations can be box, sphere, etc.</p> <code>/geometry/*/point_selection/*</code> <pre><code>/geometry/*/point_selection/*\n</code></pre> <code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>)<code>/geometry/*/point_selection/*</code> (<code>object</code>) <p> Assign the ID to all elements with barycenters inside an axis-aligned box given by the list of its 2 corners, one with min, the other with max coordinates along all axes.  If relative option is set to true, the coordinates of the box corners are specified in bilinear/trilinear coordinates  with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/box/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/box/*/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/box/*/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a sphere with specified center and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/center\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/center/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/center/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters inside a cylinder with specified axis (p1, p2) and radius.  If relative option is set to true, the coordinates of the  center are specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry, and the radius is specified relative to the bounding box diagonal length.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/radius</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/radius\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p1\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p1/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p1/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/p2\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/p2/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/p2/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assign the ID to all elements with barycenters in a halfspace. The halfspace boundary plane is defined by a point in the plane and the normal, which points to the halfspace. The option relative set to true indicates that the point position is specified in bilinear/trilinear coordinates with respect to the bounding box of the geometry.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/point\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/point/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/point_selection/*/normal\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/normal/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Same as halfspace, but the boundary plane is axis-aligned. The choice of axis is specified either by a string matching the regexp r\u201d[+-][xyzXYZ]\u201d or an int matching the regular expression [+-]?[123] where the sign is the side of the plane to select and letter or number indicates the axis to which the plane is perpendicular. The offset is the plane offset from the origin. If the relative option is set to true, the offset is with respect to the center of the bounding box.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/id</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/axis</code> <pre><code>/geometry/*/point_selection/*/axis\n</code></pre> <code>/geometry/*/point_selection/*/axis</code> (<code>int</code>)<code>/geometry/*/point_selection/*/axis</code> (<code>string</code>) <p> FIXME: Missing documentation in the specification.</p> <p> FIXME: Missing documentation in the specification.</p> <code>/geometry/*/point_selection/*/position</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/position\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/point_selection/*/relative</code> (<code>bool</code>) <p><pre><code>/geometry/*/point_selection/*/relative\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>False</code></p> <p> Assigns ids to sides touching the bbox of the model using a threshold. Assigns 1+offset to left, 2+offset to bottom, 3+offset to right, 4+offset to top, 5+offset to front, 6+offset to back, 7+offset to everything else.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/point_selection/*/threshold</code> (<code>float</code>) <p><pre><code>/geometry/*/point_selection/*/threshold\n</code></pre>  Threshold for box side selection.</p> <p></p> <code>/geometry/*/point_selection/*/id_offset</code> (<code>int</code>) <p><pre><code>/geometry/*/point_selection/*/id_offset\n</code></pre>  ID offset of box side selection.</p> <p>Default: <code>0</code></p> <code>/geometry/*/n_refs</code> (<code>int</code>) <p><pre><code>/geometry/*/n_refs\n</code></pre>  number of uniform refinements</p> <p>Default: <code>0</code></p> <code>/geometry/*/advanced</code> (<code>object</code>) <p><pre><code>/geometry/*/advanced\n</code></pre>  Advanced options for geometry</p> <p>Default: <code>None</code> </p> <code>/geometry/*/advanced/normalize_mesh</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/normalize_mesh\n</code></pre>  Rescale the mesh to it fits in the biunit cube</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/force_linear_geometry</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/force_linear_geometry\n</code></pre>  Discard high-order nodes for curved geometries</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/refinement_location</code> (<code>float</code>) <p><pre><code>/geometry/*/advanced/refinement_location\n</code></pre>  parametric location of the refinement</p> <p>Default: <code>0.5</code></p> <code>/geometry/*/advanced/min_component</code> (<code>int</code>) <p><pre><code>/geometry/*/advanced/min_component\n</code></pre>  Size of the minimum component for collision</p> <p>Default: <code>-1</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre>  Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre>  The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: plane  Plane geometry object defined by its origin and normal. </p> <code>/geometry/*/point</code> (<code>list</code>) <p><pre><code>/geometry/*/point\n</code></pre>  Point on plane (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/point/*</code> (<code>float</code>) <p><pre><code>/geometry/*/point/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <code>/geometry/*/normal</code> (<code>list</code>) <p><pre><code>/geometry/*/normal\n</code></pre>  Normal of plane (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/normal/*</code> (<code>float</code>) <p><pre><code>/geometry/*/normal/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p></p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre>  Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre>  Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre>  The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: ground  Plane orthogonal to gravity defined by its height. </p> <code>/geometry/*/height</code> (<code>float</code>) <p><pre><code>/geometry/*/height\n</code></pre>  Height of ground plane.</p> <p></p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre>  Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre>  Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre>  The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <p>Type: mesh_sequence  Mesh sequence. </p> <code>/geometry/*/mesh_sequence</code> <pre><code>/geometry/*/mesh_sequence\n</code></pre> <code>/geometry/*/mesh_sequence</code> (<code>string</code>)<code>/geometry/*/mesh_sequence</code> (<code>list</code>) <p> Directory (or GLOB) of meshes for the mesh sequence.</p> <p> List of mesh files for the mesh sequence.</p> <code>/geometry/*/mesh_sequence/*</code> (<code>file</code>) <p><pre><code>/geometry/*/mesh_sequence/*\n</code></pre>  Path of the mesh file to load.</p> <p>Extensions: <code>['.obj', '.msh', '.stl', '.ply', '.mesh']</code></p> <code>/geometry/*/fps</code> (<code>int</code>) <p><pre><code>/geometry/*/fps\n</code></pre>  Frames of the mesh sequence per second.</p> <p></p> <code>/geometry/*/type</code> (<code>string</code>) <p><pre><code>/geometry/*/type\n</code></pre>  Type of geometry, currently only one supported. In future we will add stuff like planes, spheres, etc.</p> <p>Default: <code>'mesh'</code></p> <p>Options: <code>['mesh', 'plane', 'ground', 'mesh_sequence', 'mesh_array']</code></p> <code>/geometry/*/extract</code> (<code>string</code>) <p><pre><code>/geometry/*/extract\n</code></pre>  Used to extract stuff from the mesh. Eg extract surface extracts the surface from a tet mesh.</p> <p>Default: <code>'volume'</code></p> <p>Options: <code>['volume', 'edges', 'points', 'surface']</code></p> <code>/geometry/*/unit</code> (<code>string</code>) <p><pre><code>/geometry/*/unit\n</code></pre>  Units of the geometric model.</p> <p>Default: <code>''</code></p> <code>/geometry/*/transformation</code> (<code>object</code>) <p><pre><code>/geometry/*/transformation\n</code></pre>  Geometric transformations applied to the geometry after loading it.</p> <p>Default: <code>None</code> </p> <code>/geometry/*/transformation/translation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/translation\n</code></pre>  Translate (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/translation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/translation/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/rotation\n</code></pre>  Rotate, in 2D, one number, the rotation angle, in 3D, three or four Euler angles, axis+angle, or a unit quaternion. Depends on rotation mode.</p> <code>/geometry/*/transformation/rotation/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/rotation/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/rotation_mode</code> (<code>string</code>) <p><pre><code>/geometry/*/transformation/rotation_mode\n</code></pre>  Type of rotation, supported are any permutation of [xyz]+, axis_angle, quaternion, or rotation_vector.</p> <p>Default: <code>'xyz'</code></p> <code>/geometry/*/transformation/scale</code> (<code>list</code>) <p><pre><code>/geometry/*/transformation/scale\n</code></pre>  Scale by specified factors along axes (two entries for 2D problems or three entries for 3D problems).</p> <code>/geometry/*/transformation/scale/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/scale/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/transformation/dimensions</code> <pre><code>/geometry/*/transformation/dimensions\n</code></pre> <code>/geometry/*/transformation/dimensions</code> (<code>float</code>)<code>/geometry/*/transformation/dimensions</code> (<code>list</code>) <p> Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <p>Default: <code>1</code></p> <p> Scale the object so that bounding box dimensions match specified dimensions, 2 entries for 2D problems, 3 entries for 3D problems.</p> <code>/geometry/*/transformation/dimensions/*</code> (<code>float</code>) <p><pre><code>/geometry/*/transformation/dimensions/*\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>0</code></p> <code>/geometry/*/n_refs</code> (<code>int</code>) <p><pre><code>/geometry/*/n_refs\n</code></pre>  number of uniform refinements</p> <p>Default: <code>0</code></p> <code>/geometry/*/advanced</code> (<code>object</code>) <p><pre><code>/geometry/*/advanced\n</code></pre>  Advanced options for geometry</p> <p>Default: <code>None</code> </p> <code>/geometry/*/advanced/normalize_mesh</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/normalize_mesh\n</code></pre>  Rescale the mesh to it fits in the biunit cube</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/force_linear_geometry</code> (<code>bool</code>) <p><pre><code>/geometry/*/advanced/force_linear_geometry\n</code></pre>  Discard high-order nodes for curved geometries</p> <p>Default: <code>False</code></p> <code>/geometry/*/advanced/refinement_location</code> (<code>float</code>) <p><pre><code>/geometry/*/advanced/refinement_location\n</code></pre>  parametric location of the refinement</p> <p>Default: <code>0.5</code></p> <code>/geometry/*/advanced/min_component</code> (<code>int</code>) <p><pre><code>/geometry/*/advanced/min_component\n</code></pre>  Size of the minimum component for collision</p> <p>Default: <code>-1</code></p> <code>/geometry/*/enabled</code> (<code>bool</code>) <p><pre><code>/geometry/*/enabled\n</code></pre>  Skips the geometry if false</p> <p>Default: <code>True</code></p> <code>/geometry/*/is_obstacle</code> (<code>bool</code>) <p><pre><code>/geometry/*/is_obstacle\n</code></pre>  The geometry elements are not included in deforming geometry, only in collision computations</p> <p>Default: <code>False</code></p> <code>/materials</code> (<code>list</code>) <p><pre><code>/materials\n</code></pre>  Material Parameters lists including ID pointing to volume selection, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), Density (\\(\\rho\\)), or Lam\u00e9 constants (\\(\\lambda\\) and \\(\\mu\\)).</p> <code>/materials/*</code> <pre><code>/materials/*\n</code></pre> NeoHookeanNeoHookeanIsochoricNeoHookeanIsochoricNeoHookeanMooneyRivlinMooneyRivlin3ParamMooneyRivlin3ParamSymbolicUnconstrainedOgdenIncompressibleOgdenLinearElasticityLinearElasticityHookeLinearElasticityHookeLinearElasticitySaintVenantSaintVenantStokesNavierStokesOperatorSplittingElectrostaticsIncompressibleLinearElasticityMaterialSumIncompressibleLinearElasticityLaplacianHelmholtzBilaplacianAMIPSAMIPSAutodiffFixedCorotationalFixedCorotationalVolumePenaltyHGOFiber <p>Type: NeoHookean  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: NeoHookean  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: IsochoricNeoHookean  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: IsochoricNeoHookean  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: MooneyRivlin  Material Parameters including ID, for Mooney-Rivlin </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c1</code> <pre><code>/materials/*/c1\n</code></pre> <code>/materials/*/c1</code> (<code>float</code>)<code>/materials/*/c1</code> (<code>string</code>)<code>/materials/*/c1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c1/value</code> <pre><code>/materials/*/c1/value\n</code></pre> <code>/materials/*/c1/value</code> (<code>float</code>)<code>/materials/*/c1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/c2</code> <pre><code>/materials/*/c2\n</code></pre> <code>/materials/*/c2</code> (<code>float</code>)<code>/materials/*/c2</code> (<code>string</code>)<code>/materials/*/c2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c2/value</code> <pre><code>/materials/*/c2/value\n</code></pre> <code>/materials/*/c2/value</code> (<code>float</code>)<code>/materials/*/c2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c2/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: MooneyRivlin3Param  Material Parameters including ID, for Mooney-Rivlin </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c1</code> <pre><code>/materials/*/c1\n</code></pre> <code>/materials/*/c1</code> (<code>float</code>)<code>/materials/*/c1</code> (<code>string</code>)<code>/materials/*/c1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c1/value</code> <pre><code>/materials/*/c1/value\n</code></pre> <code>/materials/*/c1/value</code> (<code>float</code>)<code>/materials/*/c1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/c2</code> <pre><code>/materials/*/c2\n</code></pre> <code>/materials/*/c2</code> (<code>float</code>)<code>/materials/*/c2</code> (<code>string</code>)<code>/materials/*/c2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c2/value</code> <pre><code>/materials/*/c2/value\n</code></pre> <code>/materials/*/c2/value</code> (<code>float</code>)<code>/materials/*/c2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c2/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/c3</code> <pre><code>/materials/*/c3\n</code></pre> <code>/materials/*/c3</code> (<code>float</code>)<code>/materials/*/c3</code> (<code>string</code>)<code>/materials/*/c3</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c3/value</code> <pre><code>/materials/*/c3/value\n</code></pre> <code>/materials/*/c3/value</code> (<code>float</code>)<code>/materials/*/c3/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c3/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/d1</code> <pre><code>/materials/*/d1\n</code></pre> <code>/materials/*/d1</code> (<code>float</code>)<code>/materials/*/d1</code> (<code>string</code>)<code>/materials/*/d1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/d1/value</code> <pre><code>/materials/*/d1/value\n</code></pre> <code>/materials/*/d1/value</code> (<code>float</code>)<code>/materials/*/d1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/d1/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: MooneyRivlin3ParamSymbolic  Material Parameters including ID, for Mooney-Rivlin </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c1</code> <pre><code>/materials/*/c1\n</code></pre> <code>/materials/*/c1</code> (<code>float</code>)<code>/materials/*/c1</code> (<code>string</code>)<code>/materials/*/c1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c1/value</code> <pre><code>/materials/*/c1/value\n</code></pre> <code>/materials/*/c1/value</code> (<code>float</code>)<code>/materials/*/c1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/c2</code> <pre><code>/materials/*/c2\n</code></pre> <code>/materials/*/c2</code> (<code>float</code>)<code>/materials/*/c2</code> (<code>string</code>)<code>/materials/*/c2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c2/value</code> <pre><code>/materials/*/c2/value\n</code></pre> <code>/materials/*/c2/value</code> (<code>float</code>)<code>/materials/*/c2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c2/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/c3</code> <pre><code>/materials/*/c3\n</code></pre> <code>/materials/*/c3</code> (<code>float</code>)<code>/materials/*/c3</code> (<code>string</code>)<code>/materials/*/c3</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c3/value</code> <pre><code>/materials/*/c3/value\n</code></pre> <code>/materials/*/c3/value</code> (<code>float</code>)<code>/materials/*/c3/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c3/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/d1</code> <pre><code>/materials/*/d1\n</code></pre> <code>/materials/*/d1</code> (<code>float</code>)<code>/materials/*/d1</code> (<code>string</code>)<code>/materials/*/d1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/d1/value</code> <pre><code>/materials/*/d1/value\n</code></pre> <code>/materials/*/d1/value</code> (<code>float</code>)<code>/materials/*/d1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/d1/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: UnconstrainedOgden  Material Parameters including ID, for Ogden. </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/alphas</code> <pre><code>/materials/*/alphas\n</code></pre> <code>/materials/*/alphas</code> (<code>float</code>)<code>/materials/*/alphas</code> (<code>string</code>)<code>/materials/*/alphas</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/alphas/value</code> <pre><code>/materials/*/alphas/value\n</code></pre> <code>/materials/*/alphas/value</code> (<code>float</code>)<code>/materials/*/alphas/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/alphas/unit</code> (<code>string</code>) <p><pre><code>/materials/*/alphas/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/mus</code> (<code>list</code>) <p><pre><code>/materials/*/mus\n</code></pre>  Ogden mu</p> <code>/materials/*/mus/*</code> <pre><code>/materials/*/mus/*\n</code></pre> <code>/materials/*/mus/*</code> (<code>float</code>)<code>/materials/*/mus/*</code> (<code>string</code>)<code>/materials/*/mus/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/mus/*/value</code> <pre><code>/materials/*/mus/*/value\n</code></pre> <code>/materials/*/mus/*/value</code> (<code>float</code>)<code>/materials/*/mus/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/mus/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mus/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/Ds</code> (<code>list</code>) <p><pre><code>/materials/*/Ds\n</code></pre>  Ogden D</p> <code>/materials/*/Ds/*</code> <pre><code>/materials/*/Ds/*\n</code></pre> <code>/materials/*/Ds/*</code> (<code>float</code>)<code>/materials/*/Ds/*</code> (<code>string</code>)<code>/materials/*/Ds/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/Ds/*/value</code> <pre><code>/materials/*/Ds/*/value\n</code></pre> <code>/materials/*/Ds/*/value</code> (<code>float</code>)<code>/materials/*/Ds/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/Ds/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/Ds/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: IncompressibleOgden  Material Parameters including ID, for Ogden. </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/c</code> <pre><code>/materials/*/c\n</code></pre> <code>/materials/*/c</code> (<code>float</code>)<code>/materials/*/c</code> (<code>string</code>)<code>/materials/*/c</code> (<code>object</code>)<code>/materials/*/c</code> (<code>list</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c/value</code> <pre><code>/materials/*/c/value\n</code></pre> <code>/materials/*/c/value</code> (<code>float</code>)<code>/materials/*/c/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c/unit\n</code></pre>  The unit of the Value</p> <p> Coefficient(s) of Incompressible Ogden</p> <code>/materials/*/c/*</code> <pre><code>/materials/*/c/*\n</code></pre> <code>/materials/*/c/*</code> (<code>float</code>)<code>/materials/*/c/*</code> (<code>string</code>)<code>/materials/*/c/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/c/*/value</code> <pre><code>/materials/*/c/*/value\n</code></pre> <code>/materials/*/c/*/value</code> (<code>float</code>)<code>/materials/*/c/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/c/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/c/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/m</code> <pre><code>/materials/*/m\n</code></pre> <code>/materials/*/m</code> (<code>float</code>)<code>/materials/*/m</code> (<code>string</code>)<code>/materials/*/m</code> (<code>object</code>)<code>/materials/*/m</code> (<code>list</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/m/value</code> <pre><code>/materials/*/m/value\n</code></pre> <code>/materials/*/m/value</code> (<code>float</code>)<code>/materials/*/m/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/m/unit</code> (<code>string</code>) <p><pre><code>/materials/*/m/unit\n</code></pre>  The unit of the Value</p> <p> Exponent(s) of Incompressible Ogden</p> <code>/materials/*/m/*</code> <pre><code>/materials/*/m/*\n</code></pre> <code>/materials/*/m/*</code> (<code>float</code>)<code>/materials/*/m/*</code> (<code>string</code>)<code>/materials/*/m/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/m/*/value</code> <pre><code>/materials/*/m/*/value\n</code></pre> <code>/materials/*/m/*/value</code> (<code>float</code>)<code>/materials/*/m/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/m/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/m/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: LinearElasticity  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: LinearElasticity  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: HookeLinearElasticity  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <p>Type: HookeLinearElasticity  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/elasticity_tensor\n</code></pre>  Symmetric elasticity tensor</p> <code>/materials/*/elasticity_tensor/*</code> <pre><code>/materials/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/elasticity_tensor/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <p>Type: SaintVenant  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: SaintVenant  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/elasticity_tensor\n</code></pre>  Symmetric elasticity tensor</p> <code>/materials/*/elasticity_tensor/*</code> <pre><code>/materials/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/elasticity_tensor/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/elasticity_tensor/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/elasticity_tensor/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: Stokes  Material Parameters including ID, viscosity, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/viscosity</code> <pre><code>/materials/*/viscosity\n</code></pre> <code>/materials/*/viscosity</code> (<code>float</code>)<code>/materials/*/viscosity</code> (<code>string</code>)<code>/materials/*/viscosity</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/viscosity/value</code> <pre><code>/materials/*/viscosity/value\n</code></pre> <code>/materials/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/viscosity/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/viscosity/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: NavierStokes  Material Parameters including ID, viscosity, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/viscosity</code> <pre><code>/materials/*/viscosity\n</code></pre> <code>/materials/*/viscosity</code> (<code>float</code>)<code>/materials/*/viscosity</code> (<code>string</code>)<code>/materials/*/viscosity</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/viscosity/value</code> <pre><code>/materials/*/viscosity/value\n</code></pre> <code>/materials/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/viscosity/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/viscosity/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: OperatorSplitting  Material Parameters including ID, viscosity, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/viscosity</code> <pre><code>/materials/*/viscosity\n</code></pre> <code>/materials/*/viscosity</code> (<code>float</code>)<code>/materials/*/viscosity</code> (<code>string</code>)<code>/materials/*/viscosity</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/viscosity/value</code> <pre><code>/materials/*/viscosity/value\n</code></pre> <code>/materials/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/viscosity/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/viscosity/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Electrostatics  Material Parameters including ID, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/epsilon</code> <pre><code>/materials/*/epsilon\n</code></pre> <code>/materials/*/epsilon</code> (<code>float</code>)<code>/materials/*/epsilon</code> (<code>string</code>)<code>/materials/*/epsilon</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/epsilon/value</code> <pre><code>/materials/*/epsilon/value\n</code></pre> <code>/materials/*/epsilon/value</code> (<code>float</code>)<code>/materials/*/epsilon/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/epsilon/unit</code> (<code>string</code>) <p><pre><code>/materials/*/epsilon/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: IncompressibleLinearElasticity  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: MaterialSum  Model that is a sum of other models </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models</code> (<code>list</code>) <p><pre><code>/materials/*/models\n</code></pre>  List of models</p> <code>/materials/*/models/*</code> <pre><code>/materials/*/models/*\n</code></pre> NeoHookeanNeoHookeanIsochoricNeoHookeanIsochoricNeoHookeanMooneyRivlinMooneyRivlin3ParamMooneyRivlin3ParamSymbolicUnconstrainedOgdenIncompressibleOgdenLinearElasticityLinearElasticityHookeLinearElasticityHookeLinearElasticitySaintVenantSaintVenantStokesNavierStokesOperatorSplittingElectrostaticsIncompressibleLinearElasticityMaterialSumIncompressibleLinearElasticityLaplacianHelmholtzBilaplacianAMIPSAMIPSAutodiffFixedCorotationalFixedCorotationalVolumePenaltyHGOFiber <p>Type: NeoHookean  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: NeoHookean  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: IsochoricNeoHookean  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: IsochoricNeoHookean  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: MooneyRivlin  Material Parameters including ID, for Mooney-Rivlin </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c1</code> <pre><code>/materials/*/models/*/c1\n</code></pre> <code>/materials/*/models/*/c1</code> (<code>float</code>)<code>/materials/*/models/*/c1</code> (<code>string</code>)<code>/materials/*/models/*/c1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c1/value</code> <pre><code>/materials/*/models/*/c1/value\n</code></pre> <code>/materials/*/models/*/c1/value</code> (<code>float</code>)<code>/materials/*/models/*/c1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/c2</code> <pre><code>/materials/*/models/*/c2\n</code></pre> <code>/materials/*/models/*/c2</code> (<code>float</code>)<code>/materials/*/models/*/c2</code> (<code>string</code>)<code>/materials/*/models/*/c2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c2/value</code> <pre><code>/materials/*/models/*/c2/value\n</code></pre> <code>/materials/*/models/*/c2/value</code> (<code>float</code>)<code>/materials/*/models/*/c2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c2/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: MooneyRivlin3Param  Material Parameters including ID, for Mooney-Rivlin </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c1</code> <pre><code>/materials/*/models/*/c1\n</code></pre> <code>/materials/*/models/*/c1</code> (<code>float</code>)<code>/materials/*/models/*/c1</code> (<code>string</code>)<code>/materials/*/models/*/c1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c1/value</code> <pre><code>/materials/*/models/*/c1/value\n</code></pre> <code>/materials/*/models/*/c1/value</code> (<code>float</code>)<code>/materials/*/models/*/c1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/c2</code> <pre><code>/materials/*/models/*/c2\n</code></pre> <code>/materials/*/models/*/c2</code> (<code>float</code>)<code>/materials/*/models/*/c2</code> (<code>string</code>)<code>/materials/*/models/*/c2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c2/value</code> <pre><code>/materials/*/models/*/c2/value\n</code></pre> <code>/materials/*/models/*/c2/value</code> (<code>float</code>)<code>/materials/*/models/*/c2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c2/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/c3</code> <pre><code>/materials/*/models/*/c3\n</code></pre> <code>/materials/*/models/*/c3</code> (<code>float</code>)<code>/materials/*/models/*/c3</code> (<code>string</code>)<code>/materials/*/models/*/c3</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c3/value</code> <pre><code>/materials/*/models/*/c3/value\n</code></pre> <code>/materials/*/models/*/c3/value</code> (<code>float</code>)<code>/materials/*/models/*/c3/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c3/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/d1</code> <pre><code>/materials/*/models/*/d1\n</code></pre> <code>/materials/*/models/*/d1</code> (<code>float</code>)<code>/materials/*/models/*/d1</code> (<code>string</code>)<code>/materials/*/models/*/d1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/d1/value</code> <pre><code>/materials/*/models/*/d1/value\n</code></pre> <code>/materials/*/models/*/d1/value</code> (<code>float</code>)<code>/materials/*/models/*/d1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/d1/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: MooneyRivlin3ParamSymbolic  Material Parameters including ID, for Mooney-Rivlin </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c1</code> <pre><code>/materials/*/models/*/c1\n</code></pre> <code>/materials/*/models/*/c1</code> (<code>float</code>)<code>/materials/*/models/*/c1</code> (<code>string</code>)<code>/materials/*/models/*/c1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c1/value</code> <pre><code>/materials/*/models/*/c1/value\n</code></pre> <code>/materials/*/models/*/c1/value</code> (<code>float</code>)<code>/materials/*/models/*/c1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/c2</code> <pre><code>/materials/*/models/*/c2\n</code></pre> <code>/materials/*/models/*/c2</code> (<code>float</code>)<code>/materials/*/models/*/c2</code> (<code>string</code>)<code>/materials/*/models/*/c2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c2/value</code> <pre><code>/materials/*/models/*/c2/value\n</code></pre> <code>/materials/*/models/*/c2/value</code> (<code>float</code>)<code>/materials/*/models/*/c2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c2/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/c3</code> <pre><code>/materials/*/models/*/c3\n</code></pre> <code>/materials/*/models/*/c3</code> (<code>float</code>)<code>/materials/*/models/*/c3</code> (<code>string</code>)<code>/materials/*/models/*/c3</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c3/value</code> <pre><code>/materials/*/models/*/c3/value\n</code></pre> <code>/materials/*/models/*/c3/value</code> (<code>float</code>)<code>/materials/*/models/*/c3/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c3/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c3/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/d1</code> <pre><code>/materials/*/models/*/d1\n</code></pre> <code>/materials/*/models/*/d1</code> (<code>float</code>)<code>/materials/*/models/*/d1</code> (<code>string</code>)<code>/materials/*/models/*/d1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/d1/value</code> <pre><code>/materials/*/models/*/d1/value\n</code></pre> <code>/materials/*/models/*/d1/value</code> (<code>float</code>)<code>/materials/*/models/*/d1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/d1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/d1/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: UnconstrainedOgden  Material Parameters including ID, for Ogden. </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/alphas</code> <pre><code>/materials/*/models/*/alphas\n</code></pre> <code>/materials/*/models/*/alphas</code> (<code>float</code>)<code>/materials/*/models/*/alphas</code> (<code>string</code>)<code>/materials/*/models/*/alphas</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/alphas/value</code> <pre><code>/materials/*/models/*/alphas/value\n</code></pre> <code>/materials/*/models/*/alphas/value</code> (<code>float</code>)<code>/materials/*/models/*/alphas/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/alphas/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/alphas/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/mus</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/mus\n</code></pre>  Ogden mu</p> <code>/materials/*/models/*/mus/*</code> <pre><code>/materials/*/models/*/mus/*\n</code></pre> <code>/materials/*/models/*/mus/*</code> (<code>float</code>)<code>/materials/*/models/*/mus/*</code> (<code>string</code>)<code>/materials/*/models/*/mus/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/mus/*/value</code> <pre><code>/materials/*/models/*/mus/*/value\n</code></pre> <code>/materials/*/models/*/mus/*/value</code> (<code>float</code>)<code>/materials/*/models/*/mus/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/mus/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mus/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/Ds</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/Ds\n</code></pre>  Ogden D</p> <code>/materials/*/models/*/Ds/*</code> <pre><code>/materials/*/models/*/Ds/*\n</code></pre> <code>/materials/*/models/*/Ds/*</code> (<code>float</code>)<code>/materials/*/models/*/Ds/*</code> (<code>string</code>)<code>/materials/*/models/*/Ds/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/Ds/*/value</code> <pre><code>/materials/*/models/*/Ds/*/value\n</code></pre> <code>/materials/*/models/*/Ds/*/value</code> (<code>float</code>)<code>/materials/*/models/*/Ds/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/Ds/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/Ds/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: IncompressibleOgden  Material Parameters including ID, for Ogden. </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/c</code> <pre><code>/materials/*/models/*/c\n</code></pre> <code>/materials/*/models/*/c</code> (<code>float</code>)<code>/materials/*/models/*/c</code> (<code>string</code>)<code>/materials/*/models/*/c</code> (<code>object</code>)<code>/materials/*/models/*/c</code> (<code>list</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c/value</code> <pre><code>/materials/*/models/*/c/value\n</code></pre> <code>/materials/*/models/*/c/value</code> (<code>float</code>)<code>/materials/*/models/*/c/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c/unit\n</code></pre>  The unit of the Value</p> <p> Coefficient(s) of Incompressible Ogden</p> <code>/materials/*/models/*/c/*</code> <pre><code>/materials/*/models/*/c/*\n</code></pre> <code>/materials/*/models/*/c/*</code> (<code>float</code>)<code>/materials/*/models/*/c/*</code> (<code>string</code>)<code>/materials/*/models/*/c/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/c/*/value</code> <pre><code>/materials/*/models/*/c/*/value\n</code></pre> <code>/materials/*/models/*/c/*/value</code> (<code>float</code>)<code>/materials/*/models/*/c/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/c/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/c/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/m</code> <pre><code>/materials/*/models/*/m\n</code></pre> <code>/materials/*/models/*/m</code> (<code>float</code>)<code>/materials/*/models/*/m</code> (<code>string</code>)<code>/materials/*/models/*/m</code> (<code>object</code>)<code>/materials/*/models/*/m</code> (<code>list</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/m/value</code> <pre><code>/materials/*/models/*/m/value\n</code></pre> <code>/materials/*/models/*/m/value</code> (<code>float</code>)<code>/materials/*/models/*/m/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/m/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/m/unit\n</code></pre>  The unit of the Value</p> <p> Exponent(s) of Incompressible Ogden</p> <code>/materials/*/models/*/m/*</code> <pre><code>/materials/*/models/*/m/*\n</code></pre> <code>/materials/*/models/*/m/*</code> (<code>float</code>)<code>/materials/*/models/*/m/*</code> (<code>string</code>)<code>/materials/*/models/*/m/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/m/*/value</code> <pre><code>/materials/*/models/*/m/*/value\n</code></pre> <code>/materials/*/models/*/m/*/value</code> (<code>float</code>)<code>/materials/*/models/*/m/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/m/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/m/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: LinearElasticity  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: LinearElasticity  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: HookeLinearElasticity  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <p>Type: HookeLinearElasticity  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor\n</code></pre>  Symmetric elasticity tensor</p> <code>/materials/*/models/*/elasticity_tensor/*</code> <pre><code>/materials/*/models/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/models/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <p>Type: SaintVenant  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: SaintVenant  Material Parameters including ID, E, nu, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/elasticity_tensor</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor\n</code></pre>  Symmetric elasticity tensor</p> <code>/materials/*/models/*/elasticity_tensor/*</code> <pre><code>/materials/*/models/*/elasticity_tensor/*\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>string</code>)<code>/materials/*/models/*/elasticity_tensor/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/elasticity_tensor/*/value</code> <pre><code>/materials/*/models/*/elasticity_tensor/*/value\n</code></pre> <code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>float</code>)<code>/materials/*/models/*/elasticity_tensor/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/elasticity_tensor/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/elasticity_tensor/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: Stokes  Material Parameters including ID, viscosity, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/viscosity</code> <pre><code>/materials/*/models/*/viscosity\n</code></pre> <code>/materials/*/models/*/viscosity</code> (<code>float</code>)<code>/materials/*/models/*/viscosity</code> (<code>string</code>)<code>/materials/*/models/*/viscosity</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/viscosity/value</code> <pre><code>/materials/*/models/*/viscosity/value\n</code></pre> <code>/materials/*/models/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/models/*/viscosity/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/viscosity/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: NavierStokes  Material Parameters including ID, viscosity, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/viscosity</code> <pre><code>/materials/*/models/*/viscosity\n</code></pre> <code>/materials/*/models/*/viscosity</code> (<code>float</code>)<code>/materials/*/models/*/viscosity</code> (<code>string</code>)<code>/materials/*/models/*/viscosity</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/viscosity/value</code> <pre><code>/materials/*/models/*/viscosity/value\n</code></pre> <code>/materials/*/models/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/models/*/viscosity/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/viscosity/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: OperatorSplitting  Material Parameters including ID, viscosity, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/viscosity</code> <pre><code>/materials/*/models/*/viscosity\n</code></pre> <code>/materials/*/models/*/viscosity</code> (<code>float</code>)<code>/materials/*/models/*/viscosity</code> (<code>string</code>)<code>/materials/*/models/*/viscosity</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/viscosity/value</code> <pre><code>/materials/*/models/*/viscosity/value\n</code></pre> <code>/materials/*/models/*/viscosity/value</code> (<code>float</code>)<code>/materials/*/models/*/viscosity/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/viscosity/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/viscosity/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Electrostatics  Material Parameters including ID, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/epsilon</code> <pre><code>/materials/*/models/*/epsilon\n</code></pre> <code>/materials/*/models/*/epsilon</code> (<code>float</code>)<code>/materials/*/models/*/epsilon</code> (<code>string</code>)<code>/materials/*/models/*/epsilon</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/epsilon/value</code> <pre><code>/materials/*/models/*/epsilon/value\n</code></pre> <code>/materials/*/models/*/epsilon/value</code> (<code>float</code>)<code>/materials/*/models/*/epsilon/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/epsilon/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/epsilon/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: IncompressibleLinearElasticity  Material Parameters including ID, Young\u2019s modulus (\\(E\\)), Poisson\u2019s ratio (\\(\\nu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: MaterialSum  Model that is a sum of other models </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <p>Type: IncompressibleLinearElasticity  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Laplacian  Material Parameters including ID, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Helmholtz  Material Parameters including ID, k, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Bilaplacian  Material Parameters including ID, density (\\(\\rho\\)) </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: AMIPS  Material Parameters including ID </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/models/*/use_rest_pose</code> (<code>bool</code>) <p><pre><code>/materials/*/models/*/use_rest_pose\n</code></pre>  Use amips wrt to rest pose or the regular element</p> <p>Default: <code>False</code></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: AMIPSAutodiff  Material Parameters including ID </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: FixedCorotational  Material Parameters including ID </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/E</code> <pre><code>/materials/*/models/*/E\n</code></pre> <code>/materials/*/models/*/E</code> (<code>float</code>)<code>/materials/*/models/*/E</code> (<code>string</code>)<code>/materials/*/models/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/E/value</code> <pre><code>/materials/*/models/*/E/value\n</code></pre> <code>/materials/*/models/*/E/value</code> (<code>float</code>)<code>/materials/*/models/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/nu</code> <pre><code>/materials/*/models/*/nu\n</code></pre> <code>/materials/*/models/*/nu</code> (<code>float</code>)<code>/materials/*/models/*/nu</code> (<code>string</code>)<code>/materials/*/models/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/nu/value</code> <pre><code>/materials/*/models/*/nu/value\n</code></pre> <code>/materials/*/models/*/nu/value</code> (<code>float</code>)<code>/materials/*/models/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: FixedCorotational  Material Parameters including ID </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/lambda</code> <pre><code>/materials/*/models/*/lambda\n</code></pre> <code>/materials/*/models/*/lambda</code> (<code>float</code>)<code>/materials/*/models/*/lambda</code> (<code>string</code>)<code>/materials/*/models/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/lambda/value</code> <pre><code>/materials/*/models/*/lambda/value\n</code></pre> <code>/materials/*/models/*/lambda/value</code> (<code>float</code>)<code>/materials/*/models/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/mu</code> <pre><code>/materials/*/models/*/mu\n</code></pre> <code>/materials/*/models/*/mu</code> (<code>float</code>)<code>/materials/*/models/*/mu</code> (<code>string</code>)<code>/materials/*/models/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/mu/value</code> <pre><code>/materials/*/models/*/mu/value\n</code></pre> <code>/materials/*/models/*/mu/value</code> (<code>float</code>)<code>/materials/*/models/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/phi</code> <pre><code>/materials/*/models/*/phi\n</code></pre> <code>/materials/*/models/*/phi</code> (<code>float</code>)<code>/materials/*/models/*/phi</code> (<code>string</code>)<code>/materials/*/models/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/phi/value</code> <pre><code>/materials/*/models/*/phi/value\n</code></pre> <code>/materials/*/models/*/phi/value</code> (<code>float</code>)<code>/materials/*/models/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/psi</code> <pre><code>/materials/*/models/*/psi\n</code></pre> <code>/materials/*/models/*/psi</code> (<code>float</code>)<code>/materials/*/models/*/psi</code> (<code>string</code>)<code>/materials/*/models/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/psi/value</code> <pre><code>/materials/*/models/*/psi/value\n</code></pre> <code>/materials/*/models/*/psi/value</code> (<code>float</code>)<code>/materials/*/models/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: VolumePenalty  Material Parameters including ID </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/k</code> <pre><code>/materials/*/models/*/k\n</code></pre> <code>/materials/*/models/*/k</code> (<code>float</code>)<code>/materials/*/models/*/k</code> (<code>string</code>)<code>/materials/*/models/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/k/value</code> <pre><code>/materials/*/models/*/k/value\n</code></pre> <code>/materials/*/models/*/k/value</code> (<code>float</code>)<code>/materials/*/models/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: HGOFiber  Material Parameters </p> <code>/materials/*/models/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/models/*/k1</code> <pre><code>/materials/*/models/*/k1\n</code></pre> <code>/materials/*/models/*/k1</code> (<code>float</code>)<code>/materials/*/models/*/k1</code> (<code>string</code>)<code>/materials/*/models/*/k1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/k1/value</code> <pre><code>/materials/*/models/*/k1/value\n</code></pre> <code>/materials/*/models/*/k1/value</code> (<code>float</code>)<code>/materials/*/models/*/k1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/k1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/k2</code> <pre><code>/materials/*/models/*/k2\n</code></pre> <code>/materials/*/models/*/k2</code> (<code>float</code>)<code>/materials/*/models/*/k2</code> (<code>string</code>)<code>/materials/*/models/*/k2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/k2/value</code> <pre><code>/materials/*/models/*/k2/value\n</code></pre> <code>/materials/*/models/*/k2/value</code> (<code>float</code>)<code>/materials/*/models/*/k2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/k2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/k2/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/models/*/id</code> <pre><code>/materials/*/models/*/id\n</code></pre> <code>/materials/*/models/*/id</code> (<code>int</code>)<code>/materials/*/models/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/models/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/models/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/models/*/rho</code> <pre><code>/materials/*/models/*/rho\n</code></pre> <code>/materials/*/models/*/rho</code> (<code>float</code>)<code>/materials/*/models/*/rho</code> (<code>string</code>)<code>/materials/*/models/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/rho/value</code> <pre><code>/materials/*/models/*/rho/value\n</code></pre> <code>/materials/*/models/*/rho/value</code> (<code>float</code>)<code>/materials/*/models/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/models/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/models/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/models/*/fiber_direction/*</code> <pre><code>/materials/*/models/*/fiber_direction/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/models/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/models/*/fiber_direction/*/*</code> <pre><code>/materials/*/models/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/models/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/models/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/models/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/models/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/models/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/models/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <p>Type: IncompressibleLinearElasticity  Material Parameters including ID, Lam\u00e9 first (\\(\\lambda\\)), Lam\u00e9 second (\\(\\mu\\)), density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Laplacian  Material Parameters including ID, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Helmholtz  Material Parameters including ID, k, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: Bilaplacian  Material Parameters including ID, density (\\(\\rho\\)) </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: AMIPS  Material Parameters including ID </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/use_rest_pose</code> (<code>bool</code>) <p><pre><code>/materials/*/use_rest_pose\n</code></pre>  Use amips wrt to rest pose or the regular element</p> <p>Default: <code>False</code></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: AMIPSAutodiff  Material Parameters including ID </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: FixedCorotational  Material Parameters including ID </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/E</code> <pre><code>/materials/*/E\n</code></pre> <code>/materials/*/E</code> (<code>float</code>)<code>/materials/*/E</code> (<code>string</code>)<code>/materials/*/E</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/E/value</code> <pre><code>/materials/*/E/value\n</code></pre> <code>/materials/*/E/value</code> (<code>float</code>)<code>/materials/*/E/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/E/unit</code> (<code>string</code>) <p><pre><code>/materials/*/E/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/nu</code> <pre><code>/materials/*/nu\n</code></pre> <code>/materials/*/nu</code> (<code>float</code>)<code>/materials/*/nu</code> (<code>string</code>)<code>/materials/*/nu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/nu/value</code> <pre><code>/materials/*/nu/value\n</code></pre> <code>/materials/*/nu/value</code> (<code>float</code>)<code>/materials/*/nu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/nu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/nu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: FixedCorotational  Material Parameters including ID </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/lambda</code> <pre><code>/materials/*/lambda\n</code></pre> <code>/materials/*/lambda</code> (<code>float</code>)<code>/materials/*/lambda</code> (<code>string</code>)<code>/materials/*/lambda</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/lambda/value</code> <pre><code>/materials/*/lambda/value\n</code></pre> <code>/materials/*/lambda/value</code> (<code>float</code>)<code>/materials/*/lambda/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/lambda/unit</code> (<code>string</code>) <p><pre><code>/materials/*/lambda/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/mu</code> <pre><code>/materials/*/mu\n</code></pre> <code>/materials/*/mu</code> (<code>float</code>)<code>/materials/*/mu</code> (<code>string</code>)<code>/materials/*/mu</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/mu/value</code> <pre><code>/materials/*/mu/value\n</code></pre> <code>/materials/*/mu/value</code> (<code>float</code>)<code>/materials/*/mu/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/mu/unit</code> (<code>string</code>) <p><pre><code>/materials/*/mu/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/phi</code> <pre><code>/materials/*/phi\n</code></pre> <code>/materials/*/phi</code> (<code>float</code>)<code>/materials/*/phi</code> (<code>string</code>)<code>/materials/*/phi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/phi/value</code> <pre><code>/materials/*/phi/value\n</code></pre> <code>/materials/*/phi/value</code> (<code>float</code>)<code>/materials/*/phi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/phi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/phi/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/psi</code> <pre><code>/materials/*/psi\n</code></pre> <code>/materials/*/psi</code> (<code>float</code>)<code>/materials/*/psi</code> (<code>string</code>)<code>/materials/*/psi</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/psi/value</code> <pre><code>/materials/*/psi/value\n</code></pre> <code>/materials/*/psi/value</code> (<code>float</code>)<code>/materials/*/psi/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/psi/unit</code> (<code>string</code>) <p><pre><code>/materials/*/psi/unit\n</code></pre>  The unit of the Value</p> <p>Type: VolumePenalty  Material Parameters including ID </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/k</code> <pre><code>/materials/*/k\n</code></pre> <code>/materials/*/k</code> (<code>float</code>)<code>/materials/*/k</code> (<code>string</code>)<code>/materials/*/k</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/k/value</code> <pre><code>/materials/*/k/value\n</code></pre> <code>/materials/*/k/value</code> (<code>float</code>)<code>/materials/*/k/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/k/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <p>Type: HGOFiber  Material Parameters </p> <code>/materials/*/type</code> (<code>string</code>) <p><pre><code>/materials/*/type\n</code></pre>  Type of material</p> <p>Options: <code>['LinearElasticity', 'HookeLinearElasticity', 'SaintVenant', 'NeoHookean', 'MooneyRivlin', 'MooneyRivlin3Param', 'MooneyRivlin3ParamSymbolic', 'UnconstrainedOgden', 'IncompressibleOgden', 'Stokes', 'HGOFiber', 'IsochoricNeoHookean', 'NavierStokes', 'OperatorSplitting', 'Electrostatics', 'MaterialSum', 'IncompressibleLinearElasticity', 'Laplacian', 'Helmholtz', 'Bilaplacian', 'AMIPS', 'AMIPSAutodiff', 'FixedCorotational', 'VolumePenalty']</code></p> <code>/materials/*/k1</code> <pre><code>/materials/*/k1\n</code></pre> <code>/materials/*/k1</code> (<code>float</code>)<code>/materials/*/k1</code> (<code>string</code>)<code>/materials/*/k1</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/k1/value</code> <pre><code>/materials/*/k1/value\n</code></pre> <code>/materials/*/k1/value</code> (<code>float</code>)<code>/materials/*/k1/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/k1/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k1/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/k2</code> <pre><code>/materials/*/k2\n</code></pre> <code>/materials/*/k2</code> (<code>float</code>)<code>/materials/*/k2</code> (<code>string</code>)<code>/materials/*/k2</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/k2/value</code> <pre><code>/materials/*/k2/value\n</code></pre> <code>/materials/*/k2/value</code> (<code>float</code>)<code>/materials/*/k2/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/k2/unit</code> (<code>string</code>) <p><pre><code>/materials/*/k2/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/materials/*/id</code> <pre><code>/materials/*/id\n</code></pre> <code>/materials/*/id</code> (<code>int</code>)<code>/materials/*/id</code> (<code>list</code>) <p> Volume selection ID</p> <p>Default: <code>0</code></p> <p> Volume selection IDs</p> <code>/materials/*/id/*</code> (<code>int</code>) <p><pre><code>/materials/*/id/*\n</code></pre>  Volume selection ID</p> <code>/materials/*/rho</code> <pre><code>/materials/*/rho\n</code></pre> <code>/materials/*/rho</code> (<code>float</code>)<code>/materials/*/rho</code> (<code>string</code>)<code>/materials/*/rho</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>1</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/rho/value</code> <pre><code>/materials/*/rho/value\n</code></pre> <code>/materials/*/rho/value</code> (<code>float</code>)<code>/materials/*/rho/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/rho/unit</code> (<code>string</code>) <p><pre><code>/materials/*/rho/unit\n</code></pre>  The unit of the Value</p> <code>/materials/*/fiber_direction</code> (<code>list</code>) <p><pre><code>/materials/*/fiber_direction\n</code></pre>  Fiber direction</p> <code>/materials/*/fiber_direction/*</code> <pre><code>/materials/*/fiber_direction/*\n</code></pre> <code>/materials/*/fiber_direction/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*</code> (<code>object</code>)<code>/materials/*/fiber_direction/*</code> (<code>list</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/value</code> <pre><code>/materials/*/fiber_direction/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/unit\n</code></pre>  The unit of the Value</p> <p> Fiber direction row</p> <code>/materials/*/fiber_direction/*/*</code> <pre><code>/materials/*/fiber_direction/*/*\n</code></pre> <code>/materials/*/fiber_direction/*/*</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>string</code>)<code>/materials/*/fiber_direction/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/materials/*/fiber_direction/*/*/value</code> <pre><code>/materials/*/fiber_direction/*/*/value\n</code></pre> <code>/materials/*/fiber_direction/*/*/value</code> (<code>float</code>)<code>/materials/*/fiber_direction/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/materials/*/fiber_direction/*/*/unit</code> (<code>string</code>) <p><pre><code>/materials/*/fiber_direction/*/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/units</code> (<code>object</code>) <p><pre><code>/units\n</code></pre>  Basic units used in the code.</p> <p>Default: <code>None</code> </p> <code>/units/length</code> (<code>string</code>) <p><pre><code>/units/length\n</code></pre>  Length unit.</p> <p>Default: <code>'m'</code></p> <code>/units/mass</code> (<code>string</code>) <p><pre><code>/units/mass\n</code></pre>  Mass unit.</p> <p>Default: <code>'kg'</code></p> <code>/units/time</code> (<code>string</code>) <p><pre><code>/units/time\n</code></pre>  Time unit.</p> <p>Default: <code>'s'</code></p> <code>/units/characteristic_length</code> (<code>float</code>) <p><pre><code>/units/characteristic_length\n</code></pre>  Characteristic length, used for tolerances.</p> <p>Default: <code>1</code></p> <code>/preset_problem</code> <pre><code>/preset_problem\n</code></pre> LinearQuadraticCubicSineFrankeFrankeOldGenericScalarExactZero_BCElasticWalkTorsionElasticDoubleTorsionElasticElasticZeroBCElasticExactElasticCantileverExactCompressionElasticExactQuadraticElasticExactLinearElasticExactPointBasedTensorKernelNodeTimeDependentScalarMinSurfGravityConstantVelocityTwoSpheresDrivenCavityDrivenCavityC0DrivenCavitySmoothFlowFlowWithObstacleCornerFlowUnitFlowWithObstacleStokesLawTaylorGreenVortexSimpleStokeProblemExactSineStokeProblemExactTransientStokeProblemExactKovnaszyAirfoilLshapeTestProblemBilaplacianProblemWithSolution <p>Type: Linear  TODO</p> <p>Default: <code>'skip'</code> </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Quadratic  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Cubic  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Sine  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Franke  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: FrankeOld  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: GenericScalarExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/func</code> (<code>int</code>) <p><pre><code>/preset_problem/func\n</code></pre>  TODO</p> <p>Default: <code>0</code></p> <p>Type: Zero_BC  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Elastic  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Walk  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TorsionElastic  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/axis_coordiante</code> (<code>int</code>) <p><pre><code>/preset_problem/axis_coordiante\n</code></pre>  TODO</p> <p>Default: <code>2</code></p> <code>/preset_problem/n_turns</code> (<code>float</code>) <p><pre><code>/preset_problem/n_turns\n</code></pre>  TODO</p> <p>Default: <code>0.5</code></p> <code>/preset_problem/fixed_boundary</code> (<code>int</code>) <p><pre><code>/preset_problem/fixed_boundary\n</code></pre>  TODO</p> <p>Default: <code>5</code></p> <code>/preset_problem/turning_boundary</code> (<code>int</code>) <p><pre><code>/preset_problem/turning_boundary\n</code></pre>  TODO</p> <p>Default: <code>6</code></p> <code>/preset_problem/bbox_center</code> (<code>list</code>) <p><pre><code>/preset_problem/bbox_center\n</code></pre>  TODO</p> <code>/preset_problem/bbox_center/*</code> (<code>float</code>) <p><pre><code>/preset_problem/bbox_center/*\n</code></pre>  TODO</p> <p>Default: <code>0</code></p> <p>Type: DoubleTorsionElastic  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/axis_coordiante0</code> (<code>int</code>) <p><pre><code>/preset_problem/axis_coordiante0\n</code></pre>  TODO</p> <p>Default: <code>2</code></p> <code>/preset_problem/axis_coordiante1</code> (<code>int</code>) <p><pre><code>/preset_problem/axis_coordiante1\n</code></pre>  TODO</p> <p>Default: <code>2</code></p> <code>/preset_problem/angular_v0</code> (<code>float</code>) <p><pre><code>/preset_problem/angular_v0\n</code></pre>  TODO</p> <p>Default: <code>0.5</code></p> <code>/preset_problem/angular_v1</code> (<code>float</code>) <p><pre><code>/preset_problem/angular_v1\n</code></pre>  TODO</p> <p>Default: <code>-0.5</code></p> <code>/preset_problem/turning_boundary0</code> (<code>int</code>) <p><pre><code>/preset_problem/turning_boundary0\n</code></pre>  TODO</p> <p>Default: <code>5</code></p> <code>/preset_problem/turning_boundary1</code> (<code>int</code>) <p><pre><code>/preset_problem/turning_boundary1\n</code></pre>  TODO</p> <p>Default: <code>6</code></p> <code>/preset_problem/bbox_center</code> (<code>list</code>) <p><pre><code>/preset_problem/bbox_center\n</code></pre>  TODO</p> <code>/preset_problem/bbox_center/*</code> (<code>float</code>) <p><pre><code>/preset_problem/bbox_center/*\n</code></pre>  TODO</p> <p>Default: <code>0</code></p> <p>Type: ElasticZeroBC  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: ElasticExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: ElasticCantileverExact  TODO, add displacement, E, nu, formulation, mesh_size </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: CompressionElasticExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: QuadraticElasticExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: LinearElasticExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: PointBasedTensor  TODO, add optionals </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Kernel  TODO, add optionals </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/formulation</code> (<code>string</code>) <p><pre><code>/preset_problem/formulation\n</code></pre>  TODO</p> <p>Default: <code>''</code></p> <code>/preset_problem/n_kernels</code> (<code>int</code>) <p><pre><code>/preset_problem/n_kernels\n</code></pre>  TODO</p> <p>Default: <code>0</code></p> <code>/preset_problem/kernel_distance</code> (<code>float</code>) <p><pre><code>/preset_problem/kernel_distance\n</code></pre>  TODO</p> <p>Default: <code>0</code></p> <code>/preset_problem/kernel_weights</code> (<code>string</code>) <p><pre><code>/preset_problem/kernel_weights\n</code></pre>  TODO</p> <p>Default: <code>''</code></p> <p>Type: Node  TODO, add optionals </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TimeDependentScalar  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: MinSurf  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Gravity  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <p>Type: ConstantVelocity  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TwoSpheres  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: DrivenCavity  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: DrivenCavityC0  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: DrivenCavitySmooth  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: Flow  TODO, add inflow, outflow, inflow_amout, outflow_amout, direction, obstacle </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: FlowWithObstacle  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <p>Type: CornerFlow  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <p>Type: UnitFlowWithObstacle  TODO, add inflow_id, direction, no_slip </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <p>Type: StokesLaw  TODO, add radius </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre>  TODO</p> <p>Default: <code>1</code></p> <p>Type: TaylorGreenVortex  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre>  TODO</p> <p>Default: <code>1</code></p> <p>Type: SimpleStokeProblemExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/func</code> (<code>int</code>) <p><pre><code>/preset_problem/func\n</code></pre>  TODO</p> <p>Default: <code>0</code></p> <p>Type: SineStokeProblemExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: TransientStokeProblemExact  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/func</code> (<code>int</code>) <p><pre><code>/preset_problem/func\n</code></pre>  TODO</p> <p>Default: <code>0</code></p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre>  TODO</p> <p>Default: <code>1</code></p> <p>Type: Kovnaszy  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <code>/preset_problem/viscosity</code> (<code>float</code>) <p><pre><code>/preset_problem/viscosity\n</code></pre>  TODO</p> <p>Default: <code>1</code></p> <p>Type: Airfoil  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <p>Type: Lshape  TODO </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p></p> <p>Type: TestProblem  TODO, type, omega, is_scalar </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <p>Type: BilaplacianProblemWithSolution  TODO, type, omega, is_scalar </p> <code>/preset_problem/type</code> (<code>string</code>) <p><pre><code>/preset_problem/type\n</code></pre>  Type of preset problem to use.</p> <p>Options: <code>['Linear', 'Quadratic', 'Cubic', 'Sine', 'Franke', 'FrankeOld', 'GenericScalarExact', 'Zero_BC', 'Elastic', 'Walk', 'TorsionElastic', 'DoubleTorsionElastic', 'ElasticZeroBC', 'ElasticExact', 'ElasticCantileverExact', 'CompressionElasticExact', 'QuadraticElasticExact', 'LinearElasticExact', 'PointBasedTensor', 'Kernel', 'Node', 'TimeDependentScalar', 'MinSurf', 'Gravity', 'ConstantVelocity', 'TwoSpheres', 'DrivenCavity', 'DrivenCavityC0', 'DrivenCavitySmooth', 'Flow', 'FlowWithObstacle', 'CornerFlow', 'UnitFlowWithObstacle', 'StokesLaw', 'TaylorGreenVortex', 'SimpleStokeProblemExact', 'SineStokeProblemExact', 'TransientStokeProblemExact', 'Kovnaszy', 'Airfoil', 'Lshape', 'TestProblem', 'BilaplacianProblemWithSolution']</code></p> <code>/common</code> (<code>file</code>) <p><pre><code>/common\n</code></pre>  Path to common settings will patch the current file.</p> <p>Default: <code>''</code></p> <p>Extensions: <code>['.json']</code></p> <code>/root_path</code> (<code>string</code>) <p><pre><code>/root_path\n</code></pre>  Path for all relative paths, set automatically to the folder containing this JSON.</p> <p>Default: <code>''</code></p> <code>/space</code> (<code>object</code>) <p><pre><code>/space\n</code></pre>  Options related to the FE space.</p> <p>Default: <code>None</code> </p> <code>/space/discr_order</code> <pre><code>/space/discr_order\n</code></pre> <code>/space/discr_order</code> (<code>int</code>)<code>/space/discr_order</code> (<code>file</code>)<code>/space/discr_order</code> (<code>list</code>) <p> Lagrange element order for the space for the main unknown, for all elements.</p> <p>Default: <code>1</code></p> <p> Path to file containing Lagrange element order for the space for the main unknown per element.</p> <p>Extensions: <code>['.txt', '.bin']</code></p> <p> List of Lagrange element order for the space for the main unknown with volume IDs.</p> <code>/space/discr_order/*</code> (<code>object</code>) <p><pre><code>/space/discr_order/*\n</code></pre>  Lagrange element order for the a space tagged with volume ID for the main unknown. </p> <code>/space/discr_order/*/id</code> <pre><code>/space/discr_order/*/id\n</code></pre> <code>/space/discr_order/*/id</code> (<code>int</code>)<code>/space/discr_order/*/id</code> (<code>list</code>) <p> Volume selection ID to apply the discr_order to.</p> <p> List of volume selection IDs to apply the discr_order to.</p> <code>/space/discr_order/*/id/*</code> (<code>int</code>) <p><pre><code>/space/discr_order/*/id/*\n</code></pre>  Volume selection ID to apply the discr_order to.</p> <code>/space/discr_order/*/order</code> (<code>int</code>) <p><pre><code>/space/discr_order/*/order\n</code></pre>  Lagrange element order for the space for the main unknown, for all elements.</p> <code>/space/pressure_discr_order</code> (<code>int</code>) <p><pre><code>/space/pressure_discr_order\n</code></pre>   Lagrange element order for the space for the pressure unknown, for all elements.</p> <p>Default: <code>1</code></p> <code>/space/basis_type</code> (<code>string</code>) <p><pre><code>/space/basis_type\n</code></pre>  Type of basis to use for non polygonal element, one of Lagrange, Spline, or Serendipity. Spline or Serendipity work only for quad/hex meshes</p> <p>Default: <code>'Lagrange'</code></p> <p>Options: <code>['Lagrange', 'Spline', 'Serendipity', 'Bernstein']</code></p> <code>/space/poly_basis_type</code> (<code>string</code>) <p><pre><code>/space/poly_basis_type\n</code></pre>  Type of basis to use for a polygonal element, one of MFSHarmonic, MeanValue, or Wachspress see \u2018PolySpline..\u2019 paper for details.</p> <p>Default: <code>'MFSHarmonic'</code></p> <p>Options: <code>['MFSHarmonic', 'MeanValue', 'Wachspress']</code></p> <code>/space/use_p_ref</code> (<code>bool</code>) <p><pre><code>/space/use_p_ref\n</code></pre>  Perform a priori p-refinement based on element shape, as described in \u2018Decoupling..\u2019 paper.</p> <p>Default: <code>False</code></p> <code>/space/remesh</code> (<code>object</code>) <p><pre><code>/space/remesh\n</code></pre>  Settings for adaptive remeshing</p> <p>Default: <code>None</code> </p> <code>/space/remesh/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/enabled\n</code></pre>  Whether to do adaptive remeshing</p> <p>Default: <code>False</code></p> <code>/space/remesh/split</code> (<code>object</code>) <p><pre><code>/space/remesh/split\n</code></pre>  Settings for adaptive remeshing edge splitting operations</p> <p>Default: <code>None</code> </p> <code>/space/remesh/split/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/split/enabled\n</code></pre>  Whether to do edge splitting in adaptive remeshing</p> <p>Default: <code>True</code></p> <code>/space/remesh/split/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/split/acceptance_tolerance\n</code></pre>  Accept split operation if energy decreased by at least x</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/split/culling_threshold</code> (<code>float</code>) <p><pre><code>/space/remesh/split/culling_threshold\n</code></pre>  Split operation culling threshold on energy</p> <p>Default: <code>0.95</code></p> <p>Range: <code>[0, 1]</code></p> <code>/space/remesh/split/max_depth</code> (<code>int</code>) <p><pre><code>/space/remesh/split/max_depth\n</code></pre>  Maximum depth split per time-step</p> <p>Default: <code>3</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/split/min_edge_length</code> (<code>float</code>) <p><pre><code>/space/remesh/split/min_edge_length\n</code></pre>  Minimum edge length to split</p> <p>Default: <code>1e-06</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/collapse</code> (<code>object</code>) <p><pre><code>/space/remesh/collapse\n</code></pre>  Settings for adaptive remeshing edge collapse operations</p> <p>Default: <code>None</code> </p> <code>/space/remesh/collapse/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/collapse/enabled\n</code></pre>  Whether to do edge collapse in adaptive remeshing</p> <p>Default: <code>True</code></p> <code>/space/remesh/collapse/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/acceptance_tolerance\n</code></pre>  Accept collapse operation if energy decreased by at least x</p> <p>Default: <code>-1e-08</code></p> <p>Range: <code>[-inf, 0]</code></p> <code>/space/remesh/collapse/culling_threshold</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/culling_threshold\n</code></pre>  Collapse operation culling threshold on energy</p> <p>Default: <code>0.01</code></p> <p>Range: <code>[0, 1]</code></p> <code>/space/remesh/collapse/max_depth</code> (<code>int</code>) <p><pre><code>/space/remesh/collapse/max_depth\n</code></pre>  Maximum depth collapse per time-step</p> <p>Default: <code>3</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/collapse/rel_max_edge_length</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/rel_max_edge_length\n</code></pre>  Length of maximum edge length to collapse relative to initial minimum edge length</p> <p>Default: <code>1</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/collapse/abs_max_edge_length</code> (<code>float</code>) <p><pre><code>/space/remesh/collapse/abs_max_edge_length\n</code></pre>  Length of maximum edge length to collapse in absolute units of distance</p> <p>Default: <code>1e+100</code></p> <p>Range: <code>[0, inf]</code></p> <code>/space/remesh/swap</code> (<code>object</code>) <p><pre><code>/space/remesh/swap\n</code></pre>  Settings for adaptive remeshing edge/face swap operations</p> <p>Default: <code>None</code> </p> <code>/space/remesh/swap/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/swap/enabled\n</code></pre>  Whether to do edge/face swap in adaptive remeshing</p> <p>Default: <code>False</code></p> <code>/space/remesh/swap/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/swap/acceptance_tolerance\n</code></pre>  Accept swap operation if energy decreased by at least x</p> <p>Default: <code>-1e-08</code></p> <p>Range: <code>[-inf, 0]</code></p> <code>/space/remesh/swap/max_depth</code> (<code>int</code>) <p><pre><code>/space/remesh/swap/max_depth\n</code></pre>  Maximum depth swap per time-step</p> <p>Default: <code>3</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/smooth</code> (<code>object</code>) <p><pre><code>/space/remesh/smooth\n</code></pre>  Settings for adaptive remeshing vertex smoothing operations</p> <p>Default: <code>None</code> </p> <code>/space/remesh/smooth/enabled</code> (<code>bool</code>) <p><pre><code>/space/remesh/smooth/enabled\n</code></pre>  Whether to do vertex smoothing in adaptive remeshing</p> <p>Default: <code>False</code></p> <code>/space/remesh/smooth/acceptance_tolerance</code> (<code>float</code>) <p><pre><code>/space/remesh/smooth/acceptance_tolerance\n</code></pre>  Accept smooth operation if energy decreased by at least x</p> <p>Default: <code>-1e-08</code></p> <p>Range: <code>[-inf, 0]</code></p> <code>/space/remesh/smooth/max_iters</code> (<code>int</code>) <p><pre><code>/space/remesh/smooth/max_iters\n</code></pre>  Maximum number of smoothing iterations per time-step</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, inf]</code></p> <code>/space/remesh/local_relaxation</code> (<code>object</code>) <p><pre><code>/space/remesh/local_relaxation\n</code></pre>  Settings for adaptive remeshing local relaxation</p> <p>Default: <code>None</code> </p> <code>/space/remesh/local_relaxation/local_mesh_n_ring</code> (<code>int</code>) <p><pre><code>/space/remesh/local_relaxation/local_mesh_n_ring\n</code></pre>  Size of n-ring for local relaxation</p> <p>Default: <code>2</code></p> <code>/space/remesh/local_relaxation/local_mesh_rel_area</code> (<code>float</code>) <p><pre><code>/space/remesh/local_relaxation/local_mesh_rel_area\n</code></pre>  Minimum area for local relaxation</p> <p>Default: <code>0.01</code></p> <code>/space/remesh/local_relaxation/max_nl_iterations</code> (<code>int</code>) <p><pre><code>/space/remesh/local_relaxation/max_nl_iterations\n</code></pre>  Maximum number of nonlinear solver iterations before acceptance check</p> <p>Default: <code>1</code></p> <code>/space/remesh/type</code> (<code>string</code>) <p><pre><code>/space/remesh/type\n</code></pre>  Type of adaptive remeshing to use.</p> <p>Default: <code>'physics'</code></p> <p>Options: <code>['physics', 'sizing_field']</code></p> <code>/space/advanced</code> (<code>object</code>) <p><pre><code>/space/advanced\n</code></pre>  Advanced settings for the FE space.</p> <p>Default: <code>None</code> </p> <code>/space/advanced/discr_order_max</code> (<code>int</code>) <p><pre><code>/space/advanced/discr_order_max\n</code></pre>  Maximal discretization order in adaptive p-refinement and hp-refinement</p> <p>Default: <code>4</code></p> <code>/space/advanced/isoparametric</code> (<code>bool</code>) <p><pre><code>/space/advanced/isoparametric\n</code></pre>  Forces geometric map basis to be the same degree as the main variable basis, irrespective of the degree associated with the geom. map degrees associated with the elements of the geometry.</p> <p>Default: <code>False</code></p> <code>/space/advanced/bc_method</code> (<code>string</code>) <p><pre><code>/space/advanced/bc_method\n</code></pre>  Method for imposing analytic Dirichet boundary conditions. If \u2018lsq\u2019 (least-squares fit), then the bc function is sampled at quadrature points, and the FEspace nodal values on the boundary are determined by minimizing L2 norm of the difference. If \u2018sample\u2019, then the analytic bc function is sampled at the boundary nodes.</p> <p>Default: <code>'sample'</code></p> <p>Options: <code>['lsq', 'sample']</code></p> <code>/space/advanced/n_boundary_samples</code> (<code>int</code>) <p><pre><code>/space/advanced/n_boundary_samples\n</code></pre>  Per-element number of boundary samples for analytic Dirichlet and Neumann boundary conditions.</p> <p>Default: <code>-1</code></p> <code>/space/advanced/quadrature_order</code> (<code>int</code>) <p><pre><code>/space/advanced/quadrature_order\n</code></pre>  Minimal quadrature order to use in matrix and rhs assembly; the actual order is determined as min(2*(p-1)+1,quadrature_order).</p> <p>Default: <code>-1</code></p> <code>/space/advanced/mass_quadrature_order</code> (<code>int</code>) <p><pre><code>/space/advanced/mass_quadrature_order\n</code></pre>  Minimal quadrature order to use in mass matrix assembler; the actual order is determined as min(2*p+1,quadrature_order)</p> <p>Default: <code>-1</code></p> <code>/space/advanced/use_corner_quadrature</code> (<code>bool</code>) <p><pre><code>/space/advanced/use_corner_quadrature\n</code></pre>  Use quadrature rules that always include all the vertices of the element.</p> <p>Default: <code>False</code></p> <code>/space/advanced/integral_constraints</code> (<code>int</code>) <p><pre><code>/space/advanced/integral_constraints\n</code></pre>  Number of constraints for non-conforming polygonal basis;  0, 1, or 2; see \u2018PolySpline..\u2019 paper for details.</p> <p>Default: <code>2</code></p> <code>/space/advanced/n_harmonic_samples</code> (<code>int</code>) <p><pre><code>/space/advanced/n_harmonic_samples\n</code></pre>  If MFSHarmonics is used for a polygonal element, number of collocation samples used in the basis construction;see \u2018PolySpline..\u2019 paper for details.</p> <p>Default: <code>10</code></p> <code>/space/advanced/force_no_ref_for_harmonic</code> (<code>bool</code>) <p><pre><code>/space/advanced/force_no_ref_for_harmonic\n</code></pre>  If true, do not do uniform global refinement if the mesh contains polygonal elements.</p> <p>Default: <code>False</code></p> <code>/space/advanced/B</code> (<code>int</code>) <p><pre><code>/space/advanced/B\n</code></pre>  The target deviation of the error on elements from perfect element error, for a priori geometry-dependent p-refinement, see \u2018Decoupling .. \u2018 paper.</p> <p>Default: <code>3</code></p> <code>/space/advanced/h1_formula</code> (<code>bool</code>) <p><pre><code>/space/advanced/h1_formula\n</code></pre> </p> <p>Default: <code>False</code></p> <code>/space/advanced/count_flipped_els</code> (<code>bool</code>) <p><pre><code>/space/advanced/count_flipped_els\n</code></pre>  Count the number of elements with Jacobian of the geometric map not positive at quadrature points.</p> <p>Default: <code>True</code></p> <code>/space/advanced/count_flipped_els_continuous</code> (<code>bool</code>) <p><pre><code>/space/advanced/count_flipped_els_continuous\n</code></pre>  Count the number of elements with Jacobian of the geometric map not positive at any point.</p> <p>Default: <code>False</code></p> <code>/space/advanced/use_particle_advection</code> (<code>bool</code>) <p><pre><code>/space/advanced/use_particle_advection\n</code></pre>  Use particle advection in splitting method for solving NS equation.</p> <p>Default: <code>False</code></p> <code>/time</code> <pre><code>/time\n</code></pre> <code>/time</code> (<code>object</code>)<code>/time</code> (<code>object</code>)<code>/time</code> (<code>object</code>) <p> The time parameters: start time <code>t0</code>, end time <code>tend</code>, time step <code>dt</code>.</p> <p>Default: <code>'skip'</code> </p> <code>/time/tend</code> (<code>float</code>) <p><pre><code>/time/tend\n</code></pre>  Ending time</p> <p>Range: <code>[0, inf]</code></p> <code>/time/dt</code> (<code>float</code>) <p><pre><code>/time/dt\n</code></pre>  Time step size \\(\\Delta t\\)</p> <p>Range: <code>[0, inf]</code></p> <p></p> <code>/time/t0</code> (<code>float</code>) <p><pre><code>/time/t0\n</code></pre>  Startning time</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/time/integrator</code> <pre><code>/time/integrator\n</code></pre> <code>/time/integrator</code> (<code>string</code>)ImplicitEulerBDFImplicitNewmark <p> Time integrator</p> <p>Default: <code>'ImplicitEuler'</code></p> <p>Options: <code>['ImplicitEuler', 'BDF1', 'BDF2', 'BDF3', 'BDF4', 'BDF5', 'BDF6', 'ImplicitNewmark']</code></p> <p>Type: ImplicitEuler  Implicit Euler time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Type: BDF  Backwards differentiation formula time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p></p> <code>/time/integrator/steps</code> (<code>int</code>) <p><pre><code>/time/integrator/steps\n</code></pre>  BDF order</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, 6]</code></p> <p>Type: ImplicitNewmark  Implicit Newmark time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p></p> <code>/time/integrator/gamma</code> (<code>float</code>) <p><pre><code>/time/integrator/gamma\n</code></pre>  Newmark gamma</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, 1]</code></p> <code>/time/integrator/beta</code> (<code>float</code>) <p><pre><code>/time/integrator/beta\n</code></pre>  Newmark beta</p> <p>Default: <code>0.25</code></p> <p>Range: <code>[0, 0.5]</code></p> <code>/time/quasistatic</code> (<code>bool</code>) <p><pre><code>/time/quasistatic\n</code></pre>  Ignore inertia in time dependent. Used for doing incremental load.</p> <p>Default: <code>False</code></p> <p> The time parameters: start time <code>t0</code>, time step <code>dt</code>, number of time steps. </p> <code>/time/time_steps</code> (<code>int</code>) <p><pre><code>/time/time_steps\n</code></pre>  Number of time steps</p> <p>Range: <code>[0, inf]</code></p> <code>/time/dt</code> (<code>float</code>) <p><pre><code>/time/dt\n</code></pre>  Time step size \\(\\Delta t\\)</p> <p>Range: <code>[0, inf]</code></p> <p></p> <code>/time/t0</code> (<code>float</code>) <p><pre><code>/time/t0\n</code></pre>  Startning time</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/time/integrator</code> <pre><code>/time/integrator\n</code></pre> <code>/time/integrator</code> (<code>string</code>)ImplicitEulerBDFImplicitNewmark <p> Time integrator</p> <p>Default: <code>'ImplicitEuler'</code></p> <p>Options: <code>['ImplicitEuler', 'BDF1', 'BDF2', 'BDF3', 'BDF4', 'BDF5', 'BDF6', 'ImplicitNewmark']</code></p> <p>Type: ImplicitEuler  Implicit Euler time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Type: BDF  Backwards differentiation formula time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p></p> <code>/time/integrator/steps</code> (<code>int</code>) <p><pre><code>/time/integrator/steps\n</code></pre>  BDF order</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, 6]</code></p> <p>Type: ImplicitNewmark  Implicit Newmark time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p></p> <code>/time/integrator/gamma</code> (<code>float</code>) <p><pre><code>/time/integrator/gamma\n</code></pre>  Newmark gamma</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, 1]</code></p> <code>/time/integrator/beta</code> (<code>float</code>) <p><pre><code>/time/integrator/beta\n</code></pre>  Newmark beta</p> <p>Default: <code>0.25</code></p> <p>Range: <code>[0, 0.5]</code></p> <code>/time/quasistatic</code> (<code>bool</code>) <p><pre><code>/time/quasistatic\n</code></pre>  Ignore inertia in time dependent. Used for doing incremental load.</p> <p>Default: <code>False</code></p> <p> The time parameters: start time <code>t0</code>, end time <code>tend</code>, number of time steps. </p> <code>/time/time_steps</code> (<code>int</code>) <p><pre><code>/time/time_steps\n</code></pre>  Number of time steps</p> <p>Range: <code>[0, inf]</code></p> <code>/time/tend</code> (<code>float</code>) <p><pre><code>/time/tend\n</code></pre>  Ending time</p> <p>Range: <code>[0, inf]</code></p> <p></p> <code>/time/t0</code> (<code>float</code>) <p><pre><code>/time/t0\n</code></pre>  Startning time</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/time/integrator</code> <pre><code>/time/integrator\n</code></pre> <code>/time/integrator</code> (<code>string</code>)ImplicitEulerBDFImplicitNewmark <p> Time integrator</p> <p>Default: <code>'ImplicitEuler'</code></p> <p>Options: <code>['ImplicitEuler', 'BDF1', 'BDF2', 'BDF3', 'BDF4', 'BDF5', 'BDF6', 'ImplicitNewmark']</code></p> <p>Type: ImplicitEuler  Implicit Euler time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p>Type: BDF  Backwards differentiation formula time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p></p> <code>/time/integrator/steps</code> (<code>int</code>) <p><pre><code>/time/integrator/steps\n</code></pre>  BDF order</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, 6]</code></p> <p>Type: ImplicitNewmark  Implicit Newmark time integration </p> <code>/time/integrator/type</code> (<code>string</code>) <p><pre><code>/time/integrator/type\n</code></pre>  Type of time integrator to use</p> <p>Options: <code>['ImplicitEuler', 'BDF', 'ImplicitNewmark']</code></p> <p></p> <code>/time/integrator/gamma</code> (<code>float</code>) <p><pre><code>/time/integrator/gamma\n</code></pre>  Newmark gamma</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, 1]</code></p> <code>/time/integrator/beta</code> (<code>float</code>) <p><pre><code>/time/integrator/beta\n</code></pre>  Newmark beta</p> <p>Default: <code>0.25</code></p> <p>Range: <code>[0, 0.5]</code></p> <code>/time/quasistatic</code> (<code>bool</code>) <p><pre><code>/time/quasistatic\n</code></pre>  Ignore inertia in time dependent. Used for doing incremental load.</p> <p>Default: <code>False</code></p> <code>/contact</code> (<code>object</code>) <p><pre><code>/contact\n</code></pre>  Contact handling parameters.</p> <p>Default: <code>None</code> </p> <code>/contact/enabled</code> (<code>bool</code>) <p><pre><code>/contact/enabled\n</code></pre>  True if contact handling is enabled.</p> <p>Default: <code>False</code></p> <code>/contact/dhat</code> (<code>float</code>) <p><pre><code>/contact/dhat\n</code></pre>  Contact barrier activation distance.</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/contact/dhat_percentage</code> (<code>float</code>) <p><pre><code>/contact/dhat_percentage\n</code></pre> \\(\\hat{d}\\) as percentage of the diagonal of the bounding box</p> <p>Default: <code>0.8</code></p> <code>/contact/epsv</code> (<code>float</code>) <p><pre><code>/contact/epsv\n</code></pre>  Friction smoothing parameter.</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/contact/friction_coefficient</code> (<code>float</code>) <p><pre><code>/contact/friction_coefficient\n</code></pre>  Coefficient of friction (global)</p> <p>Default: <code>0</code></p> <code>/contact/use_convergent_formulation</code> (<code>bool</code>) <p><pre><code>/contact/use_convergent_formulation\n</code></pre>  Whether to use the convergent (area weighted) formulation of IPC.</p> <p>Default: <code>False</code></p> <code>/contact/use_area_weighting</code> (<code>bool</code>) <p><pre><code>/contact/use_area_weighting\n</code></pre>  If using the convergent formulation, whether or not to use area weighting. Currently not implemented.</p> <p>Default: <code>True</code></p> <code>/contact/use_improved_max_operator</code> (<code>bool</code>) <p><pre><code>/contact/use_improved_max_operator\n</code></pre>  If using the convergent formulation, whether or not to use improved max operator. Currently not implemented.</p> <p>Default: <code>True</code></p> <code>/contact/use_physical_barrier</code> (<code>bool</code>) <p><pre><code>/contact/use_physical_barrier\n</code></pre>  If using the convergent formulation, whether or not to use physical barrier stiffness. Currently not implemented.</p> <p>Default: <code>True</code></p> <code>/contact/collision_mesh</code> <pre><code>/contact/collision_mesh\n</code></pre> <code>/contact/collision_mesh</code> (<code>object</code>)<code>/contact/collision_mesh</code> (<code>object</code>)<code>/contact/collision_mesh</code> (<code>object</code>) <p> Load a preconstructed collision mesh.</p> <p>Default: <code>'skip'</code> </p> <code>/contact/collision_mesh/mesh</code> (<code>string</code>) <p><pre><code>/contact/collision_mesh/mesh\n</code></pre>  Path to preconstructed collision mesh.</p> <code>/contact/collision_mesh/linear_map</code> (<code>string</code>) <p><pre><code>/contact/collision_mesh/linear_map\n</code></pre>  HDF file storing the linear mapping of displacements.</p> <p></p> <code>/contact/collision_mesh/enabled</code> (<code>bool</code>) <p><pre><code>/contact/collision_mesh/enabled\n</code></pre> </p> <p>Default: <code>True</code></p> <p> Construct a collision mesh with a maximum edge length. </p> <code>/contact/collision_mesh/max_edge_length</code> (<code>float</code>) <p><pre><code>/contact/collision_mesh/max_edge_length\n</code></pre>  Maximum edge length to use for building the collision mesh.</p> <p></p> <code>/contact/collision_mesh/tessellation_type</code> (<code>string</code>) <p><pre><code>/contact/collision_mesh/tessellation_type\n</code></pre>  Type of tessellation to use for building the collision mesh.</p> <p>Default: <code>'regular'</code></p> <p>Options: <code>['regular', 'irregular']</code></p> <code>/contact/collision_mesh/enabled</code> (<code>bool</code>) <p><pre><code>/contact/collision_mesh/enabled\n</code></pre> </p> <p>Default: <code>True</code></p> <p> Construct a collision mesh. </p> <code>/contact/collision_mesh/enabled</code> (<code>bool</code>) <p><pre><code>/contact/collision_mesh/enabled\n</code></pre> </p> <p>Default: <code>True</code></p> <code>/contact/use_gcp_formulation</code> (<code>bool</code>) <p><pre><code>/contact/use_gcp_formulation\n</code></pre>  True if the smooth contact formulation is used.</p> <p>Default: <code>False</code></p> <code>/contact/alpha_n</code> (<code>float</code>) <p><pre><code>/contact/alpha_n\n</code></pre>  Control the smoothness of normal angle contraints of contact pairs.</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[-1, 1]</code></p> <code>/contact/alpha_t</code> (<code>float</code>) <p><pre><code>/contact/alpha_t\n</code></pre>  Control the smoothness of tangent angle contraints of contact pairs.</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[-1, 1]</code></p> <code>/contact/min_distance_ratio</code> (<code>float</code>) <p><pre><code>/contact/min_distance_ratio\n</code></pre>  Ratio of the minimum distance to contact to define local epsilon.</p> <p>Default: <code>0.5</code></p> <p>Range: <code>[0, inf]</code></p> <code>/contact/use_adaptive_dhat</code> (<code>bool</code>) <p><pre><code>/contact/use_adaptive_dhat\n</code></pre>  True if adaptive epsilon is used.</p> <p>Default: <code>False</code></p> <code>/contact/periodic</code> (<code>bool</code>) <p><pre><code>/contact/periodic\n</code></pre>  Set to true to check collision between adjacent periodic cells.</p> <p>Default: <code>False</code></p> <code>/contact/adhesion</code> (<code>object</code>) <p><pre><code>/contact/adhesion\n</code></pre>  Adhesion settings.</p> <p>Default: <code>None</code> </p> <code>/contact/adhesion/adhesion_enabled</code> (<code>bool</code>) <p><pre><code>/contact/adhesion/adhesion_enabled\n</code></pre>  Set to true to enable normal adhesion forces.</p> <p>Default: <code>False</code></p> <code>/contact/adhesion/dhat_p</code> (<code>float</code>) <p><pre><code>/contact/adhesion/dhat_p\n</code></pre>  Distance at which normal adhesion force reaches its maximum.</p> <p>Default: <code>0.001</code></p> <code>/contact/adhesion/dhat_a</code> (<code>float</code>) <p><pre><code>/contact/adhesion/dhat_a\n</code></pre>  Distance at which normal adhesion force is activated.</p> <p>Default: <code>0.01</code></p> <code>/contact/adhesion/adhesion_strength</code> (<code>float</code>) <p><pre><code>/contact/adhesion/adhesion_strength\n</code></pre>  Parameter that sets the strength of the normal adhesion force.</p> <p>Default: <code>0.001</code></p> <code>/contact/adhesion/tangential_adhesion_coefficient</code> (<code>float</code>) <p><pre><code>/contact/adhesion/tangential_adhesion_coefficient\n</code></pre>  Coefficient of tangential adhesion (global)</p> <p>Default: <code>0.0</code></p> <code>/contact/adhesion/epsa</code> (<code>float</code>) <p><pre><code>/contact/adhesion/epsa\n</code></pre>  Tangential adhesion smoothing parameter.</p> <p>Default: <code>0.001</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver</code> (<code>object</code>) <p><pre><code>/solver\n</code></pre>  The settings for the solver including linear solver, nonlinear solver, and some advanced options.</p> <p>Default: <code>None</code> </p> <code>/solver/max_threads</code> (<code>int</code>) <p><pre><code>/solver/max_threads\n</code></pre>  Maximum number of threads used; 0 is unlimited.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/linear</code> (<code>object</code>) <p><pre><code>/solver/linear\n</code></pre>  Settings for the linear solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/enable_overwrite_solver</code> (<code>bool</code>) <p><pre><code>/solver/linear/enable_overwrite_solver\n</code></pre>  If solver name is not present, falls back to default</p> <p>Default: <code>False</code></p> <code>/solver/linear/solver</code> (<code>string</code>) <p><pre><code>/solver/linear/solver\n</code></pre>  Linear solver type.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::SimplicialLDLT', 'Eigen::SparseLU', 'Eigen::CholmodSupernodalLLT', 'Eigen::UmfPackLU', 'Eigen::SuperLU', 'Eigen::PardisoLDLT', 'Eigen::PardisoLLT', 'Eigen::PardisoLU', 'Pardiso', 'Hypre', 'AMGCL', 'Eigen::LeastSquaresConjugateGradient', 'Eigen::DGMRES', 'Eigen::ConjugateGradient', 'Eigen::BiCGSTAB', 'Eigen::GMRES', 'Eigen::MINRES']</code></p> <code>/solver/linear/precond</code> (<code>string</code>) <p><pre><code>/solver/linear/precond\n</code></pre>  Preconditioner used if using an iterative linear solver.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::IdentityPreconditioner', 'Eigen::DiagonalPreconditioner', 'Eigen::IncompleteCholesky', 'Eigen::LeastSquareDiagonalPreconditioner', 'Eigen::IncompleteLUT']</code></p> <code>/solver/linear/Eigen::LeastSquaresConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::LeastSquaresConjugateGradient\n</code></pre>  Settings for the Eigen\u2019s Least Squares Conjugate Gradient solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Eigen::LeastSquaresConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::LeastSquaresConjugateGradient/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::LeastSquaresConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::LeastSquaresConjugateGradient/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::DGMRES</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::DGMRES\n</code></pre>  Settings for the Eigen\u2019s DGMRES solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Eigen::DGMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::DGMRES/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::DGMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::DGMRES/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::ConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::ConjugateGradient\n</code></pre>  Settings for the Eigen\u2019s Conjugate Gradient solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Eigen::ConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::ConjugateGradient/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::ConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::ConjugateGradient/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::BiCGSTAB</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::BiCGSTAB\n</code></pre>  Settings for the Eigen\u2019s BiCGSTAB solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Eigen::BiCGSTAB/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::BiCGSTAB/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::BiCGSTAB/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::BiCGSTAB/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::GMRES</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::GMRES\n</code></pre>  Settings for the Eigen\u2019s GMRES solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Eigen::GMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::GMRES/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::GMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::GMRES/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Eigen::MINRES</code> (<code>object</code>) <p><pre><code>/solver/linear/Eigen::MINRES\n</code></pre>  Settings for the Eigen\u2019s MINRES solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Eigen::MINRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Eigen::MINRES/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Eigen::MINRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Eigen::MINRES/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/linear/Pardiso</code> (<code>object</code>) <p><pre><code>/solver/linear/Pardiso\n</code></pre>  Settings for the Pardiso solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Pardiso/mtype</code> (<code>int</code>) <p><pre><code>/solver/linear/Pardiso/mtype\n</code></pre>  Matrix type.</p> <p>Default: <code>11</code></p> <p>Options: <code>[1, 2, -2, 3, 4, -4, 6, 11, 13]</code></p> <code>/solver/linear/Hypre</code> (<code>object</code>) <p><pre><code>/solver/linear/Hypre\n</code></pre>  Settings for the Hypre solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/Hypre/max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Hypre/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/Hypre/pre_max_iter</code> (<code>int</code>) <p><pre><code>/solver/linear/Hypre/pre_max_iter\n</code></pre>  Maximum number of pre iterations.</p> <p>Default: <code>1</code></p> <code>/solver/linear/Hypre/tolerance</code> (<code>float</code>) <p><pre><code>/solver/linear/Hypre/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/linear/AMGCL</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL\n</code></pre>  Settings for the AMGCL solver.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/AMGCL/solver</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/solver\n</code></pre>  Solver settings for the AMGCL.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/AMGCL/solver/tol</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/solver/tol\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/linear/AMGCL/solver/maxiter</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/solver/maxiter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/linear/AMGCL/solver/type</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/solver/type\n</code></pre>  Type of solver to use.</p> <p>Default: <code>'cg'</code></p> <code>/solver/linear/AMGCL/precond</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond\n</code></pre>  Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/AMGCL/precond/relax</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax\n</code></pre>  Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/AMGCL/precond/relax/degree</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/degree\n</code></pre>  Degree of the polynomial.</p> <p>Default: <code>16</code></p> <code>/solver/linear/AMGCL/precond/relax/type</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/type\n</code></pre>  Type of relaxation to use.</p> <p>Default: <code>'chebyshev'</code></p> <code>/solver/linear/AMGCL/precond/relax/power_iters</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/power_iters\n</code></pre>  Number of power iterations.</p> <p>Default: <code>100</code></p> <code>/solver/linear/AMGCL/precond/relax/higher</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/higher\n</code></pre>  Higher level relaxation.</p> <p>Default: <code>2</code></p> <code>/solver/linear/AMGCL/precond/relax/lower</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/lower\n</code></pre>  Lower level relaxation.</p> <p>Default: <code>0.008333333333</code></p> <code>/solver/linear/AMGCL/precond/relax/scale</code> (<code>bool</code>) <p><pre><code>/solver/linear/AMGCL/precond/relax/scale\n</code></pre>  Scale.</p> <p>Default: <code>True</code></p> <code>/solver/linear/AMGCL/precond/class</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/precond/class\n</code></pre>  Type of preconditioner to use.</p> <p>Default: <code>'amg'</code></p> <code>/solver/linear/AMGCL/precond/max_levels</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/max_levels\n</code></pre>  Maximum number of levels.</p> <p>Default: <code>6</code></p> <code>/solver/linear/AMGCL/precond/direct_coarse</code> (<code>bool</code>) <p><pre><code>/solver/linear/AMGCL/precond/direct_coarse\n</code></pre>  Use direct solver for the coarsest level.</p> <p>Default: <code>False</code></p> <code>/solver/linear/AMGCL/precond/ncycle</code> (<code>int</code>) <p><pre><code>/solver/linear/AMGCL/precond/ncycle\n</code></pre>  Number of cycles.</p> <p>Default: <code>2</code></p> <code>/solver/linear/AMGCL/precond/coarsening</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening\n</code></pre>  Coarsening parameters.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/AMGCL/precond/coarsening/type</code> (<code>string</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/type\n</code></pre>  Coarsening type.</p> <p>Default: <code>'smoothed_aggregation'</code></p> <code>/solver/linear/AMGCL/precond/coarsening/estimate_spectral_radius</code> (<code>bool</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/estimate_spectral_radius\n</code></pre>  Should the spectral radius be estimated.</p> <p>Default: <code>True</code></p> <code>/solver/linear/AMGCL/precond/coarsening/relax</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/relax\n</code></pre>  Coarsening relaxation.</p> <p>Default: <code>1</code></p> <code>/solver/linear/AMGCL/precond/coarsening/aggr</code> (<code>object</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/aggr\n</code></pre>  Aggregation settings.</p> <p>Default: <code>None</code> </p> <code>/solver/linear/AMGCL/precond/coarsening/aggr/eps_strong</code> (<code>float</code>) <p><pre><code>/solver/linear/AMGCL/precond/coarsening/aggr/eps_strong\n</code></pre>  Aggregation epsilon strong.</p> <p>Default: <code>0</code></p> <code>/solver/adjoint_linear</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear\n</code></pre>  Settings for the linear solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/enable_overwrite_solver</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/enable_overwrite_solver\n</code></pre>  If solver name is not present, falls back to default</p> <p>Default: <code>False</code></p> <code>/solver/adjoint_linear/solver</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/solver\n</code></pre>  Linear solver type.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::SimplicialLDLT', 'Eigen::SparseLU', 'Eigen::CholmodSupernodalLLT', 'Eigen::UmfPackLU', 'Eigen::SuperLU', 'Eigen::PardisoLDLT', 'Eigen::PardisoLLT', 'Eigen::PardisoLU', 'Pardiso', 'Hypre', 'AMGCL', 'Eigen::LeastSquaresConjugateGradient', 'Eigen::DGMRES', 'Eigen::ConjugateGradient', 'Eigen::BiCGSTAB', 'Eigen::GMRES', 'Eigen::MINRES']</code></p> <code>/solver/adjoint_linear/precond</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/precond\n</code></pre>  Preconditioner used if using an iterative linear solver.</p> <p>Default: <code>''</code></p> <p>Options: <code>['Eigen::IdentityPreconditioner', 'Eigen::DiagonalPreconditioner', 'Eigen::IncompleteCholesky', 'Eigen::LeastSquareDiagonalPreconditioner', 'Eigen::IncompleteLUT']</code></p> <code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient\n</code></pre>  Settings for the Eigen\u2019s Least Squares Conjugate Gradient solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::LeastSquaresConjugateGradient/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::DGMRES</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::DGMRES\n</code></pre>  Settings for the Eigen\u2019s DGMRES solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Eigen::DGMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::DGMRES/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::DGMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::DGMRES/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::ConjugateGradient</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::ConjugateGradient\n</code></pre>  Settings for the Eigen\u2019s Conjugate Gradient solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Eigen::ConjugateGradient/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::ConjugateGradient/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::ConjugateGradient/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::ConjugateGradient/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::BiCGSTAB</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::BiCGSTAB\n</code></pre>  Settings for the Eigen\u2019s BiCGSTAB solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Eigen::BiCGSTAB/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::BiCGSTAB/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::BiCGSTAB/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::BiCGSTAB/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::GMRES</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::GMRES\n</code></pre>  Settings for the Eigen\u2019s GMRES solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Eigen::GMRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::GMRES/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::GMRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::GMRES/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Eigen::MINRES</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Eigen::MINRES\n</code></pre>  Settings for the Eigen\u2019s MINRES solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Eigen::MINRES/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Eigen::MINRES/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Eigen::MINRES/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Eigen::MINRES/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-12</code></p> <code>/solver/adjoint_linear/Pardiso</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Pardiso\n</code></pre>  Settings for the Pardiso solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Pardiso/mtype</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Pardiso/mtype\n</code></pre>  Matrix type.</p> <p>Default: <code>11</code></p> <p>Options: <code>[1, 2, -2, 3, 4, -4, 6, 11, 13]</code></p> <code>/solver/adjoint_linear/Hypre</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/Hypre\n</code></pre>  Settings for the Hypre solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/Hypre/max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Hypre/max_iter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/Hypre/pre_max_iter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/Hypre/pre_max_iter\n</code></pre>  Maximum number of pre iterations.</p> <p>Default: <code>1</code></p> <code>/solver/adjoint_linear/Hypre/tolerance</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/Hypre/tolerance\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/adjoint_linear/AMGCL</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL\n</code></pre>  Settings for the AMGCL solver.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/AMGCL/solver</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver\n</code></pre>  Solver settings for the AMGCL.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/AMGCL/solver/tol</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver/tol\n</code></pre>  Convergence tolerance.</p> <p>Default: <code>1e-10</code></p> <code>/solver/adjoint_linear/AMGCL/solver/maxiter</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver/maxiter\n</code></pre>  Maximum number of iterations.</p> <p>Default: <code>1000</code></p> <code>/solver/adjoint_linear/AMGCL/solver/type</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/solver/type\n</code></pre>  Type of solver to use.</p> <p>Default: <code>'cg'</code></p> <code>/solver/adjoint_linear/AMGCL/precond</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond\n</code></pre>  Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/AMGCL/precond/relax</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax\n</code></pre>  Preconditioner settings for the AMGCL.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/AMGCL/precond/relax/degree</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/degree\n</code></pre>  Degree of the polynomial.</p> <p>Default: <code>16</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/type</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/type\n</code></pre>  Type of relaxation to use.</p> <p>Default: <code>'chebyshev'</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/power_iters</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/power_iters\n</code></pre>  Number of power iterations.</p> <p>Default: <code>100</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/higher</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/higher\n</code></pre>  Higher level relaxation.</p> <p>Default: <code>2</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/lower</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/lower\n</code></pre>  Lower level relaxation.</p> <p>Default: <code>0.008333333333</code></p> <code>/solver/adjoint_linear/AMGCL/precond/relax/scale</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/relax/scale\n</code></pre>  Scale.</p> <p>Default: <code>True</code></p> <code>/solver/adjoint_linear/AMGCL/precond/class</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/class\n</code></pre>  Type of preconditioner to use.</p> <p>Default: <code>'amg'</code></p> <code>/solver/adjoint_linear/AMGCL/precond/max_levels</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/max_levels\n</code></pre>  Maximum number of levels.</p> <p>Default: <code>6</code></p> <code>/solver/adjoint_linear/AMGCL/precond/direct_coarse</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/direct_coarse\n</code></pre>  Use direct solver for the coarsest level.</p> <p>Default: <code>False</code></p> <code>/solver/adjoint_linear/AMGCL/precond/ncycle</code> (<code>int</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/ncycle\n</code></pre>  Number of cycles.</p> <p>Default: <code>2</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening\n</code></pre>  Coarsening parameters.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/type</code> (<code>string</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/type\n</code></pre>  Coarsening type.</p> <p>Default: <code>'smoothed_aggregation'</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/estimate_spectral_radius</code> (<code>bool</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/estimate_spectral_radius\n</code></pre>  Should the spectral radius be estimated.</p> <p>Default: <code>True</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/relax</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/relax\n</code></pre>  Coarsening relaxation.</p> <p>Default: <code>1</code></p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr</code> (<code>object</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr\n</code></pre>  Aggregation settings.</p> <p>Default: <code>None</code> </p> <code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr/eps_strong</code> (<code>float</code>) <p><pre><code>/solver/adjoint_linear/AMGCL/precond/coarsening/aggr/eps_strong\n</code></pre>  Aggregation epsilon strong.</p> <p>Default: <code>0</code></p> <code>/solver/nonlinear</code> (<code>object</code>) <p><pre><code>/solver/nonlinear\n</code></pre>  Settings for nonlinear solver. Interior-loop linear solver settings are defined in the solver/linear section.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/solver</code> <pre><code>/solver/nonlinear/solver\n</code></pre> <code>/solver/nonlinear/solver</code> (<code>string</code>)<code>/solver/nonlinear/solver</code> (<code>list</code>) <p> Nonlinear solver type</p> <p>Default: <code>'Newton'</code></p> <p>Options: <code>['Newton', 'DenseNewton', 'GradientDescent', 'ADAM', 'StochasticADAM', 'StochasticGradientDescent', 'L-BFGS', 'BFGS', 'L-BFGS-B', 'MMA']</code></p> <p> List of solvers for ballback. Eg, [{\u2018type\u2019:\u2019Newton\u2019}, {\u2018type\u2019:\u2019L-BFGS\u2019}, {\u2018type\u2019:\u2019GradientDescent\u2019}] will solve using Newton, in case of failure will fallback to L-BFGS and eventually to GradientDescent</p> <code>/solver/nonlinear/solver/*</code> <pre><code>/solver/nonlinear/solver/*\n</code></pre> NewtonProjectedNewtonRegularizedNewtonRegularizedProjectedNewtonDenseNewtonDenseProjectedNewtonDenseRegularizedNewtonDenseRegularizedProjectedNewtonGradientDescentStochasticGradientDescentL-BFGSBFGSADAMStochasticADAM <p>Type: Newton  Options for Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: ProjectedNewton  Options for projected Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: RegularizedNewton  Options for regularized Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: RegularizedProjectedNewton  Options for regularized projected Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseNewton  Options for Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseProjectedNewton  Options for projected Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseRegularizedNewton  Options for regularized Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseRegularizedProjectedNewton  Options for projected regularized Newton. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: GradientDescent  Options for Gradient Descent. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: StochasticGradientDescent  Options for Stochastic Gradient Descent. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <p>Type: L-BFGS  Options for L-BFGS. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/history_size</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/solver/*/history_size\n</code></pre>  The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <p>Type: BFGS  Options for BFGS. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: ADAM  Options for ADAM. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <p>Type: StochasticADAM  Options for ADAM. </p> <code>/solver/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/solver/*/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <code>/solver/nonlinear/x_delta</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/x_delta\n</code></pre>  Stopping criterion: minimal change of the variables x for the iterations to continue. Computed as the L2 norm of x divide by the time step.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/grad_norm</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/grad_norm\n</code></pre>  Stopping criterion: Minimal gradient norm for the iterations to continue.</p> <p>Default: <code>1e-08</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/first_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/first_grad_norm_tol\n</code></pre>  Minimal gradient norm for the iterations to not start, assume we already are at a minimum.</p> <p>Default: <code>1e-10</code></p> <code>/solver/nonlinear/max_iterations</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/max_iterations\n</code></pre>  Maximum number of iterations for a nonlinear solve.</p> <p>Default: <code>500</code></p> <code>/solver/nonlinear/iterations_per_strategy</code> <pre><code>/solver/nonlinear/iterations_per_strategy\n</code></pre> <code>/solver/nonlinear/iterations_per_strategy</code> (<code>int</code>)<code>/solver/nonlinear/iterations_per_strategy</code> (<code>list</code>) <p> Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <p> Number of iterations for every substrategy before reset.</p> <code>/solver/nonlinear/iterations_per_strategy/*</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/iterations_per_strategy/*\n</code></pre>  Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <code>/solver/nonlinear/line_search</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/line_search\n</code></pre>  Settings for line-search in the nonlinear solver</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/line_search/method</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/line_search/method\n</code></pre>  Line-search type</p> <p>Default: <code>'RobustArmijo'</code></p> <p>Options: <code>['Armijo', 'RobustArmijo', 'Backtracking', 'None']</code></p> <code>/solver/nonlinear/line_search/use_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/use_grad_norm_tol\n</code></pre>  When the energy is smaller than use_grad_norm_tol, line-search uses norm of gradient instead of energy</p> <p>Default: <code>1e-06</code></p> <code>/solver/nonlinear/line_search/min_step_size</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/min_step_size\n</code></pre>  Mimimum step size</p> <p>Default: <code>1e-10</code></p> <code>/solver/nonlinear/line_search/max_step_size_iter</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/line_search/max_step_size_iter\n</code></pre>  Number of iterations</p> <p>Default: <code>30</code></p> <code>/solver/nonlinear/line_search/min_step_size_final</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/min_step_size_final\n</code></pre>  Mimimum step size for last descent strategy</p> <p>Default: <code>1e-20</code></p> <code>/solver/nonlinear/line_search/max_step_size_iter_final</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/line_search/max_step_size_iter_final\n</code></pre>  Number of iterations for last descent strategy</p> <p>Default: <code>100</code></p> <code>/solver/nonlinear/line_search/default_init_step_size</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/default_init_step_size\n</code></pre>  Initial step size</p> <p>Default: <code>1</code></p> <code>/solver/nonlinear/line_search/step_ratio</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/step_ratio\n</code></pre>  Ratio used to decrease the step</p> <p>Default: <code>0.5</code></p> <code>/solver/nonlinear/line_search/Armijo</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/line_search/Armijo\n</code></pre>  Options for Armijo.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/line_search/Armijo/c</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/Armijo/c\n</code></pre>  Armijo c parameter.</p> <p>Default: <code>0.0001</code></p> <code>/solver/nonlinear/line_search/RobustArmijo</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/line_search/RobustArmijo\n</code></pre>  Options for RobustArmijo.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/line_search/RobustArmijo/delta_relative_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/line_search/RobustArmijo/delta_relative_tolerance\n</code></pre>  Relative tolerance on E to switch to approximate.</p> <p>Default: <code>0.1</code></p> <code>/solver/nonlinear/allow_out_of_iterations</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/allow_out_of_iterations\n</code></pre>  If false (default), an exception will be thrown when the nonlinear solver reaches the maximum number of iterations.</p> <p>Default: <code>False</code></p> <code>/solver/nonlinear/L-BFGS</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/L-BFGS\n</code></pre>  Options for LBFGS.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/L-BFGS/history_size</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/L-BFGS/history_size\n</code></pre>  The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/nonlinear/L-BFGS-B</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/L-BFGS-B\n</code></pre>  Options for the boxed L-BFGS.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/L-BFGS-B/history_size</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/L-BFGS-B/history_size\n</code></pre>  The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/nonlinear/Newton</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/Newton\n</code></pre>  Options for Newton.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/Newton/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/nonlinear/Newton/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/Newton/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/nonlinear/Newton/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/Newton/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <code>/solver/nonlinear/Newton/force_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/Newton/force_psd_projection\n</code></pre>  Force the Hessian to be PSD when using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>False</code></p> <code>/solver/nonlinear/Newton/use_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/Newton/use_psd_projection\n</code></pre>  Use PSD as fallback using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>True</code></p> <code>/solver/nonlinear/Newton/use_psd_projection_in_regularized</code> (<code>bool</code>) <p><pre><code>/solver/nonlinear/Newton/use_psd_projection_in_regularized\n</code></pre>  Use PSD in regularized Newton.</p> <p>Default: <code>True</code></p> <code>/solver/nonlinear/ADAM</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/ADAM\n</code></pre>  Options for ADAM.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/ADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/ADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/ADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/ADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/ADAM/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/StochasticADAM</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/StochasticADAM\n</code></pre>  Options for ADAM.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/StochasticADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/nonlinear/StochasticADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/nonlinear/StochasticADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/nonlinear/StochasticADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/nonlinear/StochasticADAM/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticADAM/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for ADAM.</p> <p>Default: <code>0.3</code></p> <code>/solver/nonlinear/StochasticGradientDescent</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/StochasticGradientDescent\n</code></pre>  Options for Stochastic Gradient Descent.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/StochasticGradientDescent/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/StochasticGradientDescent/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for StochasticGradientDescent.</p> <p>Default: <code>0.3</code></p> <code>/solver/nonlinear/box_constraints</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/box_constraints\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/box_constraints/bounds</code> (<code>list</code>) <p><pre><code>/solver/nonlinear/box_constraints/bounds\n</code></pre>  Box constraints on optimization variables.</p> <code>/solver/nonlinear/box_constraints/bounds/*</code> <pre><code>/solver/nonlinear/box_constraints/bounds/*\n</code></pre> <code>/solver/nonlinear/box_constraints/bounds/*</code> (<code>list</code>)<code>/solver/nonlinear/box_constraints/bounds/*</code> (<code>float</code>) <p> Box constraint values on optimization variables.</p> <code>/solver/nonlinear/box_constraints/bounds/*/*</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/box_constraints/bounds/*/*\n</code></pre>  Box constraint values on optimization variables.</p> <p> Box constraint values on optimization variables.</p> <code>/solver/nonlinear/box_constraints/max_change</code> <pre><code>/solver/nonlinear/box_constraints/max_change\n</code></pre> <code>/solver/nonlinear/box_constraints/max_change</code> (<code>float</code>)<code>/solver/nonlinear/box_constraints/max_change</code> (<code>list</code>) <p> Maximum change of optimization variables in one iteration, only for solvers with box constraints. Negative value to disable this constraint.</p> <p>Default: <code>-1</code></p> <p> Maximum change of optimization variables in one iteration, only for solvers with box constraints.</p> <code>/solver/nonlinear/box_constraints/max_change/*</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/box_constraints/max_change/*\n</code></pre>  Maximum change of every optimization variable in one iteration, only for solvers with box constraints.</p> <code>/solver/nonlinear/advanced</code> (<code>object</code>) <p><pre><code>/solver/nonlinear/advanced\n</code></pre>  Nonlinear solver advanced options</p> <p>Default: <code>None</code> </p> <code>/solver/nonlinear/advanced/f_delta</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/advanced/f_delta\n</code></pre>  Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/advanced/f_delta_step_tol</code> (<code>int</code>) <p><pre><code>/solver/nonlinear/advanced/f_delta_step_tol\n</code></pre>  Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>100</code></p> <code>/solver/nonlinear/advanced/derivative_along_delta_x_tol</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/advanced/derivative_along_delta_x_tol\n</code></pre>  Quit the optimization if the directional derivative along the descent direction is smaller than this tolerance.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/nonlinear/advanced/apply_gradient_fd</code> (<code>string</code>) <p><pre><code>/solver/nonlinear/advanced/apply_gradient_fd\n</code></pre>  Expensive Option: For every iteration of the nonlinear solver, run finite difference to verify gradient of energy.</p> <p>Default: <code>'None'</code></p> <p>Options: <code>['None', 'DirectionalDerivative', 'FullFiniteDiff']</code></p> <code>/solver/nonlinear/advanced/gradient_fd_eps</code> (<code>float</code>) <p><pre><code>/solver/nonlinear/advanced/gradient_fd_eps\n</code></pre>  Expensive Option: Eps for finite difference to verify gradient of energy.</p> <p>Default: <code>1e-07</code></p> <code>/solver/augmented_lagrangian</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian\n</code></pre>  Parameters for the AL for imposing Dirichlet BCs. If the bc are not imposable, we add \\(w\\|u - bc\\|^2\\) to the energy (\\(u\\) is the solution at the Dirichlet nodes and \\(bc\\) are the Dirichlet values). After convergence, we try to impose bc again. The algorithm computes E + a/2*AL^2 - lambda AL, where E is the current energy (elastic, inertia, contact, etc.) and AL is the augmented Lagrangian energy. a starts at <code>initial_weight</code> and, in case DBC cannot be imposed, we update a as <code>a *= scaling</code> until <code>max_weight</code>. See IPC additional material</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/initial_weight</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/initial_weight\n</code></pre>  Initial weight for AL</p> <p>Default: <code>1000000.0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/scaling</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/scaling\n</code></pre>  Multiplication factor</p> <p>Default: <code>2.0</code></p> <code>/solver/augmented_lagrangian/max_weight</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/max_weight\n</code></pre>  Maximum weight</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/eta</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/eta\n</code></pre>  Tolerance for increasing the weight or updating the lagrangian</p> <p>Default: <code>0.99</code></p> <p>Range: <code>[0, 1]</code></p> <code>/solver/augmented_lagrangian/nonlinear</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear\n</code></pre>  Settings for nonlinear solver. Interior-loop linear solver settings are defined in the solver/linear section.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/solver</code> <pre><code>/solver/augmented_lagrangian/nonlinear/solver\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/solver</code> (<code>string</code>)<code>/solver/augmented_lagrangian/nonlinear/solver</code> (<code>list</code>) <p> Nonlinear solver type</p> <p>Default: <code>'Newton'</code></p> <p>Options: <code>['Newton', 'DenseNewton', 'GradientDescent', 'ADAM', 'StochasticADAM', 'StochasticGradientDescent', 'L-BFGS', 'BFGS', 'L-BFGS-B', 'MMA']</code></p> <p> List of solvers for ballback. Eg, [{\u2018type\u2019:\u2019Newton\u2019}, {\u2018type\u2019:\u2019L-BFGS\u2019}, {\u2018type\u2019:\u2019GradientDescent\u2019}] will solve using Newton, in case of failure will fallback to L-BFGS and eventually to GradientDescent</p> <code>/solver/augmented_lagrangian/nonlinear/solver/*</code> <pre><code>/solver/augmented_lagrangian/nonlinear/solver/*\n</code></pre> NewtonProjectedNewtonRegularizedNewtonRegularizedProjectedNewtonDenseNewtonDenseProjectedNewtonDenseRegularizedNewtonDenseRegularizedProjectedNewtonGradientDescentStochasticGradientDescentL-BFGSBFGSADAMStochasticADAM <p>Type: Newton  Options for Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: ProjectedNewton  Options for projected Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: RegularizedNewton  Options for regularized Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: RegularizedProjectedNewton  Options for regularized projected Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseNewton  Options for Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseProjectedNewton  Options for projected Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <p>Type: DenseRegularizedNewton  Options for regularized Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: DenseRegularizedProjectedNewton  Options for projected regularized Newton. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <p>Type: GradientDescent  Options for Gradient Descent. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: StochasticGradientDescent  Options for Stochastic Gradient Descent. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <p>Type: L-BFGS  Options for L-BFGS. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/history_size</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/history_size\n</code></pre>  The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <p>Type: BFGS  Options for BFGS. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p>Type: ADAM  Options for ADAM. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <p>Type: StochasticADAM  Options for ADAM. </p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/type</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/type\n</code></pre>  Nonlinear solver type</p> <p>Options: <code>['Newton', 'DenseNewton', 'ProjectedNewton', 'DenseProjectedNewton', 'RegularizedNewton', 'DenseRegularizedNewton', 'RegularizedProjectedNewton', 'DenseRegularizedProjectedNewton', 'GradientDescent', 'StochasticGradientDescent', 'ADAM', 'StochasticADAM', 'L-BFGS', 'BFGS']</code></p> <p></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/solver/*/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for stochastic solvers.</p> <p>Default: <code>0.3</code></p> <code>/solver/augmented_lagrangian/nonlinear/x_delta</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/x_delta\n</code></pre>  Stopping criterion: minimal change of the variables x for the iterations to continue. Computed as the L2 norm of x divide by the time step.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/grad_norm</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/grad_norm\n</code></pre>  Stopping criterion: Minimal gradient norm for the iterations to continue.</p> <p>Default: <code>1e-08</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/first_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/first_grad_norm_tol\n</code></pre>  Minimal gradient norm for the iterations to not start, assume we already are at a minimum.</p> <p>Default: <code>1e-10</code></p> <code>/solver/augmented_lagrangian/nonlinear/max_iterations</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/max_iterations\n</code></pre>  Maximum number of iterations for a nonlinear solve.</p> <p>Default: <code>500</code></p> <code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy</code> <pre><code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy</code> (<code>int</code>)<code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy</code> (<code>list</code>) <p> Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <p> Number of iterations for every substrategy before reset.</p> <code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy/*</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/iterations_per_strategy/*\n</code></pre>  Number of iterations for every substrategy before reset.</p> <p>Default: <code>5</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search\n</code></pre>  Settings for line-search in the nonlinear solver</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/line_search/method</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/method\n</code></pre>  Line-search type</p> <p>Default: <code>'RobustArmijo'</code></p> <p>Options: <code>['Armijo', 'RobustArmijo', 'Backtracking', 'None']</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/use_grad_norm_tol</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/use_grad_norm_tol\n</code></pre>  When the energy is smaller than use_grad_norm_tol, line-search uses norm of gradient instead of energy</p> <p>Default: <code>1e-06</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size\n</code></pre>  Mimimum step size</p> <p>Default: <code>1e-10</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter\n</code></pre>  Number of iterations</p> <p>Default: <code>30</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size_final</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/min_step_size_final\n</code></pre>  Mimimum step size for last descent strategy</p> <p>Default: <code>1e-20</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter_final</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/max_step_size_iter_final\n</code></pre>  Number of iterations for last descent strategy</p> <p>Default: <code>100</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/default_init_step_size</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/default_init_step_size\n</code></pre>  Initial step size</p> <p>Default: <code>1</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/step_ratio</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/step_ratio\n</code></pre>  Ratio used to decrease the step</p> <p>Default: <code>0.5</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo\n</code></pre>  Options for Armijo.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo/c</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/Armijo/c\n</code></pre>  Armijo c parameter.</p> <p>Default: <code>0.0001</code></p> <code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo\n</code></pre>  Options for RobustArmijo.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo/delta_relative_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/line_search/RobustArmijo/delta_relative_tolerance\n</code></pre>  Relative tolerance on E to switch to approximate.</p> <p>Default: <code>0.1</code></p> <code>/solver/augmented_lagrangian/nonlinear/allow_out_of_iterations</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/allow_out_of_iterations\n</code></pre>  If false (default), an exception will be thrown when the nonlinear solver reaches the maximum number of iterations.</p> <p>Default: <code>False</code></p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS\n</code></pre>  Options for LBFGS.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS/history_size</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS/history_size\n</code></pre>  The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B\n</code></pre>  Options for the boxed L-BFGS.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B/history_size</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/L-BFGS-B/history_size\n</code></pre>  The number of corrections to approximate the inverse Hessian matrix.</p> <p>Default: <code>6</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton\n</code></pre>  Options for Newton.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/Newton/residual_tolerance</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/residual_tolerance\n</code></pre>  Tolerance of the linear system residual. If residual is above, the direction is rejected.</p> <p>Default: <code>1e-05</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_min</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_min\n</code></pre>  Minimum regulariztion weight.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_max</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_max\n</code></pre>  Maximum regulariztion weight.</p> <p>Default: <code>100000000.0</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_inc</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/reg_weight_inc\n</code></pre>  Regulariztion weight increment.</p> <p>Default: <code>10</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/force_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/force_psd_projection\n</code></pre>  Force the Hessian to be PSD when using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>False</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection\n</code></pre>  Use PSD as fallback using second order solvers (i.e., Newton\u2019s method).</p> <p>Default: <code>True</code></p> <code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection_in_regularized</code> (<code>bool</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/Newton/use_psd_projection_in_regularized\n</code></pre>  Use PSD in regularized Newton.</p> <p>Default: <code>True</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM\n</code></pre>  Options for ADAM.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/ADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/ADAM/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM\n</code></pre>  Options for ADAM.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/alpha</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/alpha\n</code></pre>  Parameter alpha for ADAM.</p> <p>Default: <code>0.001</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_1</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_1\n</code></pre>  Parameter beta_1 for ADAM.</p> <p>Default: <code>0.9</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_2</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/beta_2\n</code></pre>  Parameter beta_2 for ADAM.</p> <p>Default: <code>0.999</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/epsilon</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/epsilon\n</code></pre>  Parameter epsilon for ADAM.</p> <p>Default: <code>1e-08</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticADAM/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for ADAM.</p> <p>Default: <code>0.3</code></p> <code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent\n</code></pre>  Options for Stochastic Gradient Descent.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent/erase_component_probability</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/StochasticGradientDescent/erase_component_probability\n</code></pre>  Probability of erasing a component on the gradient for StochasticGradientDescent.</p> <p>Default: <code>0.3</code></p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints\n</code></pre>  FIXME: Missing documentation in the specification.</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds</code> (<code>list</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds\n</code></pre>  Box constraints on optimization variables.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*</code> <pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*</code> (<code>list</code>)<code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*</code> (<code>float</code>) <p> Box constraint values on optimization variables.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*/*</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/bounds/*/*\n</code></pre>  Box constraint values on optimization variables.</p> <p> Box constraint values on optimization variables.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change</code> <pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change\n</code></pre> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change</code> (<code>float</code>)<code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change</code> (<code>list</code>) <p> Maximum change of optimization variables in one iteration, only for solvers with box constraints. Negative value to disable this constraint.</p> <p>Default: <code>-1</code></p> <p> Maximum change of optimization variables in one iteration, only for solvers with box constraints.</p> <code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change/*</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/box_constraints/max_change/*\n</code></pre>  Maximum change of every optimization variable in one iteration, only for solvers with box constraints.</p> <code>/solver/augmented_lagrangian/nonlinear/advanced</code> (<code>object</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced\n</code></pre>  Nonlinear solver advanced options</p> <p>Default: <code>None</code> </p> <code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta\n</code></pre>  Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta_step_tol</code> (<code>int</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/f_delta_step_tol\n</code></pre>  Dangerous Option: Quit the optimization if the solver reduces the energy by less than f_delta for consecutive f_delta_step_tol steps.</p> <p>Default: <code>100</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/derivative_along_delta_x_tol</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/derivative_along_delta_x_tol\n</code></pre>  Quit the optimization if the directional derivative along the descent direction is smaller than this tolerance.</p> <p>Default: <code>0</code></p> <p>Range: <code>[0, inf]</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/apply_gradient_fd</code> (<code>string</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/apply_gradient_fd\n</code></pre>  Expensive Option: For every iteration of the nonlinear solver, run finite difference to verify gradient of energy.</p> <p>Default: <code>'None'</code></p> <p>Options: <code>['None', 'DirectionalDerivative', 'FullFiniteDiff']</code></p> <code>/solver/augmented_lagrangian/nonlinear/advanced/gradient_fd_eps</code> (<code>float</code>) <p><pre><code>/solver/augmented_lagrangian/nonlinear/advanced/gradient_fd_eps\n</code></pre>  Expensive Option: Eps for finite difference to verify gradient of energy.</p> <p>Default: <code>1e-07</code></p> <code>/solver/contact</code> (<code>object</code>) <p><pre><code>/solver/contact\n</code></pre>  Settings for contact handling in the solver.</p> <p>Default: <code>None</code> </p> <code>/solver/contact/CCD</code> (<code>object</code>) <p><pre><code>/solver/contact/CCD\n</code></pre>  CCD options</p> <p>Default: <code>None</code> </p> <code>/solver/contact/CCD/broad_phase</code> (<code>string</code>) <p><pre><code>/solver/contact/CCD/broad_phase\n</code></pre>  Broad phase collision-detection algorithm to use</p> <p>Default: <code>'hash_grid'</code></p> <p>Options: <code>['hash_grid', 'HG', 'brute_force', 'BF', 'spatial_hash', 'SH', 'bvh', 'BVH', 'sweep_and_prune', 'SAP', 'sweep_and_tiniest_queue', 'STQ']</code></p> <code>/solver/contact/CCD/tolerance</code> (<code>float</code>) <p><pre><code>/solver/contact/CCD/tolerance\n</code></pre>  CCD tolerance</p> <p>Default: <code>1e-06</code></p> <code>/solver/contact/CCD/max_iterations</code> (<code>int</code>) <p><pre><code>/solver/contact/CCD/max_iterations\n</code></pre>  Maximum number of iterations for continuous collision detection</p> <p>Default: <code>1000000</code></p> <code>/solver/contact/friction_iterations</code> (<code>int</code>) <p><pre><code>/solver/contact/friction_iterations\n</code></pre>  Maximum number of update iterations for lagged friction formulation (see IPC paper).</p> <p>Default: <code>1</code></p> <code>/solver/contact/tangential_adhesion_iterations</code> (<code>int</code>) <p><pre><code>/solver/contact/tangential_adhesion_iterations\n</code></pre>  Maximum number of update iterations for lagged tangential adhesion formulation (see IPC paper).</p> <p>Default: <code>1</code></p> <code>/solver/contact/friction_convergence_tol</code> (<code>float</code>) <p><pre><code>/solver/contact/friction_convergence_tol\n</code></pre>  Tolerence for friction convergence</p> <p>Default: <code>0.01</code></p> <code>/solver/contact/barrier_stiffness</code> <pre><code>/solver/contact/barrier_stiffness\n</code></pre> <code>/solver/contact/barrier_stiffness</code> (<code>string</code>)<code>/solver/contact/barrier_stiffness</code> (<code>float</code>) <p> How coefficient of clamped log-barrier function for contact is updated</p> <p>Default: <code>'adaptive'</code></p> <p>Options: <code>['adaptive']</code></p> <p> The coefficient of clamped log-barrier function value when not adaptive</p> <code>/solver/contact/initial_barrier_stiffness</code> (<code>float</code>) <p><pre><code>/solver/contact/initial_barrier_stiffness\n</code></pre>  Initial barrier stiffness if adaptive barrier is used.</p> <p>Default: <code>1</code></p> <code>/solver/rayleigh_damping</code> (<code>list</code>) <p><pre><code>/solver/rayleigh_damping\n</code></pre>  Apply Rayleigh damping.</p> <code>/solver/rayleigh_damping/*</code> <pre><code>/solver/rayleigh_damping/*\n</code></pre> <code>/solver/rayleigh_damping/*</code> (<code>object</code>)<code>/solver/rayleigh_damping/*</code> (<code>object</code>) <p> Apply Rayleigh damping to the given Form with a stiffness ratio. </p> <code>/solver/rayleigh_damping/*/form</code> (<code>string</code>) <p><pre><code>/solver/rayleigh_damping/*/form\n</code></pre>  Form to damp.</p> <p>Options: <code>['elasticity', 'contact', 'friction']</code></p> <code>/solver/rayleigh_damping/*/stiffness_ratio</code> (<code>float</code>) <p><pre><code>/solver/rayleigh_damping/*/stiffness_ratio\n</code></pre>  Ratio of to damp (stiffness = 0.75 * stiffness_ratio * \u0394t\u00b3).</p> <p>Range: <code>[0, inf]</code></p> <p></p> <code>/solver/rayleigh_damping/*/lagging_iterations</code> (<code>int</code>) <p><pre><code>/solver/rayleigh_damping/*/lagging_iterations\n</code></pre>  Maximum number of update iterations for lagging.</p> <p>Default: <code>1</code></p> <p> Apply Rayleigh damping to the given Form with a stiffness. </p> <code>/solver/rayleigh_damping/*/form</code> (<code>string</code>) <p><pre><code>/solver/rayleigh_damping/*/form\n</code></pre>  Form to damp.</p> <p>Options: <code>['elasticity', 'contact', 'friction']</code></p> <code>/solver/rayleigh_damping/*/stiffness</code> (<code>float</code>) <p><pre><code>/solver/rayleigh_damping/*/stiffness\n</code></pre>  Ratio of to damp.</p> <p>Range: <code>[0, inf]</code></p> <p></p> <code>/solver/rayleigh_damping/*/lagging_iterations</code> (<code>int</code>) <p><pre><code>/solver/rayleigh_damping/*/lagging_iterations\n</code></pre>  Maximum number of update iterations for lagging.</p> <p>Default: <code>1</code></p> <code>/solver/advanced</code> (<code>object</code>) <p><pre><code>/solver/advanced\n</code></pre>  Advanced settings for the solver</p> <p>Default: <code>None</code> </p> <code>/solver/advanced/cache_size</code> (<code>int</code>) <p><pre><code>/solver/advanced/cache_size\n</code></pre>  Maximum number of elements when the assembly values are cached.</p> <p>Default: <code>900000</code></p> <code>/solver/advanced/lump_mass_matrix</code> (<code>bool</code>) <p><pre><code>/solver/advanced/lump_mass_matrix\n</code></pre>  If true, use diagonal mass matrix with entries on the diagonal equal to the sum of entries in each row of the full mass matrix.}</p> <p>Default: <code>False</code></p> <code>/solver/advanced/lagged_regularization_weight</code> (<code>float</code>) <p><pre><code>/solver/advanced/lagged_regularization_weight\n</code></pre>  Weight used to regularize singular static problems.</p> <p>Default: <code>0</code></p> <code>/solver/advanced/lagged_regularization_iterations</code> (<code>int</code>) <p><pre><code>/solver/advanced/lagged_regularization_iterations\n</code></pre>  Number of regularize singular static problems.</p> <p>Default: <code>1</code></p> <code>/solver/advanced/check_inversion</code> (<code>string</code>) <p><pre><code>/solver/advanced/check_inversion\n</code></pre>  The method for checking if any element is flipped.</p> <p>Default: <code>'Discrete'</code></p> <p>Options: <code>['Discrete', 'Conservative']</code></p> <code>/solver/advanced/jacobian_threshold</code> (<code>float</code>) <p><pre><code>/solver/advanced/jacobian_threshold\n</code></pre>  .</p> <p>Default: <code>0</code></p> <code>/boundary_conditions</code> (<code>object</code>) <p><pre><code>/boundary_conditions\n</code></pre>  The settings for boundary conditions.</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/rhs</code> <pre><code>/boundary_conditions/rhs\n</code></pre> <code>/boundary_conditions/rhs</code> (<code>float</code>)<code>/boundary_conditions/rhs</code> (<code>string</code>)<code>/boundary_conditions/rhs</code> (<code>object</code>)<code>/boundary_conditions/rhs</code> (<code>list</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/rhs/value</code> <pre><code>/boundary_conditions/rhs/value\n</code></pre> <code>/boundary_conditions/rhs/value</code> (<code>float</code>)<code>/boundary_conditions/rhs/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/rhs/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/rhs/unit\n</code></pre>  The unit of the Value</p> <p> Right-hand side of the system being solved for vector-valued PDEs.</p> <code>/boundary_conditions/rhs/*</code> <pre><code>/boundary_conditions/rhs/*\n</code></pre> <code>/boundary_conditions/rhs/*</code> (<code>float</code>)<code>/boundary_conditions/rhs/*</code> (<code>string</code>)<code>/boundary_conditions/rhs/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/rhs/*/value</code> <pre><code>/boundary_conditions/rhs/*/value\n</code></pre> <code>/boundary_conditions/rhs/*/value</code> (<code>float</code>)<code>/boundary_conditions/rhs/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/rhs/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/rhs/*/unit\n</code></pre>  The unit of the Value</p> <code>/boundary_conditions/dirichlet_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary\n</code></pre>  The list of boundary conditions for the main variable. Elements of the list are assignment pairs (ID, value) where ID is assigned by surface selection.</p> <code>/boundary_conditions/dirichlet_boundary/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*</code> (<code>object</code>)<code>/boundary_conditions/dirichlet_boundary/*</code> (<code>string</code>) <p> Dirichlet boundary condition.</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/dirichlet_boundary/*/id</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/id\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/id</code> (<code>int</code>)<code>/boundary_conditions/dirichlet_boundary/*/id</code> (<code>string</code>) <p> ID of boundary condition from surface selection.</p> <p>Range: <code>[0, 2147483646]</code></p> <p> select all ids.</p> <p>Options: <code>['all']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/value</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/value\n</code></pre>  Values of boundary condition, length 1 for scalar-valued pde, \u2154 for vector-valued PDEs depending on the dimension.</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>object</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*</code> (<code>list</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/value</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/value\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/unit\n</code></pre>  The unit of the Value</p> <p> Dirichlet boundary condition specified per timestep.</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/*\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> (<code>string</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value\n</code></pre> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value</code> (<code>float</code>)<code>/boundary_conditions/dirichlet_boundary/*/value/*/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/dirichlet_boundary/*/value/*/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/value/*/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/boundary_conditions/dirichlet_boundary/*/time_reference</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/time_reference\n</code></pre>  List of times when the Dirichlet boundary condition is specified</p> <code>/boundary_conditions/dirichlet_boundary/*/time_reference/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/time_reference/*\n</code></pre>  Values of Dirichlet boundary condition for timestep</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation\n</code></pre>  interpolation of boundary condition</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*</code> <pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none  interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> </p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear  interpolation of boundary condition </p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp  interpolation of boundary condition </p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/to\n</code></pre>  interpolation ending time</p> <p></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/from\n</code></pre>  interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant  interpolation of boundary condition </p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear  interpolation of boundary condition </p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic  interpolation of boundary condition </p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/dirichlet_boundary/*/dimension</code> (<code>list</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/dimension\n</code></pre>  List of 2 (2D) or 3 (3D) boolean values indicating if the Dirichlet boundary condition  is applied for a particular dimension.</p> <code>/boundary_conditions/dirichlet_boundary/*/dimension/*</code> (<code>bool</code>) <p><pre><code>/boundary_conditions/dirichlet_boundary/*/dimension/*\n</code></pre>  value</p> <p>Default: <code>True</code></p> <p> Dirichlet boundary condition loaded from a file,  , 1 for scalar, \u2154 for tensor depending on dimension. <code>/boundary_conditions/neumann_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary\n</code></pre>  The list of boundary conditions for the main variable. Elements of the list are assignment pairs (ID, value) where ID is assigned by surface selection.</p> <code>/boundary_conditions/neumann_boundary/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*\n</code></pre>  Neumann boundary condition</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/neumann_boundary/*/id</code> <pre><code>/boundary_conditions/neumann_boundary/*/id\n</code></pre> <code>/boundary_conditions/neumann_boundary/*/id</code> (<code>int</code>)<code>/boundary_conditions/neumann_boundary/*/id</code> (<code>string</code>) <p> ID of boundary condition from surface selection.</p> <p>Range: <code>[0, 2147483646]</code></p> <p> select all ids.</p> <p>Options: <code>['all']</code></p> <code>/boundary_conditions/neumann_boundary/*/value</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/value\n</code></pre>  Values of boundary condition, length 1 for scalar-valued pde, \u2154 for vector-valued PDEs depending on the dimension.</p> <code>/boundary_conditions/neumann_boundary/*/value/*</code> <pre><code>/boundary_conditions/neumann_boundary/*/value/*\n</code></pre> <code>/boundary_conditions/neumann_boundary/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/neumann_boundary/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/neumann_boundary/*/value/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/neumann_boundary/*/value/*/value</code> <pre><code>/boundary_conditions/neumann_boundary/*/value/*/value\n</code></pre> <code>/boundary_conditions/neumann_boundary/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/neumann_boundary/*/value/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/neumann_boundary/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/value/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/boundary_conditions/neumann_boundary/*/interpolation</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation\n</code></pre>  interpolation of boundary condition</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*</code> <pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none  interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> </p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear  interpolation of boundary condition </p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp  interpolation of boundary condition </p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/to\n</code></pre>  interpolation ending time</p> <p></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/from\n</code></pre>  interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant  interpolation of boundary condition </p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear  interpolation of boundary condition </p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic  interpolation of boundary condition </p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/neumann_boundary/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary\n</code></pre>  Neumann boundary condition for normal times value for vector-valued PDEs.</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*\n</code></pre>  pressure BC entry</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/id</code> (<code>int</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/id\n</code></pre>  ID for the pressure Neumann boundary condition</p> <p>Range: <code>[0, 2147483646]</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> <pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/value\n</code></pre> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> (<code>float</code>)<code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> (<code>string</code>)<code>/boundary_conditions/normal_aligned_neumann_boundary/*/value</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value</code> <pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value\n</code></pre> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value</code> (<code>float</code>)<code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/value/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation</code> <pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none  interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear  interpolation of boundary condition </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp  interpolation of boundary condition </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/to\n</code></pre>  interpolation ending time</p> <p></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/from\n</code></pre>  interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant  interpolation of boundary condition </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear  interpolation of boundary condition </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic  interpolation of boundary condition </p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/normal_aligned_neumann_boundary/*/interpolation/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/pressure_boundary</code> (<code>list</code>) <p><pre><code>/boundary_conditions/pressure_boundary\n</code></pre>  Neumann boundary condition for normal times value for vector-valued PDEs.</p> <code>/boundary_conditions/pressure_boundary/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*\n</code></pre>  pressure BC entry</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/pressure_boundary/*/id</code> (<code>int</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/id\n</code></pre>  ID for the pressure Neumann boundary condition</p> <p>Range: <code>[0, 2147483646]</code></p> <code>/boundary_conditions/pressure_boundary/*/value</code> <pre><code>/boundary_conditions/pressure_boundary/*/value\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value</code> (<code>string</code>)<code>/boundary_conditions/pressure_boundary/*/value</code> (<code>object</code>)<code>/boundary_conditions/pressure_boundary/*/value</code> (<code>list</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/pressure_boundary/*/value/value</code> <pre><code>/boundary_conditions/pressure_boundary/*/value/value\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/pressure_boundary/*/value/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/value/unit\n</code></pre>  The unit of the Value</p> <p> Values of pressure boundary condition specified per timestep</p> <code>/boundary_conditions/pressure_boundary/*/value/*</code> <pre><code>/boundary_conditions/pressure_boundary/*/value/*\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/pressure_boundary/*/value/*</code> (<code>object</code>) <p> Value as a constant float</p> <p>Default: <code>0</code></p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/pressure_boundary/*/value/*/value</code> <pre><code>/boundary_conditions/pressure_boundary/*/value/*/value\n</code></pre> <code>/boundary_conditions/pressure_boundary/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_boundary/*/value/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/pressure_boundary/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/value/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/boundary_conditions/pressure_boundary/*/time_reference</code> (<code>list</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/time_reference\n</code></pre>  List of times when the pressure boundary condition is specified</p> <code>/boundary_conditions/pressure_boundary/*/time_reference/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/pressure_boundary/*/time_reference/*\n</code></pre>  Values of pressure boundary condition for timestep</p> <code>/boundary_conditions/pressure_cavity</code> (<code>list</code>) <p><pre><code>/boundary_conditions/pressure_cavity\n</code></pre>  Neumann boundary condition for normal times value for vector-valued PDEs.</p> <code>/boundary_conditions/pressure_cavity/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/pressure_cavity/*\n</code></pre>  pressure BC entry</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/pressure_cavity/*/id</code> (<code>int</code>) <p><pre><code>/boundary_conditions/pressure_cavity/*/id\n</code></pre>  ID for the pressure Neumann boundary condition</p> <p>Range: <code>[0, 2147483646]</code></p> <code>/boundary_conditions/pressure_cavity/*/value</code> <pre><code>/boundary_conditions/pressure_cavity/*/value\n</code></pre> <code>/boundary_conditions/pressure_cavity/*/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_cavity/*/value</code> (<code>string</code>)<code>/boundary_conditions/pressure_cavity/*/value</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/pressure_cavity/*/value/value</code> <pre><code>/boundary_conditions/pressure_cavity/*/value/value\n</code></pre> <code>/boundary_conditions/pressure_cavity/*/value/value</code> (<code>float</code>)<code>/boundary_conditions/pressure_cavity/*/value/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/pressure_cavity/*/value/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/pressure_cavity/*/value/unit\n</code></pre>  The unit of the Value</p> <code>/boundary_conditions/obstacle_displacements</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements\n</code></pre>  The list of boundary conditions for the main variable. Elements of the list are assignment pairs (ID, value) where ID is assigned by surface selection.</p> <code>/boundary_conditions/obstacle_displacements/*</code> (<code>object</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*\n</code></pre>  Obstacle displacements</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/obstacle_displacements/*/id</code> <pre><code>/boundary_conditions/obstacle_displacements/*/id\n</code></pre> <code>/boundary_conditions/obstacle_displacements/*/id</code> (<code>int</code>)<code>/boundary_conditions/obstacle_displacements/*/id</code> (<code>string</code>) <p> ID of boundary condition from surface selection.</p> <p>Range: <code>[0, 2147483646]</code></p> <p> select all ids.</p> <p>Options: <code>['all']</code></p> <code>/boundary_conditions/obstacle_displacements/*/value</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/value\n</code></pre>  Values of boundary condition, length 1 for scalar-valued pde, \u2154 for vector-valued PDEs depending on the dimension.</p> <code>/boundary_conditions/obstacle_displacements/*/value/*</code> <pre><code>/boundary_conditions/obstacle_displacements/*/value/*\n</code></pre> <code>/boundary_conditions/obstacle_displacements/*/value/*</code> (<code>float</code>)<code>/boundary_conditions/obstacle_displacements/*/value/*</code> (<code>string</code>)<code>/boundary_conditions/obstacle_displacements/*/value/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/boundary_conditions/obstacle_displacements/*/value/*/value</code> <pre><code>/boundary_conditions/obstacle_displacements/*/value/*/value\n</code></pre> <code>/boundary_conditions/obstacle_displacements/*/value/*/value</code> (<code>float</code>)<code>/boundary_conditions/obstacle_displacements/*/value/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/boundary_conditions/obstacle_displacements/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/value/*/unit\n</code></pre>  The unit of the Value</p> <p></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation\n</code></pre>  interpolation of boundary condition</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*</code> <pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*\n</code></pre> nonelinearlinear_ramppiecewise_constantpiecewise_linearpiecewise_cubic <p>Type: none  interpolation of boundary condition</p> <p>Default: <code>{'type': 'none'}</code> </p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear  interpolation of boundary condition </p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <p>Type: linear_ramp  interpolation of boundary condition </p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/to</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/to\n</code></pre>  interpolation ending time</p> <p></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/from</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/from\n</code></pre>  interpolation starting time</p> <p>Default: <code>0</code></p> <p>Type: piecewise_constant  interpolation of boundary condition </p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_linear  interpolation of boundary condition </p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <p>Type: piecewise_cubic  interpolation of boundary condition </p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/type\n</code></pre>  type of interpolation of boundary condition</p> <p>Options: <code>['none', 'linear', 'linear_ramp', 'piecewise_constant', 'piecewise_linear', 'piecewise_cubic']</code></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points\n</code></pre>  interpolation time points</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/points/*\n</code></pre>  interpolation time point</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values</code> (<code>list</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values\n</code></pre>  interpolation values</p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/values/*\n</code></pre>  interpolation value</p> <p></p> <code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend</code> (<code>string</code>) <p><pre><code>/boundary_conditions/obstacle_displacements/*/interpolation/*/extend\n</code></pre>  how to extend the piecewise interpolation</p> <p>Default: <code>'constant'</code></p> <p>Options: <code>['constant', 'extrapolate', 'repeat', 'repeat_offset']</code></p> <code>/boundary_conditions/periodic_boundary</code> (<code>object</code>) <p><pre><code>/boundary_conditions/periodic_boundary\n</code></pre>  Options for periodic boundary conditions.</p> <p>Default: <code>None</code> </p> <code>/boundary_conditions/periodic_boundary/enabled</code> (<code>bool</code>) <p><pre><code>/boundary_conditions/periodic_boundary/enabled\n</code></pre> </p> <p>Default: <code>False</code></p> <code>/boundary_conditions/periodic_boundary/tolerance</code> (<code>float</code>) <p><pre><code>/boundary_conditions/periodic_boundary/tolerance\n</code></pre>  Relative tolerance of deciding periodic correspondence</p> <p>Default: <code>1e-05</code></p> <code>/boundary_conditions/periodic_boundary/correspondence</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/correspondence\n</code></pre>  Periodic directions for periodic boundary conditions. If not specified, default to axis-aligned directions.</p> <code>/boundary_conditions/periodic_boundary/correspondence/*</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/correspondence/*\n</code></pre>  One periodic direction.</p> <code>/boundary_conditions/periodic_boundary/correspondence/*/*</code> (<code>float</code>) <p><pre><code>/boundary_conditions/periodic_boundary/correspondence/*/*\n</code></pre>  One entry of a periodic direction.</p> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/linear_displacement_offset\n</code></pre> </p> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*\n</code></pre> </p> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*</code> <pre><code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*\n</code></pre> <code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*</code> (<code>float</code>)<code>/boundary_conditions/periodic_boundary/linear_displacement_offset/*/*</code> (<code>string</code>) <p></p> <p></p> <code>/boundary_conditions/periodic_boundary/fixed_macro_strain</code> (<code>list</code>) <p><pre><code>/boundary_conditions/periodic_boundary/fixed_macro_strain\n</code></pre> </p> <code>/boundary_conditions/periodic_boundary/fixed_macro_strain/*</code> (<code>int</code>) <p><pre><code>/boundary_conditions/periodic_boundary/fixed_macro_strain/*\n</code></pre> </p> <code>/boundary_conditions/periodic_boundary/force_zero_mean</code> (<code>bool</code>) <p><pre><code>/boundary_conditions/periodic_boundary/force_zero_mean\n</code></pre>  The periodic solution is not unique, set to true to find the solution with zero mean.</p> <p>Default: <code>False</code></p> <code>/initial_conditions</code> (<code>object</code>) <p><pre><code>/initial_conditions\n</code></pre>  Initial conditions for the time-dependent problem, imposed on the main variable, its derivative or second derivative</p> <p>Default: <code>None</code> </p> <code>/initial_conditions/solution</code> (<code>list</code>) <p><pre><code>/initial_conditions/solution\n</code></pre>  initial solution</p> <code>/initial_conditions/solution/*</code> (<code>object</code>) <p><pre><code>/initial_conditions/solution/*\n</code></pre>  A list of (ID, value) pairs defining the initial conditions for the main variable values. Ids are set by selection, and values can be floats or formulas.</p> <p>Default: <code>None</code> </p> <code>/initial_conditions/solution/*/id</code> (<code>int</code>) <p><pre><code>/initial_conditions/solution/*/id\n</code></pre>  ID from volume selections</p> <code>/initial_conditions/solution/*/value</code> (<code>list</code>) <p><pre><code>/initial_conditions/solution/*/value\n</code></pre>  value of the solution</p> <code>/initial_conditions/solution/*/value/*</code> <pre><code>/initial_conditions/solution/*/value/*\n</code></pre> <code>/initial_conditions/solution/*/value/*</code> (<code>float</code>)<code>/initial_conditions/solution/*/value/*</code> (<code>string</code>)<code>/initial_conditions/solution/*/value/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/initial_conditions/solution/*/value/*/value</code> <pre><code>/initial_conditions/solution/*/value/*/value\n</code></pre> <code>/initial_conditions/solution/*/value/*/value</code> (<code>float</code>)<code>/initial_conditions/solution/*/value/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/initial_conditions/solution/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/initial_conditions/solution/*/value/*/unit\n</code></pre>  The unit of the Value</p> <code>/initial_conditions/velocity</code> (<code>list</code>) <p><pre><code>/initial_conditions/velocity\n</code></pre>  initial velocity</p> <code>/initial_conditions/velocity/*</code> (<code>object</code>) <p><pre><code>/initial_conditions/velocity/*\n</code></pre>  A list of (ID, value) pairs defining the initial conditions for the first derivative of the main variable values. Ids are set by selection, and values can be floats or formulas.</p> <p>Default: <code>None</code> </p> <code>/initial_conditions/velocity/*/id</code> (<code>int</code>) <p><pre><code>/initial_conditions/velocity/*/id\n</code></pre>  ID from volume selections</p> <code>/initial_conditions/velocity/*/value</code> (<code>list</code>) <p><pre><code>/initial_conditions/velocity/*/value\n</code></pre>  value od the initial velocity</p> <code>/initial_conditions/velocity/*/value/*</code> <pre><code>/initial_conditions/velocity/*/value/*\n</code></pre> <code>/initial_conditions/velocity/*/value/*</code> (<code>float</code>)<code>/initial_conditions/velocity/*/value/*</code> (<code>string</code>)<code>/initial_conditions/velocity/*/value/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/initial_conditions/velocity/*/value/*/value</code> <pre><code>/initial_conditions/velocity/*/value/*/value\n</code></pre> <code>/initial_conditions/velocity/*/value/*/value</code> (<code>float</code>)<code>/initial_conditions/velocity/*/value/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/initial_conditions/velocity/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/initial_conditions/velocity/*/value/*/unit\n</code></pre>  The unit of the Value</p> <code>/initial_conditions/acceleration</code> (<code>list</code>) <p><pre><code>/initial_conditions/acceleration\n</code></pre>  initial acceleration</p> <code>/initial_conditions/acceleration/*</code> (<code>object</code>) <p><pre><code>/initial_conditions/acceleration/*\n</code></pre>  entries</p> <p>Default: <code>None</code> </p> <code>/initial_conditions/acceleration/*/id</code> (<code>int</code>) <p><pre><code>/initial_conditions/acceleration/*/id\n</code></pre>  ID from volume selections</p> <code>/initial_conditions/acceleration/*/value</code> (<code>list</code>) <p><pre><code>/initial_conditions/acceleration/*/value\n</code></pre>  value</p> <code>/initial_conditions/acceleration/*/value/*</code> <pre><code>/initial_conditions/acceleration/*/value/*\n</code></pre> <code>/initial_conditions/acceleration/*/value/*</code> (<code>float</code>)<code>/initial_conditions/acceleration/*/value/*</code> (<code>string</code>)<code>/initial_conditions/acceleration/*/value/*</code> (<code>object</code>) <p> Value as a constant float</p> <p> Value as an expression of \\(x,y,z,t\\) or a file</p> <p> Value with unit </p> <code>/initial_conditions/acceleration/*/value/*/value</code> <pre><code>/initial_conditions/acceleration/*/value/*/value\n</code></pre> <code>/initial_conditions/acceleration/*/value/*/value</code> (<code>float</code>)<code>/initial_conditions/acceleration/*/value/*/value</code> (<code>string</code>) <p> The value of the constant</p> <p> The value as an expression or a file</p> <code>/initial_conditions/acceleration/*/value/*/unit</code> (<code>string</code>) <p><pre><code>/initial_conditions/acceleration/*/value/*/unit\n</code></pre>  The unit of the Value</p> <code>/constraints</code> (<code>object</code>) <p><pre><code>/constraints\n</code></pre>  soft and hard constraints</p> <p>Default: <code>None</code> </p> <code>/constraints/soft</code> (<code>list</code>) <p><pre><code>/constraints/soft\n</code></pre>  list of file containing soft constraints</p> <code>/constraints/soft/*</code> (<code>object</code>) <p><pre><code>/constraints/soft/*\n</code></pre>  constraint hdf5 file for soft constraint w||Ax-b||^2. The file must contain these datasets: weight w, local2global, dense/sparse matrix A, and vector b. The colums of b nees to be the same as the dimentionality of the problem. if A is sparse it should contain A_triplets/value A_triplets/cols A_triplets/rows A_triplets/shape</p> <p>Default: <code>''</code> </p> <code>/constraints/soft/*/weight</code> (<code>float</code>) <p><pre><code>/constraints/soft/*/weight\n</code></pre>  weight</p> <p>Default: <code>0</code></p> <code>/constraints/soft/*/data</code> (<code>string</code>) <p><pre><code>/constraints/soft/*/data\n</code></pre>  constraint hdf5 file for soft constraint w||Ax-b||^2. The file must contain these datasets: local2global, dense/sparse matrix A, and vector b. The colums of b nees to be the same as the dimentionality of the problem. if A is sparse it should contain A_triplets/value A_triplets/col A_triplets/rows A_triplets/shape</p> <p>Default: <code>''</code></p> <code>/constraints/hard</code> (<code>list</code>) <p><pre><code>/constraints/hard\n</code></pre>  list of file containing hard constraints</p> <code>/constraints/hard/*</code> (<code>string</code>) <p><pre><code>/constraints/hard/*\n</code></pre>  constraint hdf5 file for hard constraint Ax=b. The file must contain these datasets: local2global, dense/sparse matrix A, and vector b. The colums of b nees to be the same as the dimentionality of the problem. if A is sparse it should contain A_triplets/value A_triplets/cols A_triplets/rows A_triplets/shape</p> <p>Default: <code>''</code></p> <code>/output</code> (<code>object</code>) <p><pre><code>/output\n</code></pre>  output settings</p> <p>Default: <code>None</code> </p> <code>/output/directory</code> (<code>string</code>) <p><pre><code>/output/directory\n</code></pre>  Directory for output files.</p> <p>Default: <code>''</code></p> <code>/output/log</code> (<code>object</code>) <p><pre><code>/output/log\n</code></pre>  Setting for the output log.</p> <p>Default: <code>None</code> </p> <code>/output/log/level</code> <pre><code>/output/log/level\n</code></pre> <code>/output/log/level</code> (<code>int</code>)<code>/output/log/level</code> (<code>string</code>) <p> Level of logging, 0 trace, 1 debug, 2 info, 3 warning, 4 error, 5 critical, and 6 off.</p> <p>Range: <code>[0, 6]</code></p> <p> Level of logging.</p> <p>Default: <code>'debug'</code></p> <p>Options: <code>['trace', 'debug', 'info', 'warning', 'error', 'critical', 'off']</code></p> <code>/output/log/file_level</code> <pre><code>/output/log/file_level\n</code></pre> <code>/output/log/file_level</code> (<code>int</code>)<code>/output/log/file_level</code> (<code>string</code>) <p> Level of logging to a file, 0 trace, 1 debug, 2 info, 3 warning, 4 error, 5 critical, and 6 off.</p> <p>Range: <code>[0, 6]</code></p> <p> Level of logging.</p> <p>Default: <code>'trace'</code></p> <p>Options: <code>['trace', 'debug', 'info', 'warning', 'error', 'critical', 'off']</code></p> <code>/output/log/path</code> (<code>string</code>) <p><pre><code>/output/log/path\n</code></pre>  File where to save the log; empty string is output to terminal.</p> <p>Default: <code>''</code></p> <code>/output/log/quiet</code> (<code>bool</code>) <p><pre><code>/output/log/quiet\n</code></pre>  Disable cout for logging.</p> <p>Default: <code>False</code></p> <code>/output/json</code> (<code>string</code>) <p><pre><code>/output/json\n</code></pre>  File name for JSON output statistics on time/error/etc.</p> <p>Default: <code>''</code></p> <code>/output/restart_json</code> (<code>string</code>) <p><pre><code>/output/restart_json\n</code></pre>  File name for JSON output to restart the simulation.</p> <p>Default: <code>''</code></p> <code>/output/paraview</code> (<code>object</code>) <p><pre><code>/output/paraview\n</code></pre>  Output in paraview format</p> <p>Default: <code>None</code> </p> <code>/output/paraview/file_name</code> (<code>string</code>) <p><pre><code>/output/paraview/file_name\n</code></pre>  Paraview output file name</p> <p>Default: <code>''</code></p> <code>/output/paraview/vismesh_rel_area</code> (<code>float</code>) <p><pre><code>/output/paraview/vismesh_rel_area\n</code></pre>  relative area for the upsampled visualisation mesh</p> <p>Default: <code>1e-05</code></p> <code>/output/paraview/skip_frame</code> (<code>int</code>) <p><pre><code>/output/paraview/skip_frame\n</code></pre>  export every skip_frame-th frames for time dependent simulations</p> <p>Default: <code>1</code></p> <code>/output/paraview/high_order_mesh</code> (<code>bool</code>) <p><pre><code>/output/paraview/high_order_mesh\n</code></pre>  Enables/disables high-order output for paraview. Supported only for isoparametric or linear meshes with high-order solutions.</p> <p>Default: <code>True</code></p> <code>/output/paraview/volume</code> (<code>bool</code>) <p><pre><code>/output/paraview/volume\n</code></pre>  Export volumetric mesh</p> <p>Default: <code>True</code></p> <code>/output/paraview/surface</code> (<code>bool</code>) <p><pre><code>/output/paraview/surface\n</code></pre>  Export surface mesh (in 2d polygon)</p> <p>Default: <code>False</code></p> <code>/output/paraview/wireframe</code> (<code>bool</code>) <p><pre><code>/output/paraview/wireframe\n</code></pre>  Export the wireframe of the mesh</p> <p>Default: <code>False</code></p> <code>/output/paraview/fields</code> (<code>list</code>) <p><pre><code>/output/paraview/fields\n</code></pre>  list of names of fields to export. If empty, all fields are exported.</p> <code>/output/paraview/fields/*</code> (<code>string</code>) <p><pre><code>/output/paraview/fields/*\n</code></pre>  field name</p> <p>Default: <code>''</code></p> <code>/output/paraview/points</code> (<code>bool</code>) <p><pre><code>/output/paraview/points\n</code></pre>  Export the Dirichlet points</p> <p>Default: <code>False</code></p> <code>/output/paraview/options</code> (<code>object</code>) <p><pre><code>/output/paraview/options\n</code></pre>  Optional fields in the output</p> <p>Default: <code>None</code> </p> <code>/output/paraview/options/use_hdf5</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/use_hdf5\n</code></pre>  If true, export the data as hdf5, compatible with paraview &gt;5.11</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/material</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/material\n</code></pre>  If true, write out material values sampled on the vertices of the mesh</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/body_ids</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/body_ids\n</code></pre>  Export volumes ids</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/contact_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/contact_forces\n</code></pre>  If true, write out contact forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/friction_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/friction_forces\n</code></pre>  If true, write out friction forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/normal_adhesion_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/normal_adhesion_forces\n</code></pre>  If true, write out normal adhesion forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/tangential_adhesion_forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/tangential_adhesion_forces\n</code></pre>  If true, write out tangential adhesion forces for surface</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/velocity</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/velocity\n</code></pre>  If true, write out velocities</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/acceleration</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/acceleration\n</code></pre>  If true, write out accelerations</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/scalar_values</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/scalar_values\n</code></pre>  If true, write out scalar values</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/tensor_values</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/tensor_values\n</code></pre>  If true, write out tensor values</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/discretization_order</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/discretization_order\n</code></pre>  If true, write out discretization order</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/nodes</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/nodes\n</code></pre>  If true, write out node order</p> <p>Default: <code>True</code></p> <code>/output/paraview/options/forces</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/forces\n</code></pre>  If true, write out all variational forces on the FE mesh</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/force_high_order</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/force_high_order\n</code></pre>  If true, force write out high-order mesh, might break the output</p> <p>Default: <code>False</code></p> <code>/output/paraview/options/jacobian_validity</code> (<code>bool</code>) <p><pre><code>/output/paraview/options/jacobian_validity\n</code></pre>  If true, perform robust Jacobian check on the deformed elements and mark elements with non-positive Jacobian.</p> <p>Default: <code>False</code></p> <code>/output/data</code> (<code>object</code>) <p><pre><code>/output/data\n</code></pre>  File names to write output data to.</p> <p>Default: <code>None</code> </p> <code>/output/data/solution</code> (<code>string</code>) <p><pre><code>/output/data/solution\n</code></pre>  Main variable solution. Unrolled [xyz, xyz, \u2026] using PolyFEM ordering. If reorder_nodes exports the solution with the same order the vertices of the input mesh as a #n x d file</p> <p>Default: <code>''</code></p> <code>/output/data/full_mat</code> (<code>string</code>) <p><pre><code>/output/data/full_mat\n</code></pre>  System matrix without boundary conditions. Doesn\u2019t work for nonlinear problems</p> <p>Default: <code>''</code></p> <code>/output/data/stiffness_mat</code> (<code>string</code>) <p><pre><code>/output/data/stiffness_mat\n</code></pre>  System matrix with boundary conditions. Doesn\u2019t work for nonlinear problems</p> <p>Default: <code>''</code></p> <code>/output/data/stress_mat</code> (<code>string</code>) <p><pre><code>/output/data/stress_mat\n</code></pre>  Exports stress</p> <p>Default: <code>''</code></p> <code>/output/data/state</code> (<code>string</code>) <p><pre><code>/output/data/state\n</code></pre>  Writes the complete state in PolyFEM hdf5 format, used to restart the sim</p> <p>Default: <code>''</code></p> <code>/output/data/rest_mesh</code> (<code>string</code>) <p><pre><code>/output/data/rest_mesh\n</code></pre>  Writes the rest mesh in MSH format, used to restart the sim</p> <p>Default: <code>''</code></p> <code>/output/data/mises</code> (<code>string</code>) <p><pre><code>/output/data/mises\n</code></pre>  File name to write per-node Von Mises stress values to.</p> <p>Default: <code>''</code></p> <code>/output/data/nodes</code> (<code>string</code>) <p><pre><code>/output/data/nodes\n</code></pre>  Writes the FEM nodes</p> <p>Default: <code>''</code></p> <code>/output/data/advanced</code> (<code>object</code>) <p><pre><code>/output/data/advanced\n</code></pre>  advanced options</p> <p>Default: <code>None</code> </p> <code>/output/data/advanced/reorder_nodes</code> (<code>bool</code>) <p><pre><code>/output/data/advanced/reorder_nodes\n</code></pre>  Reorder nodes accodring to input</p> <p>Default: <code>False</code></p> <code>/output/advanced</code> (<code>object</code>) <p><pre><code>/output/advanced\n</code></pre>  Additional output options</p> <p>Default: <code>None</code> </p> <code>/output/advanced/timestep_prefix</code> (<code>string</code>) <p><pre><code>/output/advanced/timestep_prefix\n</code></pre>  Prefix for output file names for each time step, the final file is step_i.[vtu|vtm] where i is the time index.</p> <p>Default: <code>'step_'</code></p> <code>/output/advanced/sol_on_grid</code> (<code>float</code>) <p><pre><code>/output/advanced/sol_on_grid\n</code></pre>  exports the solution sampled on a grid, specify the grid spacing</p> <p>Default: <code>-1</code></p> <code>/output/advanced/compute_error</code> (<code>bool</code>) <p><pre><code>/output/advanced/compute_error\n</code></pre>  Enables the computation of the error. If no reference solution is provided, return the norms of the solution</p> <p>Default: <code>True</code></p> <code>/output/advanced/sol_at_node</code> (<code>int</code>) <p><pre><code>/output/advanced/sol_at_node\n</code></pre>  Write out solution values at a specific node. the values will be written in the output JSON file</p> <p>Default: <code>-1</code></p> <code>/output/advanced/vis_boundary_only</code> (<code>bool</code>) <p><pre><code>/output/advanced/vis_boundary_only\n</code></pre>  saves only elements touching the boundaries</p> <p>Default: <code>False</code></p> <code>/output/advanced/curved_mesh_size</code> (<code>bool</code>) <p><pre><code>/output/advanced/curved_mesh_size\n</code></pre>  upsample curved edges to compute mesh size</p> <p>Default: <code>False</code></p> <code>/output/advanced/save_solve_sequence_debug</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_solve_sequence_debug\n</code></pre>  saves AL internal steps, for debugging</p> <p>Default: <code>False</code></p> <code>/output/advanced/save_ccd_debug_meshes</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_ccd_debug_meshes\n</code></pre>  saves AL internal steps, for debugging</p> <p>Default: <code>False</code></p> <code>/output/advanced/save_time_sequence</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_time_sequence\n</code></pre>  saves timesteps</p> <p>Default: <code>True</code></p> <code>/output/advanced/save_nl_solve_sequence</code> (<code>bool</code>) <p><pre><code>/output/advanced/save_nl_solve_sequence\n</code></pre>  saves obj after every nonlinear iteration, for debugging</p> <p>Default: <code>False</code></p> <code>/output/advanced/spectrum</code> (<code>bool</code>) <p><pre><code>/output/advanced/spectrum\n</code></pre>  exports the spectrum of the matrix in the output JSON. Works only if POLYSOLVE_WITH_SPECTRA is enabled</p> <p>Default: <code>False</code></p> <code>/output/reference</code> (<code>object</code>) <p><pre><code>/output/reference\n</code></pre>  Write out the analytic/numerical ground-truth solution and or its gradient</p> <p>Default: <code>None</code> </p> <code>/output/reference/solution</code> (<code>list</code>) <p><pre><code>/output/reference/solution\n</code></pre>  reference solution used to compute errors</p> <code>/output/reference/solution/*</code> (<code>string</code>) <p><pre><code>/output/reference/solution/*\n</code></pre>  value as a function of \\(x,y,z,t\\)</p> <p>Default: <code>''</code></p> <code>/output/reference/gradient</code> (<code>list</code>) <p><pre><code>/output/reference/gradient\n</code></pre>  gradient of the reference solution to compute errors</p> <code>/output/reference/gradient/*</code> (<code>string</code>) <p><pre><code>/output/reference/gradient/*\n</code></pre>  value as a function of \\(x,y,z,t\\)</p> <p>Default: <code>''</code></p> <code>/output/stats</code> (<code>bool</code>) <p><pre><code>/output/stats\n</code></pre>  Saves csv for energy and stats of the non linear solver.</p> <p>Default: <code>False</code></p> <code>/input</code> (<code>object</code>) <p><pre><code>/input\n</code></pre>  input data</p> <p>Default: <code>None</code> </p> <code>/input/data</code> (<code>object</code>) <p><pre><code>/input/data\n</code></pre>  input to restart time dependent sim</p> <p>Default: <code>None</code> </p> <code>/input/data/state</code> (<code>file</code>) <p><pre><code>/input/data/state\n</code></pre>  input state as hdf5</p> <p>Default: <code>''</code></p> <code>/input/data/reorder</code> (<code>bool</code>) <p><pre><code>/input/data/reorder\n</code></pre>  reorder input data</p> <p>Default: <code>False</code></p> <code>/tests</code> (<code>object</code>) <p><pre><code>/tests\n</code></pre>  Used to test to compare different norms of solutions.</p> <p>Default: <code>None</code> </p> <code>/tests/err_h1</code> (<code>float</code>) <p><pre><code>/tests/err_h1\n</code></pre>  Reference h1 solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_h1_semi</code> (<code>float</code>) <p><pre><code>/tests/err_h1_semi\n</code></pre>  Reference h1 seminorm solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_l2</code> (<code>float</code>) <p><pre><code>/tests/err_l2\n</code></pre>  Reference \\(L^2\\) solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_linf</code> (<code>float</code>) <p><pre><code>/tests/err_linf\n</code></pre>  Reference \\(L^\\infty\\) solution\u2019s norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_linf_grad</code> (<code>float</code>) <p><pre><code>/tests/err_linf_grad\n</code></pre>  Reference \\(L^\\infty\\) solution\u2019s gradient norm.</p> <p>Default: <code>0</code></p> <code>/tests/err_lp</code> (<code>float</code>) <p><pre><code>/tests/err_lp\n</code></pre>  Reference \\(L^8\\) solution\u2019s gradient norm.</p> <p>Default: <code>0</code></p> <code>/tests/margin</code> (<code>float</code>) <p><pre><code>/tests/margin\n</code></pre>  Reference tolerance used in tests.</p> <p>Default: <code>1e-05</code></p> <code>/tests/time_steps</code> <pre><code>/tests/time_steps\n</code></pre> <code>/tests/time_steps</code> (<code>int</code>)<code>/tests/time_steps</code> (<code>string</code>) <p> Number of time steps to test.</p> <p>Default: <code>1</code></p> <p>Range: <code>[1, inf]</code></p> <p> Number of time steps to test.</p> <p>Options: <code>['all', 'static']</code></p>"},{"location":"library/","title":"Polyfem as Libary","text":"<p>Polyfem uses modern <code>cmake</code>, so it it should be enough to add this line <pre><code>add_subdirectory(&lt;path-to-polyfem&gt; polyfem)\n</code></pre> in your cmake project, and then simply add <pre><code>target_link_library(&lt;your_target&gt; polyfem)\n</code></pre> in your cmake script. Polyfem will download the dependencies that it needs with the version that it needs. If you dont need the viewer for your own project you can add <pre><code>SET(POLYFEM_NO_UI ON)\n</code></pre></p>"},{"location":"library/#interface","title":"Interface","text":"<p>The interface of polyfem is similar as Python. You should create a <code>polyfem::State</code> object and then call methods on it. Most of the fields are public for convenience but we discourage use or access them.</p> <p>This is the main interface of <code>polyfem::State</code>.</p>"},{"location":"library/#initialization","title":"Initialization","text":"<pre><code>void init(const json &amp;args)\nvoid init(const std::string &amp;json_path)\n</code></pre> <p>loads the settings from a json object or file</p>"},{"location":"library/#logging","title":"Logging","text":"<p><pre><code>void set_log_level(int log_level)\nstd::string get_log()\n</code></pre> Sets the log level (1-6) and gets the log at the end</p>"},{"location":"library/#loading-mesh","title":"Loading mesh","text":"<p><pre><code>void load_mesh()\nvoid load_mesh(const std::string &amp;path)\nvoid load_mesh(const Eigen::MatrixXd &amp;V, const Eigen::MatrixXi &amp;F)\n</code></pre> Different ways of loading a mesh</p>"},{"location":"library/#set-boundary-sides-sets","title":"Set boundary sides sets","text":"<p><pre><code>void set_boundary_side_set(const std::function&lt;int(const polyfem::RowVectorNd&amp;)&gt; &amp;boundary_marker)\nvoid set_boundary_side_set(const std::function&lt;int(const polyfem::RowVectorNd&amp;, bool)&gt; &amp;boundary_marker)\nvoid set_boundary_side_set(const std::function&lt;int(const std::vector&lt;int&gt;&amp;, bool)&gt; &amp;boundary_marker)\n</code></pre> All boundary side sets are assigned with a lambda function, the first 2 takes the barycenter of the face/edge, the last one the primite id. The second argument is a boolean that specifies if the sideset is boundary.</p>"},{"location":"library/#solving","title":"Solving","text":"<pre><code>void solve();\n</code></pre> <p>Note the solver internally calls <pre><code>void build_basis();\nvoid assemble_stiffness_mat();\nvoid assemble_rhs();\nvoid solve_problem();\n</code></pre> You can use these instead of solve.</p> <p>If you problem has a solution you can use <pre><code>void compute_errors();\n</code></pre> to obtain the error.</p>"},{"location":"library/#getters","title":"Getters","text":"<p><pre><code>const Eigen::MatrixXd &amp;get_solution() const\nconst Eigen::MatrixXd &amp;get_pressure() const\n</code></pre> Gets the raw solution and pressure. The order of the coefficient is unrelated to the order of the vertices of the mesh.</p> <p><pre><code>void get_sampled_solution(Eigen::MatrixXd &amp;points, Eigen::MatrixXi &amp;tets, Eigen::MatrixXd &amp;fun, bool boundary_only = false)\nvoid get_stresses(Eigen::MatrixXd &amp;fun, bool boundary_only = false)\nvoid get_sampled_mises(Eigen::MatrixXd &amp;fun, bool boundary_only = false)\nvoid get_sampled_mises_avg(Eigen::MatrixXd &amp;fun, Eigen::MatrixXd &amp;tfun, bool boundary_only = false)\n</code></pre> Gets the solution/stresses on the visualization mesh, use <code>vismesh_rel_area</code> to control density</p>"},{"location":"library/#exporting","title":"Exporting","text":"<p>Exports the solution to VTU for visualization</p> <pre><code>void get_sidesets(Eigen::MatrixXd &amp;pts, Eigen::MatrixXi &amp;faces, Eigen::MatrixXd &amp;sidesets);\n\nvoid export_data();\n\nvoid save_vtu(const std::string &amp;name);\nvoid save_wire(const std::string &amp;name, bool isolines = false);\n</code></pre>"},{"location":"license/","title":"License","text":"<pre><code>MIT License\n\nCopyright (c) 2018 polyfem\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"polyfempy_doc/","title":"Docs","text":""},{"location":"polyfempy_doc/#class-problem","title":"class Problem","text":"<p>Generic problem problem, scalar or tensor depending on the pde. Warning, this problem needs to be used with the <code>set_pde</code> function in settings</p>"},{"location":"polyfempy_doc/#init","title":"init","text":"<p><code>__init__(rhs=None, exact=None)</code></p> <p>Initialize .  See help(type()) for accurate signature.</p>"},{"location":"polyfempy_doc/#add_dirichlet_value","title":"add_dirichlet_value","text":"<p><code>add_dirichlet_value(id, value, is_dirichlet_dim=None)</code></p> <p>set the Dirichlet value value for the sideset id. Note the value must be a scalar, vector in 2D, or 3D depending on the problem. is_dirichlet_dim is a vector of boolean specifying which dimentions are fixed, only for vector-based problems.</p>"},{"location":"polyfempy_doc/#add_neumann_value","title":"add_neumann_value","text":"<p><code>add_neumann_value(id, value)</code></p> <p>set the Neumann value value for the sideset id. Note the value must be a scalar, vector in 2D, or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_dirichlet_value","title":"set_dirichlet_value","text":"<p><code>set_dirichlet_value(id, value, is_dirichlet_dim=None)</code></p> <p>set the Dirichlet value value for the sideset id. Note the value must be a scalar, vector in 2D, or 3D depending on the problem. is_dirichlet_dim is a vector of boolean specifying which dimentions are fixed, only for vector-based problems.</p>"},{"location":"polyfempy_doc/#set_displacement","title":"set_displacement","text":"<p><code>set_displacement(id, value, is_dim_fixed=None)</code></p> <p>set the displacement value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_force","title":"set_force","text":"<p><code>set_force(id, value)</code></p> <p>set the force value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_neumann_value","title":"set_neumann_value","text":"<p><code>set_neumann_value(id, value)</code></p> <p>set the Neumann value value for the sideset id. Note the value must be a scalar, vector in 2D, or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_velocity","title":"set_velocity","text":"<p><code>set_velocity(id, value, is_dim_fixed=None)</code></p> <p>set the velocity value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_x_symmetric","title":"set_x_symmetric","text":"<p><code>set_x_symmetric(id)</code></p> <p>x coorinate is fixed, y is allowed to move (Neumann)</p>"},{"location":"polyfempy_doc/#set_xy_symmetric","title":"set_xy_symmetric","text":"<p><code>set_xy_symmetric(id)</code></p> <p>xy coorinates are fixed, z is allowed to move (Neumann)</p>"},{"location":"polyfempy_doc/#set_xz_symmetric","title":"set_xz_symmetric","text":"<p><code>set_xz_symmetric(id)</code></p> <p>xz coorinates are fixed, y is allowed to move (Neumann)</p>"},{"location":"polyfempy_doc/#set_y_symmetric","title":"set_y_symmetric","text":"<p><code>set_y_symmetric(id)</code></p> <p>y coorinate is fixed, x is allowed to move (Neumann)</p>"},{"location":"polyfempy_doc/#set_yz_symmetric","title":"set_yz_symmetric","text":"<p><code>set_yz_symmetric(id)</code></p> <p>yz coorinates are fixed, x is allowed to move (Neumann)</p>"},{"location":"polyfempy_doc/#class-settings","title":"class Settings","text":"<p>Class that encodes the settings of the solver, it models the input json file</p>"},{"location":"polyfempy_doc/#init_1","title":"init","text":"<p><code>__init__(discr_order=1, pressure_discr_order=1, pde='Laplacian', nl_solver_rhs_steps=1, tend=1, time_steps=10)</code></p> <p>Initialize .  See help(type()) for accurate signature.</p>"},{"location":"polyfempy_doc/#serialize","title":"serialize","text":"<p><code>serialize()</code></p> <p>stringyfied json description of this class, used to run the solver</p>"},{"location":"polyfempy_doc/#set_advanced_option","title":"set_advanced_option","text":"<p><code>set_advanced_option(key, value)</code></p> <p>Used to set any advanced option not present in this class, for instance set_advanced_option(\u201cuse_spline\u201d,True), see https://polyfem.github.io/documentation/ for full list</p>"},{"location":"polyfempy_doc/#set_isolines_export_path","title":"set_isolines_export_path","text":"<p><code>set_isolines_export_path(path)</code></p> <p>Sets the path to export the isolines of the solution</p>"},{"location":"polyfempy_doc/#set_material_params","title":"set_material_params","text":"<p><code>set_material_params(name, value)</code></p> <p>set the material parameters, for instance set_material_params(\u201cE\u201d, 200) sets the Young\u2019s modulus E to 200. See https://polyfem.github.io/documentation/#formulations for full list</p>"},{"location":"polyfempy_doc/#set_pde","title":"set_pde","text":"<p><code>set_pde(pde)</code></p> <p>Sets the PDE to solve, use any of the polyfempy.PDEs</p>"},{"location":"polyfempy_doc/#set_problem","title":"set_problem","text":"<p><code>set_problem(problem)</code></p> <p>Sets the problem, use any of the problems in Problems or the Problem</p>"},{"location":"polyfempy_doc/#set_solution_export_path","title":"set_solution_export_path","text":"<p><code>set_solution_export_path(path)</code></p> <p>Sets the path to save the solution</p>"},{"location":"polyfempy_doc/#set_vtu_export_path","title":"set_vtu_export_path","text":"<p><code>set_vtu_export_path(path, bounda_only=False)</code></p> <p>Sets the path to export a vtu file with the results, use bounda_only to export only one layer of the mesh in 3d</p>"},{"location":"polyfempy_doc/#set_wireframe_export_path","title":"set_wireframe_export_path","text":"<p><code>set_wireframe_export_path(path)</code></p> <p>Sets the path to export a wireframe of the mesh</p> <p>pde</p> <p>Get the PDE</p> <p>problem</p> <p>Get the problem</p>"},{"location":"polyfempy_doc/#class-drivencavity","title":"class DrivenCavity","text":"<p>Classical driven cavity problem in fluid simulation</p>"},{"location":"polyfempy_doc/#class-flow","title":"class Flow","text":"<p>Inflow/outflow problem for fluids. You can specify the sideset for the moving fluxes, the axial direction of the flow, and the list of obstacle sidesets. https://polyfem.github.io/documentation/#flow</p>"},{"location":"polyfempy_doc/#init_2","title":"init","text":"<p><code>__init__(inflow=1, outflow=3, inflow_amout=0.25, outflow_amout=0.25, direction=0, obstacle=[7])</code></p> <p>Initialize .  See help(type()) for accurate signature.</p>"},{"location":"polyfempy_doc/#class-franke","title":"class Franke","text":"<p>Franke problem with exact solution https://polyfem.github.io/documentation/#franke</p>"},{"location":"polyfempy_doc/#class-genericscalar","title":"class GenericScalar","text":"<p>Generic scalar problem https://polyfem.github.io/documentation/#genericscalar</p>"},{"location":"polyfempy_doc/#add_dirichlet_value_1","title":"add_dirichlet_value","text":"<p><code>add_dirichlet_value(id, value)</code></p> <p>add the Dirichlet value value for the sideset id</p>"},{"location":"polyfempy_doc/#add_neumann_value_1","title":"add_neumann_value","text":"<p><code>add_neumann_value(id, value)</code></p> <p>add the Neumann value value for the sideset id</p>"},{"location":"polyfempy_doc/#class-generictensor","title":"class GenericTensor","text":"<p>Generic tensor problem https://polyfem.github.io/documentation/#generictensor</p>"},{"location":"polyfempy_doc/#add_dirichlet_value_2","title":"add_dirichlet_value","text":"<p><code>add_dirichlet_value(id, value, is_dirichlet_dim=None)</code></p> <p>add the Dirichlet value value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem. is_dirichlet_dim is a vector of boolean specifying which dimentions are fixed.</p>"},{"location":"polyfempy_doc/#add_neumann_value_2","title":"add_neumann_value","text":"<p><code>add_neumann_value(id, value)</code></p> <p>add the Neumann value value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_displacement_1","title":"set_displacement","text":"<p><code>set_displacement(id, value, is_dim_fixed=None)</code></p> <p>set the displacement value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_force_1","title":"set_force","text":"<p><code>set_force(id, value)</code></p> <p>set the force value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#set_velocity_1","title":"set_velocity","text":"<p><code>set_velocity(id, value, is_dim_fixed=None)</code></p> <p>set the velocity value for the sideset id. Note the value must be a vector in 2D or 3D depending on the problem</p>"},{"location":"polyfempy_doc/#class-gravity","title":"class Gravity","text":"<p>time dependent gravity problem https://polyfem.github.io/documentation/#gravity</p>"},{"location":"polyfempy_doc/#init_3","title":"init","text":"<p><code>__init__(force=0.1)</code></p> <p>Initialize .  See help(type()) for accurate signature.</p>"},{"location":"polyfempy_doc/#class-torsion","title":"class Torsion","text":"<p>3D torsion problem, specify which sideset to fix (fixed_boundary) and which one turns turning_boundary https://polyfem.github.io/documentation/#torsionelastic</p>"},{"location":"polyfempy_doc/#init_4","title":"init","text":"<p><code>__init__(axis_coordiante=2, n_turns=0.5, fixed_boundary=5, turning_boundary=6)</code></p> <p>Initialize .  See help(type()) for accurate signature.</p>"},{"location":"polyfempy_doc/#class-pdes","title":"class PDEs","text":"<p>List of supported partial differential equations</p> <p>Bilaplacian = \u2018Bilaplacian\u2019</p> <p>Helmholtz = \u2018Helmholtz\u2019</p> <p>HookeLinearElasticity = \u2018HookeLinearElasticity\u2019</p> <p>IncompressibleLinearElasticity = \u2018IncompressibleLinearElasticity\u2019</p> <p>Laplacian = \u2018Laplacian\u2019</p> <p>LinearElasticity = \u2018LinearElasticity\u2019</p> <p>NeoHookean = \u2018NeoHookean\u2019</p> <p>NonLinearElasticity = \u2018NonLinearElasticity\u2019</p> <p>SaintVenant = \u2018SaintVenant\u2019</p> <p>Stokes = \u2018Stokes\u2019</p>"},{"location":"polyfempy_doc/#class-scalarformulations","title":"class ScalarFormulations","text":"<p>Bilaplacian = \u2018Bilaplacian\u2019</p> <p>Helmholtz = \u2018Helmholtz\u2019</p> <p>Laplacian = \u2018Laplacian\u2019</p>"},{"location":"polyfempy_doc/#class-solver","title":"class Solver","text":"<p>Polyfem solver</p>"},{"location":"polyfempy_doc/#compute_errors","title":"compute_errors","text":"<p><code>compute_errors()</code></p> <p>compute the error</p>"},{"location":"polyfempy_doc/#export_data","title":"export_data","text":"<p><code>export_data()</code></p> <p>exports all data specified in the settings</p>"},{"location":"polyfempy_doc/#export_vtu","title":"export_vtu","text":"<p><code>export_vtu(path: str)</code></p> <p>exports the solution as vtu</p>"},{"location":"polyfempy_doc/#export_wire","title":"export_wire","text":"<p><code>export_wire(path: str, isolines: bool = False)</code></p> <p>exports wireframe of the mesh</p>"},{"location":"polyfempy_doc/#get_boundary_sidesets","title":"get_boundary_sidesets","text":"<p><code>get_boundary_sidesets() -&gt; tuple</code></p> <p>exports get the boundary sideset, edges in 2d or trangles in 3d</p>"},{"location":"polyfempy_doc/#get_log","title":"get_log","text":"<p><code>get_log() -&gt; str</code></p> <p>gets the log as json</p>"},{"location":"polyfempy_doc/#get_pressure","title":"get_pressure","text":"<p><code>get_pressure() -&gt; array</code></p> <p>returns the pressure</p>"},{"location":"polyfempy_doc/#get_sampled_connectivity_frames","title":"get_sampled_connectivity_frames","text":"<p><code>get_sampled_connectivity_frames() -&gt; List[array]</code></p> <p>returns the connectivity frames for a time dependent problem on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_sampled_mises","title":"get_sampled_mises","text":"<p><code>get_sampled_mises(boundary_only: bool = False) -&gt; array</code></p> <p>returns the von mises stresses on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_sampled_mises_avg","title":"get_sampled_mises_avg","text":"<p><code>get_sampled_mises_avg(boundary_only: bool = False) -&gt; tuple</code></p> <p>returns the von mises stresses and stress tensor averaged around a vertex on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_sampled_mises_avg_frames","title":"get_sampled_mises_avg_frames","text":"<p><code>get_sampled_mises_avg_frames() -&gt; List[array]</code></p> <p>returns the von mises stresses per frame averaged around a vertex on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_sampled_mises_frames","title":"get_sampled_mises_frames","text":"<p><code>get_sampled_mises_frames() -&gt; List[array]</code></p> <p>returns the von mises stresses frames on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_sampled_points_frames","title":"get_sampled_points_frames","text":"<p><code>get_sampled_points_frames() -&gt; List[array]</code></p> <p>returns the points frames for a time dependent problem on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_sampled_solution","title":"get_sampled_solution","text":"<p><code>get_sampled_solution(boundary_only: bool = False) -&gt; tuple</code></p> <p>returns the solution on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_sampled_solution_frames","title":"get_sampled_solution_frames","text":"<p><code>get_sampled_solution_frames() -&gt; List[array]</code></p> <p>returns the solution frames for a time dependent problem on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#get_solution","title":"get_solution","text":"<p><code>get_solution() -&gt; array</code></p> <p>returns the solution</p>"},{"location":"polyfempy_doc/#get_stresses","title":"get_stresses","text":"<p><code>get_stresses(boundary_only: bool = False) -&gt; array</code></p> <p>returns the stress tensor on a densly sampled mesh, use \u2018vismesh_rel_area\u2019 to control density</p>"},{"location":"polyfempy_doc/#load_mesh_from_path","title":"load_mesh_from_path","text":"<p><code>load_mesh_from_path(path: str, normalize_mesh: bool = False, vismesh_rel_area: float = 1e-05, n_refs: int = 0, boundary_id_threshold: float = -1.0)</code></p> <p>Loads a mesh from the path and \u2018bc_tag\u2019 from the json if any bc tags</p>"},{"location":"polyfempy_doc/#load_mesh_from_path_and_tags","title":"load_mesh_from_path_and_tags","text":"<p><code>load_mesh_from_path_and_tags(path: str, bc_tag_path: str, normalize_mesh: bool = False, vismesh_rel_area: float = 1e-05, n_refs: int = 0, boundary_id_threshold: float = -1.0)</code></p> <p>Loads a mesh and bc_tags from path</p>"},{"location":"polyfempy_doc/#load_mesh_from_settings","title":"load_mesh_from_settings","text":"<p><code>load_mesh_from_settings(normalize_mesh: bool = False, vismesh_rel_area: float = 1e-05, n_refs: int = 0, boundary_id_threshold: float = -1.0)</code></p> <p>Loads a mesh from the \u2018mesh\u2019 field of the json and \u2018bc_tag\u2019 if any bc tags</p>"},{"location":"polyfempy_doc/#set_boundary_side_set_from_bary","title":"set_boundary_side_set_from_bary","text":"<p><code>set_boundary_side_set_from_bary(boundary_marker: Callable[[array[float64[1, n]]], int])</code></p> <p>Sets the side set for the boundary conditions, the functions takes the barycenter of the boundary (edge or face)</p>"},{"location":"polyfempy_doc/#set_boundary_side_set_from_bary_and_boundary","title":"set_boundary_side_set_from_bary_and_boundary","text":"<p><code>set_boundary_side_set_from_bary_and_boundary(boundary_marker: Callable[[array[float64[1, n]], bool], int])</code></p> <p>Sets the side set for the boundary conditions, the functions takes the barycenter of the boundary (edge or face) and a flag that says if the element is boundary</p>"},{"location":"polyfempy_doc/#set_boundary_side_set_from_v_ids","title":"set_boundary_side_set_from_v_ids","text":"<p><code>set_boundary_side_set_from_v_ids(boundary_marker: Callable[[List[int], bool], int])</code></p> <p>Sets the side set for the boundary conditions, the functions takes the sorted list of vertex id and a flag that says if the element is boundary</p>"},{"location":"polyfempy_doc/#set_high_order_mesh","title":"set_high_order_mesh","text":"<p><code>set_high_order_mesh(vertices: array, connectivity: array, nodes_pos: array, nodes_indices: List[List[int]], normalize_mesh: bool = False, vismesh_rel_area: float = 1e-05, n_refs: int = 0, boundary_id_threshold: float = -1.0)</code></p> <p>Loads an high order mesh from vertices, connectivity, nodes, and node indices mapping element to nodes</p>"},{"location":"polyfempy_doc/#set_log_level","title":"set_log_level","text":"<p><code>set_log_level(log_level: int)</code></p> <p>sets polyfem log level, valid value between 0 (all logs) and 6 (no logs)</p>"},{"location":"polyfempy_doc/#set_mesh","title":"set_mesh","text":"<p><code>set_mesh(vertices: array, connectivity: array, normalize_mesh: bool = False, vismesh_rel_area: float = 1e-05, n_refs: int = 0, boundary_id_threshold: float = -1.0)</code></p> <p>Loads a mesh from vertices and connectivity</p>"},{"location":"polyfempy_doc/#set_rhs","title":"set_rhs","text":"<p><code>set_rhs(matrix: array)</code></p> <p>Sets the rhs</p>"},{"location":"polyfempy_doc/#set_rhs_from_path","title":"set_rhs_from_path","text":"<p><code>set_rhs_from_path(path: str)</code></p> <p>Loads the rhs from a file</p>"},{"location":"polyfempy_doc/#set_settings","title":"set_settings","text":"<p><code>set_settings(json: object)</code></p> <p>load PDE and problem parameters from the settings</p>"},{"location":"polyfempy_doc/#settings","title":"settings","text":"<p><code>settings(json: object)</code></p> <p>load PDE and problem parameters from the settings</p>"},{"location":"polyfempy_doc/#solve","title":"solve","text":"<p><code>solve()</code></p> <p>solve the pde</p>"},{"location":"polyfempy_doc/#class-tensorformulations","title":"class TensorFormulations","text":"<p>HookeLinearElasticity = \u2018HookeLinearElasticity\u2019</p> <p>IncompressibleLinearElasticity = \u2018IncompressibleLinearElasticity\u2019</p> <p>LinearElasticity = \u2018LinearElasticity\u2019</p> <p>NeoHookean = \u2018NeoHookean\u2019</p> <p>NonLinearElasticity = \u2018NonLinearElasticity\u2019</p> <p>SaintVenant = \u2018SaintVenant\u2019</p> <p>Stokes = \u2018Stokes\u2019</p>"},{"location":"polysolve/","title":"PolySolve","text":"<p>This library contains a cross-platform Eigen wrapper for many different external linear solvers including (but not limited to):</p> <ul> <li>CHOLMOD</li> <li>Hypre</li> <li>AMGCL</li> <li>Pardiso</li> </ul>"},{"location":"polysolve/#example-usage","title":"Example Usage","text":"<pre><code>const std::string solver_name = \"Hypre\"\nauto solver = LinearSolver::create(solver_name, \"\");\n\n// Configuration parameters like iteration or accuracy for iterative solvers\n// solver-&gt;setParameters(params);\n\n// System sparse matrix\nEigen::SparseMatrix&lt;double&gt; A;\n\n// Right-hand side\nEigen::VectorXd b;\n\n// Solution\nEigen::VectorXd x(b.size());\n\nsolver-&gt;analyzePattern(A, A.rows());\nsolver-&gt;factorize(A);\nsolver-&gt;solve(b, x);\n</code></pre> <p>You can use <code>LinearSolver::availableSolvers()</code> to obtain the list of available solvers.</p>"},{"location":"polysolve/#parameters","title":"Parameters","text":"<p>Polysolve uses a JSON file to provide parameters to the individual solvers. The following template can be used as a starting point, and a more detailed explanation of the parameters is below.</p> <pre><code>{\n\"Eigen::LeastSquaresConjugateGradient\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-6\n},\n\"Eigen::DGMRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-6\n},\n\"Eigen::ConjugateGradient\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-6\n},\n\"Eigen::BiCGSTAB\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-6\n},\n\"Eigen::GMRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-6\n},\n\"Eigen::MINRES\": {\n\"max_iter\": 1000,\n\"tolerance\": 1e-6\n},\n\"Pardiso\": {\n\"mtype\": -1\n},\n\"Hypre\": {\n\"max_iter\": 1000,\n\"pre_max_iter\": 1000,\n\"tolerance\": 1e-6\n},\n\"AMGCL\": {\n\"precond\": {\n\"relax\": {\n\"degree\": 16,\n\"type\": \"chebyshev\",\n\"power_iters\": 100,\n\"higher\": 2,\n\"lower\": 0.008333333333,\n\"scale\": true\n},\n\"class\": \"amg\",\n\"max_levels\": 6,\n\"direct_coarse\": false,\n\"ncycle\": 2,\n\"coarsening\": {\n\"type\": \"smoothed_aggregation\",\n\"estimate_spectral_radius\": true,\n\"relax\": 1,\n\"aggr\": {\n\"eps_strong\": 0\n}\n}\n},\n\"solver\": {\n\"tol\": 1e-10,\n\"maxiter\": 1000,\n\"type\": \"cg\"\n}\n}\n}\n</code></pre>"},{"location":"polysolve/#iterative-solvers-amgcl-eigen-internal-solvers-hypre","title":"Iterative solvers (AMGCL, Eigen Internal Solvers, HYPRE)","text":"<ul> <li><code>max_iter</code> controls the solver\u2019s iterations, default <code>1000</code></li> <li><code>conv_tol</code>, <code>tolerance</code> controls the convergence tolerance, default <code>1e-10</code></li> </ul>"},{"location":"polysolve/#hypre-only","title":"Hypre Only","text":"<ul> <li><code>pre_max_iter</code>, number of pre iterations, default <code>1</code></li> </ul>"},{"location":"polysolve/#amgcl-only","title":"AMGCL Only","text":"<p>The default parameters of the AMGCL solver are: <pre><code>{\n\"precond\": {\n\"relax\": {\n\"degree\": 16,\n\"type\": \"chebyshev\",\n\"power_iters\": 100,\n\"higher\": 2,\n\"lower\": 0.008333333333,\n\"scale\": true\n},\n\"class\": \"amg\",\n\"max_levels\": 6,\n\"direct_coarse\": false,\n\"ncycle\": 2,\n\"coarsening\": {\n\"type\": \"smoothed_aggregation\",\n\"estimate_spectral_radius\": true,\n\"relax\": 1,\n\"aggr\": {\n\"eps_strong\": 0\n}\n}\n},\n\"solver\": {\n\"tol\": 1e-10,\n\"maxiter\": 1000,\n\"type\": \"cg\"\n}\n}\n</code></pre></p> <p>For a more details and options refer to the AMGCL documentation.</p>"},{"location":"polysolve/#pardiso","title":"Pardiso","text":"<p><code>mtype</code>, sets the matrix type, default 11</p> mtype Description 1 real and structurally symmetric 2 real and symmetric positive definite -2 real and symmetric indefinite 3 complex and structurally symmetric 4 complex and Hermitian positive definite -4 complex and Hermitian indefinite 6 complex and symmetric 11 real and nonsymmetric 13 complex and nonsymmetric"},{"location":"python/","title":"Python bindings","text":"<p>Warning</p> <p>The python bindings are in beta. Expect API changes and possible bugs. Use at your own peril!</p> <p> </p> <p>I am making efforts to provide a simple python interface to Polyfem.</p> <p>For doing so I am maintaining  a conda package which can be easily installed https://anaconda.org/conda-forge/polyfempy.</p> <p>Note that the conda deployment is slow and this tutorial will follow the deployment version.</p> <p>If you hare in a hurry for the juicy latest feature you can clone the repository Polyfem-python and use <code>pip</code> to install: <pre><code>python setup.py develop\n</code></pre> and <pre><code>python setup.py test\n</code></pre> for testing.</p> <p>Note that the folders tests contain some tests which can be used as documentation.</p> <p>The documentation can be found here.</p>"},{"location":"python/#tutorial","title":"Tutorial","text":"<p>Polyfem relies on 3 main objects:</p> <ol> <li><code>Settings</code> that contains the main settings such discretization order (e.g., \\(P_1\\) or \\(P_2\\)), material parameters, formulation, etc.</li> <li><code>Problem</code> that describe the problem you want to solve, that is the boundary conditions and right-hand side. There are some predefined problems, such as <code>DrivenCavity</code>, or generic problems, such as <code>GenericTensor</code>.</li> <li><code>Solver</code> that is the actual FEM solver.</li> </ol> <p>The usage of specific problems is indented for benchmarking, in general you want to use the <code>GenericTensor</code> for tensor-based PDEs (e.g., elasticity) or <code>GenericScalar</code> for scalar PDEs (e.g., Poisson).</p> <p>A typical use of Polyfem is: <pre><code>settings = polyfempy.Settings()\n# set necessary settings\n# e.g. settings.discr_order = 2\n\nproblem = polyfempy.GenericTensor() # or any other problem\n# set problem related data\n# e.g. problem.set_displacement(1, [0, 0], [True, False])\n\nsettings.problem = problem\n\n#now we can create a solver and solve\nsolver = polyfempy.Solver()\n\nsolver.settings(settings)\nsolver.load_mesh_from_path(mesh_path)\n\nsolver.solve()\n</code></pre></p> <p>Note 1: for legacy reasons Polyfem always normalizes the mesh (i.e., rescale it to lay in the \\([0,1]^d\\) box, you can use <code>normalize_mesh = False</code> while loading to disable this feature.</p> <p>Note 2: the solution \\(u(x)\\) of a FEM solver are the coefficients \\(u_i\\) you need to multiply the bases \\(\\varphi_i(x)\\) with: $$ u(x)=\\sum u_i \\varphi_i(x). $$ The coefficients \\(u_i\\) are unrelated with the mesh vertices because of reordering of the nodes or high-order bases. For instance \\(P_2\\) bases have additional nodes on the edges which do not exist in the mesh.</p> <p>For this reason Polyfem uses a visualization mesh where the solution is sampled at the vertices. This mesh has two advantages: 1. it solves the problem of nodes reordering and additional nodes in the same way 2. it provides a \u201ctrue\u201d visualization for high order solution by densely sampling each element (a \\(P_2\\) solution is a piecewise quadratic function which is visualized in a picewise linear fashion, thus the need of a dense element sampling).</p> <p>To control the resolution of the visualization mesh use <code>vismesh_rel_area</code> named-argument while loading.</p>"},{"location":"python/#notebook","title":"Notebook","text":"<p>For more details and nice interactive example go to the notebook tutorial!</p> <p>Or just play with the tutorial in </p>"},{"location":"python_examples/","title":"Jupyter Tutorial","text":"<p>This is a jupyter notebook. The \"real\" notebook can be found here.</p> <p>Polyfem relies on 3 main objects:</p> <ol> <li><code>Settings</code> that contains the main settings such discretization order (e.g., $P_1$ or $P_2$), material parameters, formulation, etc.</li> <li><code>Problem</code> that describe the problem you want to solve, that is the boundary conditions and right-hand side. There are some predefined problems, such as <code>DrivenCavity</code>, or generic problems, such as <code>GenericTensor</code>.</li> <li><code>Solver</code> that is the actual FEM solver.</li> </ol> <p>The usage of specific problems is indented for benchmarking, in general you want to use the <code>GenericTensor</code> for tensor-based PDEs (e.g., elasticity) or <code>GenericScalar</code> for scalar PDEs (e.g., Poisson).</p> <p>A typical use of Polyfem is:</p> <pre>settings = polyfempy.Settings(\n    pde=polyfempy.PDEs.LinearElasticity, # or any other PDE\n    discr_order=2\n)\n# set necessary settings\n# e.g. settings.discr_order = 2\n\nproblem = polyfempy.Problem() # or any other problem\n# set problem related data\n# e.g. problem.set_displacement(1, [0, 0], [True, False])\n\nsettings.problem = problem\n\n#now we can create a solver and solve\nsolver = polyfempy.Solver()\n\nsolver.settings(settings)\nsolver.load_mesh_from_path(mesh_path, normalize_mesh=False)\n\nsolver.solve()\n</pre> <p>Note 1: for legacy reasons Polyfem always normalizes the mesh (i.e., rescale it to lay in the $[0,1]^d$ box, you can use <code>normalize_mesh=False</code> when loading to disable this feature.</p> <p>Note 2: the solution $u(x)$ of a FEM solver are the coefficients $u_i$ you need to multiply the bases $\\varphi_i(x)$ with: $$ u(x)=\\sum u_i \\varphi_i(x). $$ The coefficients $u_i$ are unrelated with the mesh vertices because of reordering of the nodes or high-order bases. For instance $P_2$ bases have additional nodes on the edges which do not exist in the mesh.</p> <p>For this reason Polyfem uses a visualization mesh where the solution is sampled at the vertices. This mesh has two advantages:</p> <ol> <li>it solves the problem of nodes reordering and additional nodes in the same way</li> <li>it provides a \"true\" visualization for high order solution by densely sampling each element (a $P_2$ solution is a piecewise quadratic function which is visualized in a picewise linear fashion, thus the need of a dense element sampling).</li> </ol> <p>To control the resolution of the visualization mesh use <code>vismesh_rel_area</code> while loading.</p> <p>Some imports for plotting</p> In\u00a0[\u00a0]: Copied! <pre>import meshplot as mp\n</pre> import meshplot as mp <p>algebra</p> In\u00a0[\u00a0]: Copied! <pre>import numpy as np\n</pre> import numpy as np <p>and finally <code>polyfempy</code></p> In\u00a0[\u00a0]: Copied! <pre>import polyfempy as pf\n</pre> import polyfempy as pf <p>Creates a quad mesh of <code>n_pts</code> x <code>n_pts</code> in the form of a regular grid</p> In\u00a0[\u00a0]: Copied! <pre>def create_quad_mesh(n_pts):\n    extend = np.linspace(0,1,n_pts)\n    x, y = np.meshgrid(extend, extend, sparse=False, indexing='xy')\n    pts = np.column_stack((x.ravel(), y.ravel()))\n    \n    faces = np.ndarray([(n_pts-1)**2, 4],dtype=np.int32)\n\n    index = 0\n    for i in range(n_pts-1):\n        for j in range(n_pts-1):\n            faces[index, :] = np.array([\n                j + i * n_pts,\n                j+1 + i * n_pts,\n                j+1 + (i+1) * n_pts,\n                j + (i+1) * n_pts\n            ])\n            index = index + 1\n            \n    return pts, faces\n</pre> def create_quad_mesh(n_pts):     extend = np.linspace(0,1,n_pts)     x, y = np.meshgrid(extend, extend, sparse=False, indexing='xy')     pts = np.column_stack((x.ravel(), y.ravel()))          faces = np.ndarray([(n_pts-1)**2, 4],dtype=np.int32)      index = 0     for i in range(n_pts-1):         for j in range(n_pts-1):             faces[index, :] = np.array([                 j + i * n_pts,                 j+1 + i * n_pts,                 j+1 + (i+1) * n_pts,                 j + (i+1) * n_pts             ])             index = index + 1                  return pts, faces <p>This is the python version of the plate with hole example explained here.</p> <p>Set the mesh path</p> In\u00a0[\u00a0]: Copied! <pre>mesh_path = \"plane_hole.obj\"\n</pre> mesh_path = \"plane_hole.obj\" <p>create settings:</p> <ul> <li>Pick linear $P_1$ elements (if the mesh would be a quad it would be $Q_1$)</li> <li>We are use a linear material model</li> </ul> In\u00a0[\u00a0]: Copied! <pre>settings = pf.Settings(\n    discr_order=1,\n    pde=pf.PDEs.LinearElasticity\n)\n</pre> settings = pf.Settings(     discr_order=1,     pde=pf.PDEs.LinearElasticity ) <p>and choose Young's modulus and poisson ratio</p> In\u00a0[\u00a0]: Copied! <pre>settings.set_material_params(\"E\", 210000)\nsettings.set_material_params(\"nu\", 0.3)\n</pre> settings.set_material_params(\"E\", 210000) settings.set_material_params(\"nu\", 0.3) <p>Next we setup the problem</p> In\u00a0[\u00a0]: Copied! <pre>problem = pf.Problem()\n</pre> problem = pf.Problem() <p>sideset 1 has symetric boundary in $x$</p> In\u00a0[\u00a0]: Copied! <pre>problem.set_x_symmetric(1)\n</pre> problem.set_x_symmetric(1) <p>sideset 4 has symmetric boundary in $y$</p> In\u00a0[\u00a0]: Copied! <pre>problem.set_y_symmetric(4)\n</pre> problem.set_y_symmetric(4) <p>sideset 3 has a force of [100, 0] applied</p> In\u00a0[\u00a0]: Copied! <pre>problem.set_force(3, [100, 0])\n</pre> problem.set_force(3, [100, 0]) <p>fianally set the problem</p> In\u00a0[\u00a0]: Copied! <pre>settings.problem = problem\n</pre> settings.problem = problem <p>Solve! Note: we normalize the mesh to be in $[0,1]^2$</p> In\u00a0[\u00a0]: Copied! <pre>solver = pf.Solver()\n\nsolver.settings(settings)\nsolver.load_mesh_from_path(mesh_path, normalize_mesh=True)\n\nsolver.solve()\n</pre> solver = pf.Solver()  solver.settings(settings) solver.load_mesh_from_path(mesh_path, normalize_mesh=True)  solver.solve() <p>Get the solution</p> In\u00a0[\u00a0]: Copied! <pre>pts, tets, disp = solver.get_sampled_solution()\n</pre> pts, tets, disp = solver.get_sampled_solution() <p>diplace the mesh</p> In\u00a0[\u00a0]: Copied! <pre>vertices = pts + disp\n</pre> vertices = pts + disp <p>and get the stresses</p> In\u00a0[\u00a0]: Copied! <pre>mises, _ = solver.get_sampled_mises_avg()\n</pre> mises, _ = solver.get_sampled_mises_avg() <p>finally plot with the above code</p> In\u00a0[\u00a0]: Copied! <pre>mp.plot(vertices, tets, mises, return_plot=True)\n</pre> mp.plot(vertices, tets, mises, return_plot=True) <p>Note that we used <code>get_sampled_mises_avg</code> to get the Von Mises stresses because they depend on the Jacobian of the displacement which, becase we use $P_1$ elements, is piece-wise constant. To avoid that effect in <code>get_sampled_mises_avg</code> the mises are averaged per vertex weighted by the area of the triangles. If you want the \"real\" mises just call</p> In\u00a0[\u00a0]: Copied! <pre>mises = solver.get_sampled_mises()\nmp.plot(vertices, tets, mises, return_plot=True)\n</pre> mises = solver.get_sampled_mises() mp.plot(vertices, tets, mises, return_plot=True) <p>This is the same example as before, but we use <code>wildmeshing</code> to create a curved mesh.</p> In\u00a0[\u00a0]: Copied! <pre>import wildmeshing as wm\nmesh_path = \"plane_hole.svg\"\n\nv, f, nodes, F_nodes = wm.triangulate_svg(mesh_path, cut_outside=True)\n</pre> import wildmeshing as wm mesh_path = \"plane_hole.svg\"  v, f, nodes, F_nodes = wm.triangulate_svg(mesh_path, cut_outside=True) <p>Now we proceed as before</p> In\u00a0[\u00a0]: Copied! <pre>#create settings\nsettings = pf.Settings(\n    discr_order=1, #pick linear P_1 elements, even if the geometry is P_3\n    pde=pf.PDEs.LinearElasticity #Linear elasticity\n)\n\n#Material parameters\nsettings.set_material_params(\"E\", 210000)\nsettings.set_material_params(\"nu\", 0.3)\n</pre> #create settings settings = pf.Settings(     discr_order=1, #pick linear P_1 elements, even if the geometry is P_3     pde=pf.PDEs.LinearElasticity #Linear elasticity )  #Material parameters settings.set_material_params(\"E\", 210000) settings.set_material_params(\"nu\", 0.3) <p>Next we setup the problem as before</p> In\u00a0[\u00a0]: Copied! <pre>problem = pf.Problem()\n\n#sideset 1 is symmetric in x\nproblem.set_x_symmetric(1)\n\n#sideset 4 is symmetric in y\nproblem.set_y_symmetric(4)\n\n#sideset 3 has a force of [100, 0] applied\nproblem.set_force(3, [100, 0])\n</pre> problem = pf.Problem()  #sideset 1 is symmetric in x problem.set_x_symmetric(1)  #sideset 4 is symmetric in y problem.set_y_symmetric(4)  #sideset 3 has a force of [100, 0] applied problem.set_force(3, [100, 0]) <p>fianally set the problem</p> In\u00a0[\u00a0]: Copied! <pre>settings.problem = problem\n</pre> settings.problem = problem <p>Create the solver and load the high-order mesh, the only difference with respect to before</p> In\u00a0[\u00a0]: Copied! <pre>solver = pf.Solver()\n\nsolver.settings(settings)\nsolver.set_high_order_mesh(v, f, nodes, F_nodes, normalize_mesh=True)\n</pre> solver = pf.Solver()  solver.settings(settings) solver.set_high_order_mesh(v, f, nodes, F_nodes, normalize_mesh=True) <p>And finally, solve!</p> In\u00a0[\u00a0]: Copied! <pre>solver.solve()\n</pre> solver.solve() <p>Get and plot the solution, same as before</p> In\u00a0[\u00a0]: Copied! <pre>pts, tets, disp = solver.get_sampled_solution()\n\n#diplace the mesh\nvertices = pts + disp\n\n#get the stresses\nmises, _ = solver.get_sampled_mises_avg()\n\n#plot\nmp.plot(vertices, tets, mises, return_plot=True)\n</pre> pts, tets, disp = solver.get_sampled_solution()  #diplace the mesh vertices = pts + disp  #get the stresses mises, _ = solver.get_sampled_mises_avg()  #plot mp.plot(vertices, tets, mises, return_plot=True) <p>Non-linear example. We want to torque a 3D bar around the $z$ direction.</p> <p>The example is really similar as the one just above.</p> <p>Sets the mesh, create a solver, and load the mesh.</p> <p>In this case the mesh has already the correct size. We also choose a coarse visualization mesh</p> In\u00a0[\u00a0]: Copied! <pre>mesh_path = \"square_beam_h.HYBRID\"\nsolver = pf.Solver()\nsolver.load_mesh_from_path(mesh_path, normalize_mesh=False, vismesh_rel_area=0.001)\n</pre> mesh_path = \"square_beam_h.HYBRID\" solver = pf.Solver() solver.load_mesh_from_path(mesh_path, normalize_mesh=False, vismesh_rel_area=0.001) <p>We want to use the default sideset marking, top of the mesh is 5 and bottom is 6.</p> <p>Let's verify. We first extract the sidesets: <code>p</code> are some point, <code>t</code> triangles, and <code>s</code> the sidesets from 1 to 6</p> In\u00a0[\u00a0]: Copied! <pre>p, t, s = solver.get_boundary_sidesets()\n</pre> p, t, s = solver.get_boundary_sidesets() <p>Now we can plot it</p> In\u00a0[\u00a0]: Copied! <pre>tmp = np.zeros_like(s)\ntmp[s==5] = 1\ntmp[s==6] = 1\n\nmp.plot(p, t, tmp, return_plot=True)\n</pre> tmp = np.zeros_like(s) tmp[s==5] = 1 tmp[s==6] = 1  mp.plot(p, t, tmp, return_plot=True) <p>Now we create the settings, as before.</p> <p>Note: It is an hex-mesh so we are using $Q_1$.</p> <p>Differently from before we want a non-linear material model: NeoHookean.</p> <p>To avoid ambiguities in the rotation, we want to do 5 steps of incremental loading.</p> In\u00a0[\u00a0]: Copied! <pre>settings = pf.Settings(\n    discr_order=1,\n    pde=pf.PDEs.NonLinearElasticity,\n    \n    nl_solver_rhs_steps=5\n)\n</pre> settings = pf.Settings(     discr_order=1,     pde=pf.PDEs.NonLinearElasticity,          nl_solver_rhs_steps=5 ) <p>Choose Young's modulus and Poisson's ratio, as before</p> In\u00a0[\u00a0]: Copied! <pre>settings.set_material_params(\"E\", 200)\nsettings.set_material_params(\"nu\", 0.35)\n</pre> settings.set_material_params(\"E\", 200) settings.set_material_params(\"nu\", 0.35) <p>Now we setup problem with fixed sideset (5), rotating sideset (6), ahlf a tour along the $z$-axis.</p> In\u00a0[\u00a0]: Copied! <pre>problem = pf.Torsion(\n    fixed_boundary=5, #sideset 5 is fixed\n    turning_boundary=6, #sideset 6 rotates\n    \n    n_turns = 0.5, #by half a tour\n    \n    axis_coordiante=2, #around the z-axis, 2\n    \n)\n</pre> problem = pf.Torsion(     fixed_boundary=5, #sideset 5 is fixed     turning_boundary=6, #sideset 6 rotates          n_turns = 0.5, #by half a tour          axis_coordiante=2, #around the z-axis, 2      ) <p>and set the problem and solve</p> In\u00a0[\u00a0]: Copied! <pre>settings.problem = problem\n\n#solving!\nsolver.settings(settings)\n\nsolver.solve()\n</pre> settings.problem = problem  #solving! solver.settings(settings)  solver.solve() <p>takes approx 1 min because it is a complicated non-linear problem!</p> <p>Get solution and stesses as before</p> <p>Since we want to show only the surface there is no need of getting the whole volume, so we set <code>boundary_only</code> to <code>True</code></p> In\u00a0[\u00a0]: Copied! <pre>pts, tets, disp = solver.get_sampled_solution(boundary_only=True)\nvertices = pts + disp\nmises, _ = solver.get_sampled_mises_avg(boundary_only=True)\n</pre> pts, tets, disp = solver.get_sampled_solution(boundary_only=True) vertices = pts + disp mises, _ = solver.get_sampled_mises_avg(boundary_only=True) <p>and plot the 3d result!</p> In\u00a0[\u00a0]: Copied! <pre>mp.plot(vertices, tets, mises, shading={\"flat\":True}, return_plot=True)\n</pre> mp.plot(vertices, tets, mises, shading={\"flat\":True}, return_plot=True) <p>Create the mesh using the utility function</p> In\u00a0[\u00a0]: Copied! <pre>pts, faces = create_quad_mesh(50)\n</pre> pts, faces = create_quad_mesh(50) <p>create settings, pick linear $Q_2$ elements for velocity and $Q_1$ for pressure and select stokes as material model.</p> In\u00a0[\u00a0]: Copied! <pre>settings = pf.Settings(\n    discr_order=2,\n    pressure_discr_order=1,\n    \n    pde=pf.PDEs.Stokes\n)\n</pre> settings = pf.Settings(     discr_order=2,     pressure_discr_order=1,          pde=pf.PDEs.Stokes ) <p>Set the viscosity of the fluid</p> In\u00a0[\u00a0]: Copied! <pre>settings.set_material_params(\"viscosity\", 1)\n</pre> settings.set_material_params(\"viscosity\", 1) <p>The default solver do not support mixed formulation, we need to choose <code>UmfPackLU</code></p> In\u00a0[\u00a0]: Copied! <pre>settings.set_advanced_option(\"solver_type\", \"Eigen::UmfPackLU\")\n</pre> settings.set_advanced_option(\"solver_type\", \"Eigen::UmfPackLU\") <p>We use the standard Driven Cavity problem</p> In\u00a0[\u00a0]: Copied! <pre>problem = pf.DrivenCavity()\n</pre> problem = pf.DrivenCavity() <p>we set the problem</p> In\u00a0[\u00a0]: Copied! <pre>settings.problem = problem\n</pre> settings.problem = problem <p>We create the solver and set the settings</p> In\u00a0[\u00a0]: Copied! <pre>solver = pf.Solver()\nsolver.settings(settings)\n</pre> solver = pf.Solver() solver.settings(settings) <p>This time we are using pts and faces instead of loading from the disk</p> In\u00a0[\u00a0]: Copied! <pre>solver.set_mesh(pts, faces, vismesh_rel_area=0.001)\n</pre> solver.set_mesh(pts, faces, vismesh_rel_area=0.001) <p>Solve!</p> In\u00a0[\u00a0]: Copied! <pre>solver.solve()\n</pre> solver.solve() <p>We now get the solution and the pressure</p> In\u00a0[\u00a0]: Copied! <pre>pts, tris, velocity = solver.get_sampled_solution()\n</pre> pts, tris, velocity = solver.get_sampled_solution() <p>and plot it!</p> In\u00a0[\u00a0]: Copied! <pre>each = 10\np = mp.plot(pts, tris, np.linalg.norm(velocity, axis=1), return_plot=True)\np.add_lines(pts[0:pts.shape[0]:each,:], pts[0:pts.shape[0]:each,:]+velocity[0:pts.shape[0]:each,:]/6)\np\n</pre> each = 10 p = mp.plot(pts, tris, np.linalg.norm(velocity, axis=1), return_plot=True) p.add_lines(pts[0:pts.shape[0]:each,:], pts[0:pts.shape[0]:each,:]+velocity[0:pts.shape[0]:each,:]/6) p <p>Create the mesh using the utility function</p> In\u00a0[\u00a0]: Copied! <pre>pts, faces = create_quad_mesh(50)\n</pre> pts, faces = create_quad_mesh(50) <p>create settings, pick linear $Q_1$ elements, and a linear material model.</p> <p>In this case we want to run a simulation with $t\\in[0, 10]$ and have 50 time steps.</p> In\u00a0[\u00a0]: Copied! <pre>settings = pf.Settings(\n    discr_order=1,\n    pde=pf.PDEs.LinearElasticity,\n    \n    tend=10,\n    time_steps=50\n)\n</pre> settings = pf.Settings(     discr_order=1,     pde=pf.PDEs.LinearElasticity,          tend=10,     time_steps=50 ) <p>Choose Young's modulus and poisson ratio</p> In\u00a0[\u00a0]: Copied! <pre>settings.set_material_params(\"E\", 1)\nsettings.set_material_params(\"nu\", 0.3)\n</pre> settings.set_material_params(\"E\", 1) settings.set_material_params(\"nu\", 0.3) <p>Next we setup the problem, this doesnt have any parameters. It will...</p> In\u00a0[\u00a0]: Copied! <pre>problem = pf.Gravity()\n</pre> problem = pf.Gravity() <p>we set the problem</p> In\u00a0[\u00a0]: Copied! <pre>settings.problem = problem\n</pre> settings.problem = problem <p>We create the solver and set the settings</p> In\u00a0[\u00a0]: Copied! <pre>solver = pf.Solver()\nsolver.settings(settings)\n</pre> solver = pf.Solver() solver.settings(settings) <p>This time we are using <code>pts</code> and <code>faces</code> instead of loading from the disk (For efficienty in the browser we select a coarse vis mesh)</p> In\u00a0[\u00a0]: Copied! <pre>solver.set_mesh(pts, faces, vismesh_rel_area=0.001)\n</pre> solver.set_mesh(pts, faces, vismesh_rel_area=0.001) <p>Solve!</p> In\u00a0[\u00a0]: Copied! <pre>solver.solve()\n</pre> solver.solve() <p>Get the solution and the mises</p> In\u00a0[\u00a0]: Copied! <pre>pts = solver.get_sampled_points_frames()\ntris = solver.get_sampled_connectivity_frames()\ndisp = solver.get_sampled_solution_frames()\nmises = solver.get_sampled_mises_avg_frames()\n</pre> pts = solver.get_sampled_points_frames() tris = solver.get_sampled_connectivity_frames() disp = solver.get_sampled_solution_frames() mises = solver.get_sampled_mises_avg_frames() In\u00a0[\u00a0]: Copied! <pre>def plot(frame, p=None):\n    return mp.plot(pts[frame]+disp[frame], tris[frame], mises[frame], return_plot=True, plot=p)\n</pre> def plot(frame, p=None):     return mp.plot(pts[frame]+disp[frame], tris[frame], mises[frame], return_plot=True, plot=p) <p>Before the animation, let's plot the solution some frames</p> In\u00a0[\u00a0]: Copied! <pre>plot(0)\n</pre> plot(0) In\u00a0[\u00a0]: Copied! <pre>plot(5)\n</pre> plot(5) In\u00a0[\u00a0]: Copied! <pre>plot(11)\n</pre> plot(11) <p>Now we are ready to do the animation</p> In\u00a0[\u00a0]: Copied! <pre>p = plot(0)\n\n@mp.interact(frame=(0, len(mises)))\ndef step(frame=0):\n    plot(frame, p)\n</pre> p = plot(0)  @mp.interact(frame=(0, len(mises))) def step(frame=0):     plot(frame, p)"},{"location":"python_examples/#polyfem-python-tutorial","title":"Polyfem Python Tutorial\u00b6","text":""},{"location":"python_examples/#examples","title":"Examples\u00b6","text":""},{"location":"python_examples/#utility","title":"Utility\u00b6","text":""},{"location":"python_examples/#plate-hole","title":"Plate hole\u00b6","text":""},{"location":"python_examples/#plate-hole-with-high-order-mesh","title":"Plate hole with High-Order Mesh\u00b6","text":""},{"location":"python_examples/#torsion","title":"Torsion\u00b6","text":""},{"location":"python_examples/#fluid-simulation","title":"Fluid simulation\u00b6","text":""},{"location":"python_examples/#time-dependent-simulation","title":"Time dependent simulation\u00b6","text":""},{"location":"details/contact/","title":"Contact","text":"<p>PolyFEM uses Incremental Potential Contact (IPC) [Li et al. 2020] to handle contacts.</p> <p>IPC in PolyFEM is implemented through the use of the IPC Toolkit.</p> <p>Todo</p> <p>Describe the IPC formulation and parameters.</p>"},{"location":"details/formulations/","title":"Formulations","text":"<p>The following formulations are available in the PolyFEM list of possible formulations. The constants can be set in <code>params</code>. All formulations support boundary conditions. For the elasticity formulations we output:</p> <p>Cauchy stress tensor</p> \\[     \\sigma = \\frac 1 J \\frac{\\partial \\Psi}{\\partial F} F^T \\] <p>Frist Piola Kirchhoff stress tensor (Wikipedia)</p> \\[     P =  J \\sigma F^{-T} \\] <p>Second Piola Kirchhoff stress tensor (Wikipedia)</p> \\[     S =  J F^{-1} \\sigma F^{-T}, \\] <p>where \\(\\Psi\\) is the energy density, \\(F\\) the deformation gradient, and \\(J=\\det(F)\\).</p>"},{"location":"details/formulations/#scalar","title":"Scalar","text":""},{"location":"details/formulations/#laplacian","title":"Laplacian","text":"<ul> <li>Constants: none</li> <li>Description: solve for \\(-\\Delta u = f\\)</li> </ul>"},{"location":"details/formulations/#bilaplacian-mixed","title":"Bilaplacian (mixed)","text":"<ul> <li>Constants: none</li> <li>Description: solve for \\(-\\Delta^2 u = f\\)</li> </ul>"},{"location":"details/formulations/#helmholtz","title":"Helmholtz","text":"<ul> <li>Constants: \\(k\\)</li> <li>Description: solve for \\(-\\Delta u - k^2 u = f\\)</li> </ul>"},{"location":"details/formulations/#tensor","title":"Tensor","text":""},{"location":"details/formulations/#linear-elasticity","title":"Linear Elasticity","text":"<ul> <li>Constants: <code>E</code>/<code>nu</code>, <code>lambda</code>/<code>mu</code></li> <li>Description: solve for \\(-\\text{div}(\\sigma[u]) = f\\) where</li> </ul> \\[     \\sigma[u] = 2 \\mu  \\epsilon[u]+ \\lambda \\text{tr}(\\epsilon[u]) I \\qquad \\epsilon[u] = \\frac 1 2 \\left(\\nabla u^T + \\nabla u\\right) \\]"},{"location":"details/formulations/#hooke-linear-elasticity","title":"Hooke Linear Elasticity","text":"<ul> <li>Constants: <code>elasticity_tensor</code>, <code>E</code>/<code>nu</code>, <code>lambda</code>/<code>mu</code></li> <li>Description: solve for \\(-\\text{div}(\\sigma[u]) = f\\) where</li> </ul> \\[     \\sigma[u] = C :  \\epsilon[u] \\qquad \\epsilon[u] = \\frac 1 2 \\left(\\nabla u^T + \\nabla u\\right) \\] <p>where \\(C\\) is the elasticity tensor</p>"},{"location":"details/formulations/#incompressible-linear-elasticity-mixed","title":"Incompressible Linear Elasticity (mixed)","text":"<ul> <li>Constants: <code>E</code>/<code>nu</code>, <code>lambda</code>/<code>mu</code></li> <li>Description: solve for</li> </ul> \\[\\begin{align} -\\text{div}(2\\mu\\epsilon[u] + p I) &amp;= f\\\\ \\text{div}(u) - \\lambda^{-1}p &amp;= 0 \\end{align}\\]"},{"location":"details/formulations/#saint-venantkirchoff-elasticity","title":"Saint Venant\u2013Kirchoff Elasticity","text":"<ul> <li>Constants: <code>elasticity_tensor</code>, <code>E</code>/<code>nu</code>, <code>lambda</code>/<code>mu</code></li> <li>Description: solve for \\(-\\text{div}(\\sigma[u]) = f\\) where</li> </ul> \\[ \\sigma[u] = C: \\epsilon[u]  \\qquad \\epsilon[u] = \\frac 1 2 \\left(\\nabla u^T \\nabla u + \\nabla u^T + \\nabla u\\right) \\] <p>where \\(C\\) is the elasticity tensor</p>"},{"location":"details/formulations/#neohookean-elasticity","title":"NeoHookean Elasticity","text":"<ul> <li>Constants: <code>E</code>/<code>nu</code>, <code>lambda</code>/<code>mu</code></li> <li>Description: solve for \\(-\\text{div}(\\sigma[u]) = f\\) where</li> </ul> \\[     \\sigma[u] = \\mu (F[u] - F[u]^{-T}) + \\lambda \\ln(\\det F[u]) F[u]^{-T} \\qquad F[u] = \\nabla u + I \\]"},{"location":"details/formulations/#mooney-rivlin-elasticity","title":"Mooney-Rivlin Elasticity","text":"<ul> <li>Constants: <code>c1</code>/<code>c2</code>/<code>k=1</code></li> <li>Description: solve for \\(-\\text{div}(\\sigma[u]) = f\\) where \\(\\sigma[u]=\\nabla_u \\Psi[u]\\). The energy density \\(\\Psi\\) is</li> </ul> \\[     \\Psi[u] = c_1 (\\widetilde{I_1} - d) + c_2 (\\widetilde{I_2} - d) + \\frac{k}{2} \\ln^2(J) \\] <p>where \\(d\\) is the dimension (2 or 3),</p> \\[\\begin{align} F = \\nabla u + I, \\quad J = \\det(F), \\quad \\tilde{F} = \\frac{1}{\\sqrt[d]{J}} F, \\quad \\widetilde{C} = \\widetilde{F} \\widetilde{F}^T, \\\\ \\widetilde{I_1} = \\text{tr}\\left(\\widetilde{C}\\right), \\quad  \\text{and} \\quad \\widetilde{I_2} = \\frac{1}{2} \\left(\\left(\\trace{\\widetilde{C}}\\right)^2 - \\text{tr}\\left(\\widetilde{C}^2\\right)\\right). \\end{align}\\] <ul> <li>Reference: FEBio documentation</li> </ul>"},{"location":"details/formulations/#incompressible-ogden-elasticity","title":"Incompressible Ogden Elasticity","text":"<ul> <li>Constants: <code>c</code>/<code>m</code>/<code>k</code></li> <li>Description: solve for \\(-\\text{div}(\\sigma[u]) = f\\) where \\(\\sigma[u]=\\nabla_u \\Psi[u]\\). The energy density \\(\\Psi\\) is</li> </ul> \\[     \\Psi[u] = \\sum_{i=1}^N \\frac{c_i}{m_i^2} \\left(         \\sum_{j=1}^d \\tilde{\\lambda}_j^{m_i} - d     \\right) +  \\frac{1}{2} K  \\ln(J)^2 \\] <p>where \\(N\\), the number of terms, is dictated by the number of coefficients given, \\(d\\) is the dimension (2 or 3), \\(J = \\det(F)\\) where \\(F = \\nabla u + I\\), and \\(\\tilde{\\lambda}_j = J^{-\\frac{1}{d}}\\lambda_j\\) are the eigenvalues of \\(\\tilde{F}\\) (same as in the Mooney-Rivlin Elasticity).</p> <ul> <li>Reference: FEBio documentation</li> </ul>"},{"location":"details/formulations/#unconstrained-ogden-elasticity","title":"Unconstrained Ogden Elasticity","text":"<ul> <li>Constants: <code>mus</code>/<code>alphas</code>/<code>Ds</code></li> <li>Description: solve for \\(-\\text{div}(\\sigma[u]) = f\\) where \\(\\sigma[u]=\\nabla_u \\Psi[u]\\). The energy density \\(\\Psi\\) is</li> </ul> \\[     \\Psi[u] = \\sum_{i=1}^N \\frac{2 \\mu_i}{\\alpha_i^2} \\left(         \\sum_{j=1}^d \\tilde{\\lambda}_j^{\\alpha_i} - d     \\right) + \\sum_{i=1}^N \\frac{\\left(J-1\\right)^{2 i}}{D_i} \\] <p>where \\(N\\), the number of terms, is dictated by the number of coefficients given, \\(d\\) is the dimension (2 or 3), \\(J = \\det(F)\\) where \\(F = \\nabla u + I\\), and \\(\\tilde{\\lambda}_j = J^{-\\frac{1}{d}}\\lambda_j\\) where \\(\\lambda_j\\) are the eigenvalues of \\(F.\\)</p> <ul> <li>Reference: ABAQUS documentation</li> </ul>"},{"location":"details/formulations/#viscous-damping","title":"Viscous Damping","text":"<ul> <li>Constants: <code>phi</code>/<code>psi</code></li> <li>Description: an extra energy that represents dissipation, adding to the elastic energy in transient problems</li> </ul> \\[     R(F,\\dot{F})=\\psi \\|\\dot{E}(F,\\dot{F})\\|^2+\\frac{\\phi}{2}\\text{tr}^2\\dot{E}(F,\\dot{F}) \\] <p>where \\(F[u] = \\nabla u + I\\) and \\(E[u] = \\frac{1}{2}(F^TF-I)\\).</p> <p>The above corresponds to the viscous Piola-Kirchhoff stress</p> \\[     P=F(2\\psi\\dot{E}+\\phi\\text{tr}(\\dot{E})I)=\\nabla_2 R(F,\\dot{F}). \\]"},{"location":"details/formulations/#stokes-mixed","title":"Stokes (mixed)","text":"<ul> <li>Constants: <code>viscosity</code> (\\(\\nu\\))</li> <li>Description: solve for</li> </ul> \\[\\begin{align}     -\\nu\\Delta u + \\nabla p &amp;= f\\\\     -\\text{div}(u) &amp;= 0 \\end{align}\\]"},{"location":"details/formulations/#navierstokes-mixed","title":"Navier\u2013Stokes (mixed)","text":"<ul> <li>Constants: <code>viscosity</code> (\\(\\nu\\))</li> <li>Description: solve for</li> </ul> \\[\\begin{align}     u\\cdot \\nabla u -\\nu\\Delta u + \\nabla p &amp;= f\\\\     -\\text{div}(u)  &amp;= 0 \\end{align}\\]"},{"location":"details/formulations/#implementing-new-formulations","title":"Implementing New Formulations","text":"<p>Todo</p> <p>Describe how to implement a new formulation in C++.</p>"},{"location":"details/miscellaneous/","title":"Miscellaneous","text":""},{"location":"details/miscellaneous/#understanding-solver-logs","title":"Understanding solver logs","text":"<p>The nonlinear solver will log a debug message per iteration with some useful information. Take the following example log:</p> <pre><code>[polyfem] [debug] [Newton] iter=51 f=-1.06006e-06 ||\u2207f||=0.006432 ||\u0394x||=0.0037612 \u0394x\u22c5\u2207f(x)=-6.71732e-08 g=9.69072e-05 tol=1e-05 rate=0.0321861 ||step||=0.000121058\n</code></pre> <p>The terms in order they appear are:</p> <ul> <li><code>iter</code>: the iteration number</li> <li><code>f</code>: the value of the objective function</li> <li><code>||\u2207f||</code>: the \\(L^2\\)-norm of the gradient of <code>f</code></li> <li><code>||\u0394x||</code>: the \\(L^2\\)-norm of the update direction to our optimization variables (e.g., displacements/positions for elasticity)</li> <li><code>\u0394x\u22c5\u2207f(x)</code>: the dot product between these values (this is a measure of how much progress we can expect the optimization can make)</li> <li><code>g</code>: the convergence criteria (i.e., the optimization stops when <code>g &lt; tol</code>); this depends on the choice of <code>\"useGradNorm\"</code> solver parameter (for more information see here)</li> <li><code>tol</code>: the convergence criteria tolerance</li> <li><code>rate</code>: the step size the line-search produced (i.e. \\(x_{i+1} = x_i + \\text{rate} *  \\Delta x\\))</li> <li><code>||step||</code>: the L2 norm of the step (i.e. \\(\\|\\text{rate} * \\Delta x\\| = \\text{rate} * \\|\\Delta x\\|\\))</li> </ul>"},{"location":"details/problems/","title":"Problems","text":"<p>Each problem has a specific set of optional <code>problem_params</code> described here.</p>"},{"location":"details/problems/#generic","title":"Generic","text":""},{"location":"details/problems/#genericscalar","title":"GenericScalar","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solves for generic scalar problem with specified rhs</li> <li>Options: <pre><code>\"rhs\": 3                            // Rhs of the problem\n\"dirichlet_boundary\": [             // List of Dirichlet boundaries\n{\n\"id\": 1,                        // Boundary id\n\"value\": 0                      // Boundary value\n},\n{\n\"id\": 2,                        // Boundary id\n\"value\": \"sin(x)+y\"             // Formulas are supported\n}],\n\"neumann_boundary\": [               // List of Neumann boundaries\n{\n\"id\": 3,                        // Boundary id\n\"value\": 1,                     // Boundary value\n},\n{\n\"id\": 4,                        // Boundary id\n\"value\": \"x^2\"                  // Formulas are supported\n}]\n</code></pre></li> </ul>"},{"location":"details/problems/#generictensor","title":"GenericTensor","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: user-selected</li> <li>Form: tensor</li> <li>Description: solves for generic tensor problem with specified body forces</li> <li>Options: <pre><code>\"rhs\": [1, 2, 3]                    // Rhs of the problem\n\"dirichlet_boundary\": [             // List of Dirichelt boundaries\n{\n\"id\": 1,                        // Boundary id\n\"value\": [0, 0, 0],             // Boundary vector value\n\"dimension\": [                  // Which dimension are Dirichelt\ntrue,\ntrue,\nfalse                   // In this case z is free\n]\n},\n{\n\"id\": 2,                        // Boundary id\n\"value\": [\"sin(x)+y\", \"z^2\", 0] // Formulas are supported\n}],\n\"neumann_boundary\": [               // List of Neumann boundaries\n{\n\"id\": 3,                        // Boundary id\n\"value\": [0, 0, 0]              // Boundary vector value\n},\n{\n\"id\": 4,                        // Boundary id\n\"value\": [\"sin(z)+y\", \"z^2\", 0] // Formulas are supported\n}],\n\"is_time_dependent\": false,\n\"initial_solution\": [0, 0, 0],\n\"initial_velocity\": [0, 0, 0],\n\"initial_acceleration\": [0, 0, 0]\n</code></pre></li> </ul>"},{"location":"details/problems/#specific","title":"Specific","text":""},{"location":"details/problems/#compressionelasticexact","title":"CompressionElasticExact","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for</li> </ul> \\[\\begin{align} f_{2D}(x,y) &amp;= -\\begin{bmatrix}(y^3 + x^2 + xy)/20\\\\ (3x^4 + xy^2 + x)/20\\end{bmatrix}\\\\ f_{3D}(x,y,z) &amp;= -\\begin{bmatrix}(xy + x^2 + y^3 + 6z)/14\\\\ (zx - z^3 + xy^2 + 3x^4)/14\\\\ (xyz + y^2z^2 - 2x)/14\\end{bmatrix} \\end{align}\\]"},{"location":"details/problems/#cubic","title":"Cubic","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solve for \\(f(x,y,z) = (2y-0.9)^4 + 0.1\\)</li> </ul>"},{"location":"details/problems/#drivencavity","title":"DrivenCavity","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for zero right-hand side, and 0.25 for boundary id 1</li> </ul>"},{"location":"details/problems/#elastic","title":"Elastic","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for zero right-hand side, -0.25 for boundary id \u2155, 0.25 for id 3/6</li> </ul>"},{"location":"details/problems/#elasticexact","title":"ElasticExact","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for</li> </ul> \\[\\begin{align} f_{2D}(x,y) &amp;= \\begin{bmatrix}(y^3 + x^2 + xy)/50\\\\ (3x^4 + xy^2 + x)/50\\end{bmatrix}\\\\ f_{3D}(x,y,z) &amp;= \\begin{bmatrix}(xy + x^2 + y^3 + 6z)/80\\\\ (xz - z^3 + xy^2 + 3x^4)/80\\\\ (xyz + y^2 z^2 - 2x)/80\\end{bmatrix} \\end{align}\\]"},{"location":"details/problems/#elasticzerobc","title":"ElasticZeroBC","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for [0, 0.5, 0] right-hand side and zero boundary condition</li> </ul>"},{"location":"details/problems/#flow","title":"Flow","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for zero right-hand side, [0.25, 0, 0] for boundary id \u2153, [0, 0, 0] for 7</li> </ul>"},{"location":"details/problems/#franke","title":"Franke","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solves for the 2D and 3D Franke function</li> </ul>"},{"location":"details/problems/#gravity","title":"Gravity","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: true</li> <li>Form: tensor</li> <li>Description: solves for 0.1 body force in y direction and zero for boundary 4</li> </ul>"},{"location":"details/problems/#kernel","title":"Kernel","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: scalar/tensor</li> <li>Description: solves the omogenous PDE with <code>n_kernels</code> kernels placed on the bounding box at <code>kernel_distance</code></li> <li>Options: <code>n_kernels</code> sets the number of kernels, <code>kernel_distance</code> sets the distance from the bounding box</li> </ul>"},{"location":"details/problems/#linear","title":"Linear","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solve for \\(f(x,y,z) = x\\)</li> </ul>"},{"location":"details/problems/#linearelasticexact","title":"LinearElasticExact","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for</li> </ul> \\[\\begin{align} f_{2D}(x,y) &amp;= \\begin{bmatrix}-(y + x)/50\\\\ -(3x + y)/50\\end{bmatrix}\\\\ f_{3D}(x,y,z) &amp;= \\begin{bmatrix}-(y + x + z)/50\\\\ -(3x + y - z)/50\\\\ -(x + y - 2z)/50\\end{bmatrix}\\\\ \\end{align}\\]"},{"location":"details/problems/#minsurf","title":"MinSurf","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solve for -10 for rhs, and zero Dirichelt boundary condition</li> </ul>"},{"location":"details/problems/#pointbasedtensor","title":"PointBasedTensor","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solves for point-based boudary conditions</li> <li>Options: <pre><code>\"scaling\": 1,               // Scaling factor\n\"rhs\": 0,                   // Right-hand side\n\"translation\": [0, 0, 0]    // Translation\n\"boundary_ids\": [           // List of Dirichelt boundaries\n{\n\"id\": 1,                // Boundary id\n\"value\": [0, 0, 0]      // Boundary vector value\n},\n{\n\"id\": 2,\n\"value\": {              // Rbf interpolated value\n\"function\": \"\",     // Function file\n\"points\": \"\",       // Points file\n\"rbf\": \"gaussian\",  // Rbf kernel\n\"epsilon\": 1.5,     // Rbf epsilon\n\"coordinate\": 2,    // Coordinate to ignore\n\n\"dimension\": [      // Which dimension are Dirichlet\ntrue,\ntrue,\nfalse           // In this case z is free\n]\n}\n},\n{\n\"id\": 2,\n\"value\": {              // Rbf interpolated value\n\"function\": \"\",     // Function file\n\"points\": \"\",       // Points file\n\"triangles\": \"\",    // Triangles file\n\"coordinate\": 2,    // Coordinate to ignore\n}\n}]\n</code></pre></li> </ul>"},{"location":"details/problems/#quadratic","title":"Quadratic","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solve for \\(f(x,y,z) = x^2\\)</li> </ul>"},{"location":"details/problems/#quadraticelasticexact","title":"QuadraticElasticExact","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for</li> </ul> \\[\\begin{align} f_{2D}(x,y) &amp;= \\begin{bmatrix} -(y^2 + x^2 + xy)/50\\\\ -(3x^2 + y)/50\\end{bmatrix}\\\\ f_{3D}(x,y,z) &amp;= \\begin{bmatrix}-(y^2 + x^2 + xy + yz)/50\\\\ -(3x^2 + y + z^2)/50\\\\ -(xz + y^2 - 2z)/50\\end{bmatrix} \\end{align}\\]"},{"location":"details/problems/#sine","title":"Sine","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solve for</li> </ul> \\[\\begin{align} f(x,y) &amp;= \\sin(10x)\\sin(10y)\\\\ f(x,y,z) &amp;= \\sin(10x)\\sin(10y)\\sin(10z) \\end{align}\\]"},{"location":"details/problems/#testproblem","title":"TestProblem","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: scalar</li> <li>Description: solve for extreme problem to test errors for high order discretizations</li> </ul>"},{"location":"details/problems/#timedependentflow","title":"TimeDependentFlow","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: true</li> <li>Form: tensor</li> <li>Description: solve for zero right-hand side, [0.25, 0, 0] for boundary id \u2153, [0, 0, 0] for 7, and zero inital velocity</li> </ul>"},{"location":"details/problems/#timedependentscalar","title":"TimeDependentScalar","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: true</li> <li>Form: scalar</li> <li>Description: solve for one right-hand side, zero boundary condition, and zero time boundary</li> </ul>"},{"location":"details/problems/#torsionelastic","title":"TorsionElastic","text":"<ul> <li>Has exact solution: false</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for zero body forces, <code>fixed_boundary</code> fixed (zero displacement), <code>turning_boundary</code> rotating around <code>axis_coordiante</code> for <code>n_turns</code></li> <li>Options: <code>fixed_boundary</code> id of the fixed boundary, <code>turning_boundary</code> id of the moving boundary, <code>axis_coordiante</code> coordinate of the rotating axis, <code>n_turns</code> number of turns</li> </ul>"},{"location":"details/problems/#zero_bc","title":"Zero_BC","text":"<ul> <li>Has exact solution: true</li> <li>Time-dependent: false</li> <li>Form: tensor</li> <li>Description: solve for</li> </ul> \\[\\begin{align} f_{2D}(x,y) &amp;= (1 - x)  x^2 y (1-y)^2\\\\ f_{3D}(x,y,z) &amp;= (1 - x)  x^2 y (1-y)^2 z (1 - z) \\end{align}\\]"},{"location":"details/solvers/","title":"Solvers","text":""},{"location":"details/solvers/#linear-solver","title":"Linear Solver","text":"<p>PolyFEM offers several linear solver options based on compilation options. For more information, see PolySolve a stand-alone linear solver wrapper library used by PolyFEM.</p> <p>Options: <code>AMGCL</code>, <code>Eigen::BiCGSTAB</code>, <code>Eigen::CholmodSupernodalLLT</code>, <code>Eigen::ConjugateGradient</code>, <code>Eigen::DGMRES</code>, <code>Eigen::GMRES</code>, <code>Eigen::LeastSquaresConjugateGradient</code>, <code>Eigen::MINRES</code>, <code>Eigen::PardisoLDLT</code>, <code>Eigen::PardisoLU</code>, <code>Eigen::SimplicialLDLT</code>, <code>Eigen::SparseLU</code>, <code>Eigen::UmfPackLU</code>, <code>Hypre</code>, <code>Pardiso</code> </p>"},{"location":"details/solvers/#nonlinear-solver","title":"Nonlinear Solver","text":"<p>To solve nonlinear formulations, PolyFEM offers two options: Newton\u2019s method (<code>newton</code>) and L-BFGS (<code>lbfgs</code>).</p> <p>The settings for the solver are stored inside the field <code>\"nonlinear\"</code>. General settings include:</p> <ul> <li><code>\"grad_norm\"</code> (default: <code>1e-8</code>): convergence tolerance on the norm (\\(L^2\\)) of the gradient</li> <li><code>\"nl_iterations\"</code> (default: <code>1000</code>): maximum number of iterations to spend solving</li> <li><code>\"use_grad_norm\"</code> (default: <code>true</code>): whether to use the gradient norm or update direction norm for convergence checks<ul> <li>When optimizing a function it is natural to check for a zero (up to tolerance) gradient as this signifies an extremum. However, we also implement the convergence criteria used by Li et al. [2020]. Where instead of the gradient\u2019s norm the update direction\u2019s \\(L^\\infty\\)-norm is used. This provides two benefits: (1) it expresses the convergence criteria in the units of the variable (e.g., distance for elasticity) which (2) avoids applying small updates that lead to a marginal change in the variables. Note: this criterion has been well tested for nonlinear elasticity, but your mileage may vary for other formulations. </li> </ul> </li> </ul>"},{"location":"details/solvers/#newtons-method","title":"Newton\u2019s Method","text":"<p>A (projected) Newton\u2019s method with line search.</p>"},{"location":"details/solvers/#l-bfgs","title":"L-BFGS","text":"<p>A quasi-Newton method, L-BFGS requires more iterations than the full Newton\u2019s method but avoids expensive linear solves.</p> <p>Reference: https://en.wikipedia.org/wiki/Limited-memory_BFGS Acknowledgments: The L-BFGS solver is implemented using the LBFGS++ library.</p>"},{"location":"details/solvers/#line-search","title":"Line Search","text":"<p>Todo</p> <p>Describe line-search and its purpose.</p>"},{"location":"details/solvers/#backtracking","title":"Backtracking","text":"<p>Todo</p> <p>Describe this method and its parameters.</p>"},{"location":"details/solvers/#armijo","title":"Armijo","text":"<p>Todo</p> <p>Describe this method and its parameters.</p>"},{"location":"details/solvers/#armijo-alt","title":"Armijo (alt)","text":"<p>Todo</p> <p>Describe this method and its parameters.</p>"},{"location":"details/solvers/#more-thuente","title":"More-Thuente","text":"<p>Todo</p> <p>Describe this method and its parameters.</p>"},{"location":"details/time_integrators/","title":"Time Integrators","text":""},{"location":"details/time_integrators/#implicit-euler","title":"Implicit Euler","text":"<ul> <li>Parameters: None</li> <li>Description:</li> </ul> \\[\\begin{align} \\dot{u}^{t+1} &amp;= \\dot{u}^t + h \\ddot{u}^{t+1}\\\\ u^{t+1} &amp;= u^t + h \\dot{u}^{t+1} \\end{align}\\] <p>where \\(h\\) is the time step size.</p> <ul> <li>Reference: https://en.wikipedia.org/wiki/Backward_Euler_method</li> </ul>"},{"location":"details/time_integrators/#implicit-newmark","title":"Implicit Newmark","text":"<ul> <li>Parameters: <code>beta</code>, <code>gamma</code></li> <li>Description:</li> </ul> \\[\\begin{align} \\dot{u}^{t+1} &amp;= \\dot{u}^t + (1-\\gamma)h\\ddot{u}^t + \\gamma h\\ddot{u}^{t+1}\\\\ u^{t+1} &amp;= u^t + h\\dot{u}^t + \\tfrac{h^2}{2}((1-2\\beta)\\ddot{u}^t + 2\\beta\\ddot{u}^{t+1}) \\end{align}\\] <p>where \\(h\\) is the time step size and by default \\(\\gamma = 0.5\\) and \\(\\beta = 0.25\\).</p> <ul> <li>Reference: https://en.wikipedia.org/wiki/Newmark-beta_method</li> </ul> <p>Note</p> <p>This is equivalent to the Trapezoidal rule for \\(\\gamma = 0.5\\) and \\(\\beta = 0.25\\).</p>"},{"location":"details/time_integrators/#backward-differentiation-formula-bdf","title":"Backward Differentiation Formula (BDF)","text":"<ul> <li>Parameters: <code>num_steps</code></li> <li>Description: </li> </ul> \\[\\begin{align} \\dot{u}^{t+1} &amp;= (\\sum_{i=0}^{n-1} \\alpha_i \\dot{u}^{t-i}) + h\\beta\\ddot{u}^{t+1}\\\\ u^{t+1} &amp;= (\\sum_{i=0}^{n-1} \\alpha_i u^{t-i}) + h\\beta\\dot{u}^{t+1} \\end{align}\\] <p>where \\(h\\) is the time step size, the coefficients \\(\\alpha_i\\) and \\(\\beta\\) are choosen to make the method \\(n\\)-th order accurate, and \\(n \\in \\{1, \\ldots, 6\\}\\) is the number of previous steps to consider (default: <code>num_steps=1</code>). This is equivalent to implicit Euler for \\(n=1\\). To initialize the values for \\(i &gt; 0\\), the method starts from \\(n=1\\) and successively builds the history, increasing \\(n\\) by 1 until the \\(n\\)-th step. However, we know this can result in less than order \\(n\\) accuracy [Nishikawa 2019].</p> <ul> <li>Reference: https://en.wikipedia.org/wiki/Backward_differentiation_formula</li> </ul>"},{"location":"tools/exporter/","title":"Exporter","text":"In\u00a0[\u00a0]: Copied! <pre>import pydoc\nimport polyfempy\nimport re\nimport queue\nimport tempfile\n</pre> import pydoc import polyfempy import re import queue import tempfile In\u00a0[\u00a0]: Copied! <pre>packages = queue.Queue()\npackages.put(\"polyfempy\")\n</pre> packages = queue.Queue() packages.put(\"polyfempy\") In\u00a0[\u00a0]: Copied! <pre>docs = \"\"\n</pre> docs = \"\" In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>while not packages.empty():\n\tpackage = packages.get()\n\n\twith tempfile.NamedTemporaryFile(suffix=\".md\") as tmp_file:\n\t\twith open(tmp_file.name, \"w\") as f:\n\t\t\tpydoc.doc(package,output=f)\n\n\t\twith open(tmp_file.name, \"r\") as f:\n\t\t\tlines = f.read()\n\n\tif \"PACKAGE CONTENTS\" in lines:\n\t\tprocess = False\n\n\t\tfor line in iter(lines.splitlines()):\n\t\t\tline = line.strip()\n\n\t\t\tif \"PACKAGE CONTENTS\" in line:\n\t\t\t\tprocess = True\n\t\t\t\tcontinue\n\n\t\t\tif \"FILE\" in line:\n\t\t\t\tbreak\n\n\t\t\tif not process:\n\t\t\t\tcontinue\n\t\t\tif len(line) &lt;= 0:\n\t\t\t\tcontinue\n\n\t\t\tpackages.put(package + \".\" + line)\n\n\t\tcontinue\n\tif \"CLASSES\" in lines:\n\t\tprocess = False\n\n\n\t\tfor line in iter(lines.splitlines()):\n\t\t\tline = line.strip()\n\n\t\t\tif \"CLASSES\" in line:\n\t\t\t\tprocess = True\n\t\t\t\tcontinue\n\n\t\t\tif \"FILE\" in line:\n\t\t\t\tbreak\n\n\t\t\tif not process:\n\t\t\t\tcontinue\n\t\t\tif len(line) &lt;= 0:\n\t\t\t\tcontinue\n\n\t\t\tif \"class \" in line:\n\t\t\t\tbreak\n\t\t\tif \"builtins.object\" in line:\n\t\t\t\tcontinue\n\n\t\t\tpackages.put(package + \".\" + line)\n\n\t\tcontinue\n\n\tlines = lines.replace(\"pybind11_builtins.pybind11_object\", \"\")\n\tlines = lines.replace(\"builtins.object\", \"\")\n\tlines = lines.replace(\"|\", \"\")\n\tlines = lines.replace(\"class \", \"## class \")\n\tlines = lines.replace(\"self: polyfempy.polyfempy.Solver, \", \"\")\n\tlines = lines.replace(\"self: polyfempy.polyfempy.Solver\", \"\")\n\tlines = lines.replace(\"self, \", \"\")\n\tlines = lines.replace(\"self\", \"\")\n\tlines = lines.replace(\" -&gt; None\", \"\")\n\tlines = lines.replace(\"[float64[m, n]]\", \"\")\n\tlines = lines.replace(\"[int32[m, n]]\", \"\")\n\tlines = lines.replace(\"numpy.ndarray\", \"array\")\n\n\ttmp = \"\"\n\n\tskipping = False\n\tnext_mark = False\n\tskip_next = False\n\n\tfor line in iter(lines.splitlines()):\n\t\tline = line.strip()\n\n\t\tif skip_next:\n\t\t\tskip_next = False\n\t\t\tcontinue\n\t\tif len(line) &lt;= 0:\n\t\t\tcontinue\n\n\t\tif \"Python Library Documentation\" in line:\n\t\t\tcontinue\n\n\t\tif \"Methods inherited\" in line:\n\t\t\tcontinue\n\n\t\tif \"Overloaded function.\" in line:\n\t\t\tcontinue\n\n\t\tif \"Method resolution order\" in line:\n\t\t\tskipping = True\n\n\t\tif \"Methods defined here\" in line:\n\t\t\tskipping = False\n\t\t\tcontinue\n\n\t\tif \"Data and other attributes defi\" in line:\n\t\t\tcontinue\n\n\t\tif \"Data descriptors defined\" in line:\n\t\t\tcontinue\n\n\t\tif \"-----------------------------\" in line:\n\t\t\tcontinue\n\n\t\tif \"__init__\" not in line and re.match(r\"__\\w+\", line):\n\t\t\tskip_next = True\n\t\t\tcontinue\n\t\tif \"params()\" in line or \"get_pde(pde)\" in line or \"get_problem(problem)\" in line or \"get_problem()\" in line or \"name()\" in line or \"__init__()\" in line or \"__init__(/, *args, **kwargs)\" in line:\n\t\t\tskip_next = True\n\t\t\tcontinue\n\n\t\tif skipping:\n\t\t\tcontinue\n\n\t\tif re.match(r'\\w+\\(\\.\\.\\.\\)', line):\n\t\t\tnext_mark = True\n\t\t\tcontinue\n\n\t\tif \"class\" in line:\n\t\t\tline = line.replace(\"()\", \"\")\n\n\t\tif re.match(r\"\\d\\. .+\", line):\n\t\t\tline = re.sub(r\"\\d\\. \", \"\", line)\n\t\t\tline.strip()\n\t\t\tnext_mark = True\n\n\t\tif next_mark or re.match(r'\\w+\\(.*\\)', line):\n\t\t\tnext_mark = False\n\t\t\txxx = line\n\t\t\tif \"__init__\" in line:\n\t\t\t\tline = line.replace(\"__init__\", \"init\")\n\t\t\tline = \"### \" + line[0:line.find('(')] +\"\\n\"\n\t\t\tline += \"`\" + xxx + \"`\"\n\n\t\tif \"## class \" in line:\n\t\t\tline = line.replace(package + \" = \", \"\")\n\n\t\ttmp += line + \"\\n\\n\"\n\n\tdocs += tmp + \"\\n\\n\\n\"\n\t# break\n</pre> while not packages.empty(): \tpackage = packages.get()  \twith tempfile.NamedTemporaryFile(suffix=\".md\") as tmp_file: \t\twith open(tmp_file.name, \"w\") as f: \t\t\tpydoc.doc(package,output=f)  \t\twith open(tmp_file.name, \"r\") as f: \t\t\tlines = f.read()  \tif \"PACKAGE CONTENTS\" in lines: \t\tprocess = False  \t\tfor line in iter(lines.splitlines()): \t\t\tline = line.strip()  \t\t\tif \"PACKAGE CONTENTS\" in line: \t\t\t\tprocess = True \t\t\t\tcontinue  \t\t\tif \"FILE\" in line: \t\t\t\tbreak  \t\t\tif not process: \t\t\t\tcontinue \t\t\tif len(line) &lt;= 0: \t\t\t\tcontinue  \t\t\tpackages.put(package + \".\" + line)  \t\tcontinue \tif \"CLASSES\" in lines: \t\tprocess = False   \t\tfor line in iter(lines.splitlines()): \t\t\tline = line.strip()  \t\t\tif \"CLASSES\" in line: \t\t\t\tprocess = True \t\t\t\tcontinue  \t\t\tif \"FILE\" in line: \t\t\t\tbreak  \t\t\tif not process: \t\t\t\tcontinue \t\t\tif len(line) &lt;= 0: \t\t\t\tcontinue  \t\t\tif \"class \" in line: \t\t\t\tbreak \t\t\tif \"builtins.object\" in line: \t\t\t\tcontinue  \t\t\tpackages.put(package + \".\" + line)  \t\tcontinue  \tlines = lines.replace(\"pybind11_builtins.pybind11_object\", \"\") \tlines = lines.replace(\"builtins.object\", \"\") \tlines = lines.replace(\"|\", \"\") \tlines = lines.replace(\"class \", \"## class \") \tlines = lines.replace(\"self: polyfempy.polyfempy.Solver, \", \"\") \tlines = lines.replace(\"self: polyfempy.polyfempy.Solver\", \"\") \tlines = lines.replace(\"self, \", \"\") \tlines = lines.replace(\"self\", \"\") \tlines = lines.replace(\" -&gt; None\", \"\") \tlines = lines.replace(\"[float64[m, n]]\", \"\") \tlines = lines.replace(\"[int32[m, n]]\", \"\") \tlines = lines.replace(\"numpy.ndarray\", \"array\")  \ttmp = \"\"  \tskipping = False \tnext_mark = False \tskip_next = False  \tfor line in iter(lines.splitlines()): \t\tline = line.strip()  \t\tif skip_next: \t\t\tskip_next = False \t\t\tcontinue \t\tif len(line) &lt;= 0: \t\t\tcontinue  \t\tif \"Python Library Documentation\" in line: \t\t\tcontinue  \t\tif \"Methods inherited\" in line: \t\t\tcontinue  \t\tif \"Overloaded function.\" in line: \t\t\tcontinue  \t\tif \"Method resolution order\" in line: \t\t\tskipping = True  \t\tif \"Methods defined here\" in line: \t\t\tskipping = False \t\t\tcontinue  \t\tif \"Data and other attributes defi\" in line: \t\t\tcontinue  \t\tif \"Data descriptors defined\" in line: \t\t\tcontinue  \t\tif \"-----------------------------\" in line: \t\t\tcontinue  \t\tif \"__init__\" not in line and re.match(r\"__\\w+\", line): \t\t\tskip_next = True \t\t\tcontinue \t\tif \"params()\" in line or \"get_pde(pde)\" in line or \"get_problem(problem)\" in line or \"get_problem()\" in line or \"name()\" in line or \"__init__()\" in line or \"__init__(/, *args, **kwargs)\" in line: \t\t\tskip_next = True \t\t\tcontinue  \t\tif skipping: \t\t\tcontinue  \t\tif re.match(r'\\w+\\(\\.\\.\\.\\)', line): \t\t\tnext_mark = True \t\t\tcontinue  \t\tif \"class\" in line: \t\t\tline = line.replace(\"()\", \"\")  \t\tif re.match(r\"\\d\\. .+\", line): \t\t\tline = re.sub(r\"\\d\\. \", \"\", line) \t\t\tline.strip() \t\t\tnext_mark = True  \t\tif next_mark or re.match(r'\\w+\\(.*\\)', line): \t\t\tnext_mark = False \t\t\txxx = line \t\t\tif \"__init__\" in line: \t\t\t\tline = line.replace(\"__init__\", \"init\") \t\t\tline = \"### \" + line[0:line.find('(')] +\"\\n\" \t\t\tline += \"`\" + xxx + \"`\"  \t\tif \"## class \" in line: \t\t\tline = line.replace(package + \" = \", \"\")  \t\ttmp += line + \"\\n\\n\"  \tdocs += tmp + \"\\n\\n\\n\" \t# break In\u00a0[\u00a0]: Copied! <pre>with open(\"polyfempy_doc.md\", \"w\") as f:\n\tf.write(docs)\n</pre> with open(\"polyfempy_doc.md\", \"w\") as f: \tf.write(docs)"},{"location":"tools/plot_to_md/","title":"Plot to md","text":"In\u00a0[\u00a0]: Copied! <pre>import meshplot\n</pre> import meshplot In\u00a0[\u00a0]: Copied! <pre>first = True\nmeshplot.website()\n</pre> first = True meshplot.website() In\u00a0[\u00a0]: Copied! <pre>def mp_to_md(self):\n    global first\n    if first:\n        first = False\n        res = self.to_html(imports=True, html_frame=False)\n    else:\n        res = self.to_html(imports=False, html_frame=False)\n\n    return res\n</pre> def mp_to_md(self):     global first     if first:         first = False         res = self.to_html(imports=True, html_frame=False)     else:         res = self.to_html(imports=False, html_frame=False)      return res In\u00a0[\u00a0]: Copied! <pre>get_ipython().display_formatter.formatters[\"text/html\"].for_type(meshplot.Viewer, mp_to_md)\n</pre> get_ipython().display_formatter.formatters[\"text/html\"].for_type(meshplot.Viewer, mp_to_md)"},{"location":"tutorials/getting_started/","title":"Getting Started","text":""},{"location":"tutorials/getting_started/#a-first-example-solving-the-laplacian-on-a-plate-hole-mesh","title":"A First-Example: Solving the Laplacian on a Plate-Hole Mesh","text":"<p>Here you can find the plate with hole mesh used in this tutorial.</p> Mesh Solution <p>To setup and run this simulation create a JSON file (for example, <code>run.json</code>) containing the following:</p> <pre><code>{\n\"geometry\": {\n\"advanced\": {\n\"normalize_mesh\": true\n},\n\"mesh\": \"plate_hole.obj\",\n\"surface_selection\": {\n\"threshold\": 1e-07\n}\n},\n\n\"materials\": {\n\"type\": \"Laplacian\"\n},\n\n\"output\": {\n\"json\": \"stats.json\",\n\"paraview\": {\n\"file_name\": \"&lt;result.vtu&gt;\"\n}\n},\n\n\"preset_problem\": {\n\"type\": \"Franke\"\n},\n\n\"solver\": {\n\"linear\": {\n\"solver\": \"Eigen::SparseLU\"\n}\n}\n}\n</code></pre> <p>Then run <code>PolyFEM_bin --json run.json</code>.</p> <p>Refer to the JSON API for a the full description of JSON parameters.</p>"},{"location":"tutorials/getting_started/#boundary-conditions","title":"Boundary Conditions","text":"<p>PolyFEM uses boundary tags to mark boundary primitives (edges in 2D and faces in 3D). By default:</p> <ul> <li>in 2D all edges whose barycenter is close up to 1e-7 to the left side of the bounding box get the tag 1, the right side gets 3, bottom 2, and top 4. Any other boundary gets 7.</li> <li>in 3D the threshold is a bit larger (1e-2) and x-direction gets 1, 3, y-direction gets 2, 4, and z-direction gets 5, 6. Any other boundary gets 7.</li> </ul> <p>You can also specify a file containing a list of integers per each edge/face of the mesh indicating the tag in the JSON.</p> <p>If you want to run the real plate-with-hole problem, set the correct Lam\u00e9 constants in <code>\"materials\"</code>, and specify the proper boundary conditions in <code>\"boundary_conditions\"</code>. For this example, we want Neumann boundary condition of <code>[100, 0]</code> (a force of 100 in \\(x\\)) applied to the whole right side (pulling), so in the <code>\"neumann_boundary\"</code> array of <code>\"boundary_conditions\"</code>, we add an entry with <code>\"id\": 3</code> and <code>\"value\": [100, 0]</code>. For the two Dirichlet, it is a bit more complicated because we want reflective boundary conditions, that is we want to fix only one of the two coordinates. For instance, the right part of the mesh (<code>\"id\": 1</code>) needs to be fixed in \\(x\\) (or equivalent can move only in \\(y\\)-direction). To do so we add an entry to the <code>\"dirichlet_boundary\"</code> array with <code>\"id\": 1</code> and <code>\"value\": [0, 0]</code>, that is zero displacements, and specify which <code>\"dimension\"</code> these boundaries need to be applied, in this case, only the \\(x\\)-direction so <code>\"dimension\"</code> gets the value <code>[true, false]</code>. Similarly, the top part (<code>\"id\": 4</code>) gets <code>\"dimension\": [false, true]</code>.</p> <pre><code>{\n\"materials\": {\n\"type\": \"LinearElasticity\",\n\"E\": 210000,\n\"nu\": 0.3\n},\n\n\"boundary_conditions\": {\n\"neumann_boundary\": [{\n\"id\": 3,\n\"value\": [100, 0]\n}],\n\n\"dirichlet_boundary\": [{\n\"id\": 1,\n\"value\": [0.0, 0.0],\n\"dimension\": [true, false]\n}, {\n\"id\": 4,\n\"dimension\": [false, true],\n\"value\": [0.0, 0.0]\n}]\n}\n}\n</code></pre>"},{"location":"tutorials/getting_started/#spatially-varying-boundary-conditions","title":"Spatially Varying Boundary Conditions","text":"<p>The specified value for boundary conditions can also contain expressions as strings depending on <code>x</code>,<code>y</code>, and <code>z</code>. PolyFEM will evaluate these expressions on the edge/face. For this, we use the TinyExpr library.</p> <p>In addition to TinyExpr\u2019s built-in functions, we define some useful utility functions including:</p> <ul> <li><code>min(a, b)</code>: minimum of two values</li> <li><code>max(a, b)</code>: maximum of two values</li> <li><code>if(cond, a, b)</code>: if <code>cond</code> \\(\\ge\\) 0, return <code>a</code>, otherwise return <code>b</code></li> <li><code>sign(x)</code>: 1 if \\(x &gt; 0\\), 0 if \\(x == 0\\), and -1 if \\(x &lt; 0\\)</li> <li><code>deg2rad(d)</code>: convert degrees to radians</li> <li><code>rotate_2D_x(x, y, theta)</code>: given a value for <code>x</code>, <code>y</code>, and <code>theta</code>, compute the x component of a 2D rotation of <code>theta</code> radians<ul> <li>definition: \\(x\\cos(\\theta) - y\\sin(\\theta)\\)</li> </ul> </li> <li><code>rotate_2D_y(x, y, theta)</code>: given a value for <code>x</code>, <code>y</code>, and <code>theta</code>, compute the y component of a 2D rotation of <code>theta</code> radians<ul> <li>definition: \\(x\\sin(\\theta) + y\\cos(\\theta)\\)</li> </ul> </li> <li><code>smooth_abs(x, k)</code>: a smooth approximation to <code>abs(x)</code><ul> <li>definition: \\(\\tanh(kx)x\\)</li> </ul> </li> </ul>"},{"location":"tutorials/getting_started/#bc-setter-app","title":"BC Setter App","text":"<p>Since creating the file with association from boundary to ID is complicated, we also provide an application <code>bc_setter</code> to interactively color faces of 3D meshes (or edges of 2D meshes) and associate tags.</p> <p>By shift-clicking you can color coplanar faces to assign an ID (command or control-click colors only one face). The UI also allows specifying the three values (for scalar problem only one) to assign to that boundary condition and choose between Dirichlet and Neumann.</p> <p>On save, it will produce the <code>.txt</code> file with the tags to be used in the <code>\"surface_selection\"</code> JSON field and a JSON file to set the <code>\"boundary_conditions\"</code>.</p> <p></p>"},{"location":"tutorials/getting_started/#time-dependent-simulation","title":"Time-Dependent Simulation","text":"<p>To enable time-dependent simulation add <pre><code>\"time\": {\n\"tend\": 1,\n\"dt\": 0.1\n}\n</code></pre> to the root of the JSON. The duration of the simulation is specified as <code>\"tend\"</code> and the number of time steps can either be set directly using <code>\"time_steps\"</code> or by specifying the time step size <code>\"dt\"</code> (<code>\"dt\"</code> has priority over <code>\"time_steps\"</code>).</p> <p>You can also specify the time integration method using <pre><code>\"time\": {\n\"integrator\": \"ImplicitEuler\"\n}\n</code></pre> By default it uses <code>\"ImplicitEuler\"</code>, and a complete list of options can be found here along with details about other time parameters.</p> <p>When doing time-dependent simulation PolyFEM will generate a sequence of VTU files (one file per time step) and a PVD file of the animation that can be directly viewed in ParaView. You can change the name of this PVD file</p>"},{"location":"tutorials/getting_started/#time-dependent-boundary-conditions","title":"Time-Dependent Boundary Conditions","text":"<p>Enabling time-dependent simulation also enables the ability to use the current time to design time-dependent boundary conditions. To define time-dependent boundary conditions you can use the variable <code>t</code> in an expression value. For example, <pre><code>\"dirichlet_boundary\": [{\n\"id\": 1,\n\"value\": [\"t\", 0, 0]\n}]\n</code></pre> defines a boundary condition that linearly increases in the x component as time progresses. An example use case for this would be in an elasticity problem to move the boundary over time (remember in this case the value expresses the displacement, not the position).</p>"},{"location":"tutorials/getting_started/#selections-multi-material-and-collisions","title":"Selections, Multi-material, and Collisions","text":"<p>PolyFEM supports multi-material and contact.</p> <p>For example, here we show how to simulate a sphere of radius 0.5 m centered at \\([0,1,0]\\) with material \\(E=10^8, \\nu=0.4, \\rho=2000\\) falling on thin soft mat (\\(E=10^6, \\nu=0.4, \\rho=1000\\)) we need to set the body id.</p> <p>First, we need to specify the geometry and assign ids to the surface and volume. To do this add this to the main JSON file:</p> <pre><code>\"geometry\": [{\n\"mesh\": \"../../../meshes/3D/simple/sphere/sphere1K.msh\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"../../../meshes/3D/simple/mat/mat40x40.msh\",\n\"transformation\": {\n\"scale\": 2\n},\n\"volume_selection\": 2,\n\"surface_selection\": [{\n\"id\": 1,\n\"axis\": \"-x\",\n\"position\": -1\n}, {\n\"id\": 2,\n\"axis\": \"x\",\n\"position\": 1\n}]\n}],\n</code></pre> <p>The sphere will be given a volume ID of 1 and the mat will get ID 2. An axis-plane selection is used can be used to set the surface IDs. Here the faces with a barycenter left of \\(x=-1\\) are given a surface ID of 1 and the faces with barycenters right of \\(x=1\\) will be given an ID of 2.</p> <p>Next, we need to associate materials and boundary conditions with these IDs. We set the boundary conditions by adding the following to the JSON: <pre><code>\"materials\": [{\n\"id\": 1,\n\"E\": 1e8,\n\"nu\": 0.4,\n\"rho\": 2000,\n\"type\": \"NeoHookean\"\n}, {\n\"id\": 2,\n\"E\": 1e6,\n\"nu\": 0.4,\n\"rho\": 1000,\n\"type\": \"NeoHookean\"\n}]\n</code></pre> This sets the sphere to a stiff NeoHooean material (\\(E=10^8, \\nu=0.4, \\rho=2000\\)) and the mat to a softer NeoHookean material (\\(E=10^6, \\nu=0.4, \\rho=1000\\)).</p> <p>We specify boundary conditions and <code>\"rhs\"</code> (for the gravity) as: <pre><code>\"boundary_conditions\": {\n\"rhs\": [0, 9.81, 0],\n\"dirichlet_boundary\": [{\n\"id\": 1,\n\"value\": [\"-min(t,0.28)\", 0, 0]\n}, {\n\"id\": 2,\n\"value\": [\"min(t,0.28)\", 0, 0]\n}]\n}\n</code></pre> Here the mat is given a Dirichlet boundary condition for the left selection to stretch it to the left and the right selection to stretch it to the right.</p> <p>Since this is a contact problem we need to enable collision, no other thing is needed: <code>\"contact\": {\"enabled\": true}</code>, and run the simulation (the complete JSON script can be found here).</p> <p>The final results look like these where we sliced the scene in half to show the internal stresses. </p>"},{"location":"tutorials/getting_started/#output","title":"Output","text":"<p>The simulation results will be output as a VTU file or a sequence of VTU files and a PVD file for the time sequence.</p>"},{"location":"tutorials/getting_started/#visualizing-results-using-paraview","title":"Visualizing Results using ParaView","text":"<p>Here are some tips for working with the output in ParaView.</p> <p></p> <ol> <li>Warp: if the solution is displacements, apply the displacements to the rest mesh</li> <li>Filter: filter elements by a field (here by <code>body_ids</code> to set the opacity of the box separately from the Octocat)</li> <li>Apply settings: apply the setting changes (there is a ParaView setting to automatically do this)</li> <li>Play: play the time sequence</li> <li>Input fields: select the field to visualize</li> <li>Rescale over all timesteps: rescale the colors to fit the range of all values over time</li> </ol>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/","title":"IPC Quick Start Guide","text":"Author: Zachary Ferguson <p>Note</p> <p>This is a retelling of the original IPC Quick Start Guide from the original IPC codebase.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#setup","title":"Setup","text":"<p>The first step is to clone and build PolyFEM (see here for instructions). This will create the <code>PolyFEM_bin</code> executable that we will use to run the examples. To run an example you can use the following command:</p> <pre><code>./PolyFEM_bin -j &lt;path/to/example.json&gt; -o &lt;path/to/output/dir&gt;\n</code></pre> <p>You can also use the <code>--help</code> flag to see all the available options.</p> <p>All files used in this tutorial can be found here.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#ipc-default-parameters","title":"IPC Default Parameters","text":"<p>Since many of the default parameters in PolyFEM differ from those in the original IPC codebase, we provide a JSON file <code>ipc-defaults.json</code> which maps the default parameter values from IPC to their equivalent parameters in PolyFEM. This file is then included in all the example JSON files using <code>\"common\": \"ipc-defaults.json\"</code>.</p> <p>Todo</p> <p>Describe what each of the default parameters controls.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#hello-world","title":"Hello, World!","text":"<p>Let us start with a \u201cHello, World!\u201d example of two cubes falling onto a ground plane.</p> <p>The input JSON for this scene can be found at <code>2-cubes-falling.json</code>. To run this example, use the following command:</p> <pre><code>./PolyFEM_bin -j 2-cubes-falling.json -o 2-cubes-falling\n</code></pre> <p>This will create a directory <code>2-cubes-falling</code> with the following files:</p> <pre><code>$ ls 2-cubes-falling\nsim.pvd step_0.vtm step_0.vtu [...] step_200.vtm step_200.vtu\n</code></pre> <p>We can open the PVD file using ParaView and play the animation to visualize the simulation:</p> <p>Tip</p> <p>In ParaView, make sure to press the WarpByVector  button to see the deformed animation. Otherwise, you will only see the undeformed rest mesh.</p> <p>Let\u2019s take a look at the input JSON file <code>2-cubes-falling.json</code>:</p> <pre><code>{\n\"common\": \"ipc-defaults.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"volume_selection\": 2\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}],\n\"contact\": {\n\"friction_coefficient\": 0.1\n}\n}\n</code></pre> <p>The config is simple:</p> <ul> <li><code>\"common\"</code>: this includes the default IPC parameters from the <code>ipc-defaults.json</code> file.</li> <li><code>\"geometry\"</code>: the geometry of the scene comprised of two cubes and a ground plane.<ul> <li><code>\"mesh\"</code>: the path to the mesh file (a tetrahedral mesh <code>cube.msh</code> for the cubes and a triangular mesh <code>plane.obj</code> for the ground plane).</li> <li><code>\"transformation\"</code>: transform the input mesh before running the simulation.<ul> <li><code>\"translation\"</code>: translate the first cube up by 3 units and the second cube up by 1 unit.</li> </ul> </li> <li><code>\"volume_selection\"</code>: assigns an ID to the volume (uniformly) which we will use later.</li> <li><code>\"is_obstacle\"</code>: specify that the ground plane is a static obstacle.<ul> <li>Obstacles are non-simulated geometries with prescribed displacements (here default to zero).</li> </ul> </li> </ul> </li> <li><code>\"contact\"</code>: parameters for the contact model<ul> <li><code>\"friction_coefficient\"</code>: coefficient of friction for all contacts.</li> </ul> </li> </ul>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#physical-materials-and-time-steppers","title":"Physical Materials and Time Steppers","text":"<p>Now let\u2019s make some changes to the hello world script to make the simulation more interesting.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#stiffer-material","title":"Stiffer Material","text":"<p>The default material parameters in <code>ipc-default.json</code> are:</p> <pre><code>\"materials\": {\n\"type\": \"NeoHookean\",\n\"E\": 1e5,\n\"nu\": 0.4,\n\"rho\": 1000\n}\n</code></pre> <p>This corresponds to a NeoHookean material with Young\u2019s modulus \\(E = 10^5~\\text{Pa}\\), Poisson\u2019s ratio \\(\\nu = 0.4\\), and density \\(\\rho = 1000~\\frac{\\text{kg}}{\\text{m}^3}\\).</p> <p>We can change these parameters for all objects in the scene by changing Young\u2019s modulus to \\(10^6~\\text{Pa}\\):</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"materials\": {\n\"E\": 1e6\n}\n}\n</code></pre> <p>Note</p> <p>Notice that we changed the <code>\"common\"</code> parameter to point to the starting example <code>2-cubes-falling.json</code>. This means our changes in this file will be applied on top of the changes in the starting example (which also are applied on top of the default parameters in <code>ipc-defaults.json</code>).</p> <p>This will make Young\u2019s modulus 10x larger than the default while keeping density and Poisson\u2019s ratio the same. Let\u2019s see what we get:</p> <p>Yes! The boxes are stiffer now.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#multiple-materials","title":"Multiple Materials","text":"<p>We can also set different materials for different objects:</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"materials\": [{\n\"id\": 1,\n\"type\": \"NeoHookean\",\n\"E\": 1e8,\n\"nu\": 0.4,\n\"rho\": 3000\n}, {\n\"id\": 2,\n\"type\": \"NeoHookean\",\n\"E\": 1e5,\n\"nu\": 0.4,\n\"rho\": 1000\n}]\n}\n</code></pre> <p>We replace our single <code>\"materials\"</code> object with a list of objects with <code>\"id\"</code> keys. These IDs correspond to the <code>\"volume_selection\"</code> from earlier. In general, <code>\"volume_selection\"</code> allows us to select a subset of the mesh\u2019s elements and assign a volume ID to them. In this case, we assign a uniform ID to all elements in the cube mesh. Where the first cube gets an ID of 1 and the second gets an ID of 2. We then use these volume IDs to assign different materials to each cube. The first cube gets a material that is 3\u00d7 heavier and 1000\u00d7 stiffer. While the second cube gets the original material.</p> <p>Here we rendered softer material with a light yellow color. As we see the top box is nearly rigid now and the bottom box deforms more. Even with this super stiff material PolyFEM stays robust and accurate.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#simulation-time-and-time-step-size","title":"Simulation Time and Time Step Size","text":"<p>Following the default in IPC, we have been simulating the scene for 5 seconds with a time step size of 0.025s, generating 200 frames.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#smaller-time-step-sizes","title":"Smaller Time Step Sizes","text":"<p>One option to get more energetic animation (while sticking with implicit Euler stepping \u2013 see also Newmark stepping below) is to apply smaller time step sizes to reduce the numerical damping of implicit Euler time integration:</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"time\": {\n\"dt\": 0.005\n}\n}\n</code></pre> <p>The <code>\"time\"</code> parameter here controls time step size <code>\"dt\": 0.005</code>, which results in a more energetic animation:</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#larger-time-step-sizes-nearly-quasi-static","title":"Larger Time Step Sizes (Nearly Quasi-Static)","text":"<p>One of the exciting features of IPC and PolyFEM is that it is robust enough to support extremely large time step sizes on the order of seconds with implicit Euler. In turn, this enables rapid solutions of equilibrium conditions subject to contact, friction and large deformation (via nearly quasi-static solves under numerical damping). For a simple demonstration, we can simulate our hello world example with \\(\\Delta t = 1~\\text{s}\\):</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"time\": {\n\"dt\": 1\n}\n}\n</code></pre> <p>The animation now is composed of only five frames, one for each second. As we see numerical damping is so large that the cubes are barely bouncing.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#initial-velocity","title":"Initial Velocity","text":"<p>To set nonzero initial velocities for objects, we need to specify them as <code>\"initial_conditions\"</code>.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#initial-linear-velocity","title":"Initial Linear Velocity","text":"<p>For example, we can set the initial velocity of the top cube to be \\(-20~\\frac{\\text{m}}{\\text{s}}\\) in the y direction:</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"initial_conditions\": {\n\"velocity\": [{\n\"id\": 1,\n\"value\": [0, -20, 0]\n}]\n}\n}\n</code></pre> <p>Again here we are using the volume IDs to select the top cube.</p> <p>Even for this high-speed impact scene, PolyFEM stays robust and accurate without numerical instabilities or explosions.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#initial-angular-velocity","title":"Initial Angular Velocity","text":"<p>Instead of using a constant value for the initial velocity, we can use a tiny expression dependent on the positions.</p> <p>We can specify an initial angular velocity by computing</p> \\[ \\begin{bmatrix}\\omega_x &amp; \\omega_y &amp; \\omega_z\\end{bmatrix} \\times \\begin{bmatrix}x &amp; y &amp; z\\end{bmatrix} \\] <p>where \\(\\omega_{\\{x, y, z\\}}\\) are the angular velocity in radians and \\(x\\), \\(y\\), and \\(z\\) are the positions to be evaluated at.</p> <p>Note</p> <p>This assumes the center of rotation is at the origin. If you want to rotate around a different point, you need to translate the positions to the origin first.</p> <p>For example, if we want to rotate the top cube 90 degrees/second around the y-axis, then we compute the initial velocity as</p> \\[ \\begin{bmatrix}0 &amp; \\frac{\\pi}{2} &amp; 0\\end{bmatrix} \\times \\begin{bmatrix}x &amp; y &amp; z\\end{bmatrix} = \\begin{bmatrix}\\frac{\\pi}{2}z &amp; 0 &amp; -\\frac{\\pi}{2}x\\end{bmatrix} \\] <p>In the JSON we encode this as a string containing the expression:</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"initial_conditions\": {\n\"velocity\": [{\n\"id\": 1,\n\"value\": [\"pi/2 * z\", 0, \"-pi/2 * x\"]\n}]\n}\n}\n</code></pre> <p>and voila now the top cube is spinning!</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#collision-obstacles","title":"Collision Obstacles","text":"<p>In many simulations we want to script the motion of certain objects, the best way to do this is to specify the object as an obstacle and then specify the prescribed displacement.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#translation","title":"Translation","text":"<p>To make the second code an obstacle all we need to do is set <code>\"is_obstacle\": true</code>. Then we can specify the displacement of this obstacle using the <code>\"boundary_conditions/obstacle_displacements\"</code> field:</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"surface_selection\": 1,\n\"is_obstacle\": true\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}],\n\"boundary_conditions\": {\n\"obstacle_displacements\": [{\n\"id\": 1,\n\"value\": [\"t\", \"t\", \"t\"]\n}]\n}\n}\n</code></pre> <p>Notice that we changed the <code>\"volume_selection\"</code> to <code>\"surface_selection\"</code> because we need to identify the surface on which the boundary conditions apply.</p> <p>We set the obstacle\u2019s displacement to <code>[\"t\", \"t\", \"t\"]</code> which means the obstacle will translate with a velocity of \\([1, 1, 1]\\) m/s.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#rotation","title":"Rotation","text":"<p>Making the second cube rotate is a bit trickier. We can compute the displacement in Euler\u2019s angle representation as</p> \\[ \\begin{bmatrix} \\Delta{x} \\\\ \\Delta{y} \\\\ \\Delta{z} \\end{bmatrix} = R_x(\\omega_x t) R_y(\\omega_y t) R_z(\\omega_z t) \\left( \\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix} - \\begin{bmatrix} c_x \\\\ c_y \\\\ c_z \\end{bmatrix} \\right) + \\begin{bmatrix} c_x \\\\ c_y \\\\ c_z \\end{bmatrix} - \\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix} \\] <p>where \\(\\Delta\\{x,y,z\\}\\) are the obstacle displacement, \\(\\omega_{\\{x,y,z\\}}\\) are the angular velocities, \\(c_{\\{x,y,z\\}}\\) is the center of rotation, \\(R_{\\{x,y,z\\}}\\) are the axis-aligned rotation matrices, and \\(x\\), \\(y\\), and \\(z\\) are the positions to be evaluated at. Computing this by hand can be annoying, so instead, you can use this Python notebook to compute the expression.</p> <p>As an example, here we kinematically rotate the second cube with an angular velocity of \\([10, 90, 0]\\) degrees/second:</p> <pre><code>{\n\"common\": \"translating-obstacle.json\",\n\"boundary_conditions\": {\n\"obstacle_displacements\": [{\n\"id\": 1,\n\"value\": [\n\"x*cos(pi*t/2) - x + z*sin(pi*t/2)\",\n\"x*sin(pi*t/18)*sin(pi*t/2) - y - z*sin(pi*t/18)*cos(pi*t/2) + (y - 1)*cos(pi*t/18) + 1\",\n\"-x*sin(pi*t/2)*cos(pi*t/18) + z*cos(pi*t/18)*cos(pi*t/2) - z + (y - 1)*sin(pi*t/18)\"\n]\n}]\n}\n}\n</code></pre> <p>Here we render obstacles in grey.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#codimensional-collisions","title":"Codimensional Collisions","text":"<p>IPC contact handling is based on distances and so directly supports codimensional (surfaces, edges, points) kinematic collision obstacles!</p> <p>Note</p> <p>Currently, PolyFEM does not yet include simulated codimensional materials like shells or rods.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#closed-surface","title":"Closed Surface","text":"<p>If we script the motion of an object, then for a closed surface the interior tessellation is unnecessary, and we can directly use a surface mesh (<code>.obj</code> file)!</p> <pre><code>{\n\"common\": \"rotating-obstacle.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"cube.obj\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"surface_selection\": 1,\n\"is_obstacle\": true\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}]\n}\n</code></pre> <p>This is equivalent to using a volumetric mesh because PolyFEM automatically extracts and uses the surface for obstacles.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#open-surface","title":"Open Surface","text":"<p>This script replaces the cube with a single triangle (zero volume):</p> <pre><code>{\n\"common\": \"rotating-obstacle.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"triangle.obj\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"surface_selection\": 1,\n\"is_obstacle\": true\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}]\n}\n</code></pre>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#edges","title":"Edges","text":"<p>This script uses the same single triangle but only with its edges. Here we also scale the triangle 2\u00d7 larger to let the box fall through.</p> <pre><code>{\n\"common\": \"rotating-obstacle.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"triangle.obj\",\n\"transformation\": {\n\"translation\": [0, 1, 0],\n\"scale\": 2\n},\n\"surface_selection\": 1,\n\"is_obstacle\": true,\n\"extract\": \"edges\"\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}]\n}\n</code></pre> <p>The <code>\"extract\": \"edges\"</code> specifies that only the edges of the triangle mesh should be used.</p> <p>Note</p> <p>Alternatively, you can load an edge mesh directly by specifying an <code>.obj</code> file with line elements. For example, this is the same edge mesh in OBJ format: <pre><code>v -0.5 0 -0.5\nv  0.5 0 -0.5\nv -0.5 0  0.5\nl 1 3\nl 3 2\nl 2 1\n</code></pre></p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#points","title":"Points","text":"<p>Even crazier, this script uses the same single triangle but only with its points. Here we also scale the point cloud 0.7\u00d7 smaller to let the box hit the points.</p> <pre><code>{\n\"common\": \"rotating-obstacle.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"triangle.obj\",\n\"transformation\": {\n\"translation\": [0, 1, 0],\n\"scale\": 0.7\n},\n\"surface_selection\": 1,\n\"is_obstacle\": true,\n\"extract\": \"points\"\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}]\n}\n</code></pre> <p>We use the <code>\"extract\": \"points\"</code> to only use the points of the triangle.</p> <p>Note</p> <p>Alternatively, you can load a point cloud directly by specifying an <code>.obj</code> file with no triangles or edges. For example, this is the same point cloud in OBJ format: <pre><code>v -0.5 0 -0.5\nv  0.5 0 -0.5\nv -0.5 0  0.5\n</code></pre></p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#boundary-conditions","title":"Boundary Conditions","text":""},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#selection","title":"Selection","text":"<p>Similar to how we apply material, to apply boundary conditions we first need to select which nodes to which to apply the boundary conditions using the <code>\"point_selection\"</code> mesh field. Then, we can specify the boundary conditions in the <code>\"boundary_conditions\"</code> field.</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"volume_selection\": 2,\n\"point_selection\": [{\n\"id\": 1,\n\"box\": [\n[0, 0, 0],\n[0.1, 1, 0.1]\n],\n\"relative\": true\n}, {\n\"id\": 2,\n\"box\": [\n[0.9, 0, 0.9],\n[1, 1, 1]\n],\n\"relative\": true\n}]\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}],\n\"output\": {\n\"paraview\": {\n\"points\": true\n}\n}\n}\n</code></pre> <p>Let\u2019s break down the <code>\"point_selection\"</code> field. The first object <pre><code>\"id\": 1,\n\"box\": [\n[0, 0, 0],\n[0.1, 1, 0.1]\n],\n\"relative\": true\n</code></pre> specifies that we should assign an ID of <code>1</code> to the nodes in the back left of the mesh. The second object <pre><code>\"id\": 2,\n\"box\": [\n[0.9, 0, 0.9],\n[1, 1, 1]\n],\n\"relative\": true\n</code></pre> specifies that we should assign an ID of <code>2</code> to the nodes in the front right of the mesh.</p> <p>The <code>\"box\"</code> parameter specifies a bounding box by minimum and maximum corners in which points are selected. Notice the <code>\"relative\": true</code> field which indicates the box\u2019s coordinates are relative to the bounding box of the mesh. If we set <code>\"relative\": false</code> then the coordinates are in world space.</p> <p>Note</p> <p>For more information about how to setup boundary conditions (including the more ubiquitous surface selections) look here.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#dirichlet","title":"Dirichlet","text":"<p>For a simulated volumetric object, sometimes we script the motion of part of its vertices as Dirichlet boundary conditions. Using our point selections we can specify the boundary conditions as follows:</p> <pre><code>{\n\"common\": \"point-selection.json\",\n\"boundary_conditions\": {\n\"dirichlet_boundary\": [{\n\"id\": 1,\n\"value\": [\"-0.2 * t\", 0, \"-0.2 * t\"]\n}, {\n\"id\": 2,\n\"value\": [\"0.2 * t\", 0, \"0.2 * t\"]\n}]\n}\n}\n</code></pre> <p>The above script specifies that we should apply a displacement of \\([-0.2, 0, -0.2]\\) m/s to the nodes with ID <code>1</code> and a displacement of \\([0.2, 0, 0.2]\\) m/s to the nodes with ID <code>2</code>. The expressions in strings are evaluated using TinyExpr. You can find out more about these expressions here and here.</p> <p>Now let\u2019s see what we get:</p> <p>As we see PolyFEM is robust even when there is large deformation.</p> <p>What is different here from setting kinematic collision obstacles is that the unselected vertices are still degree-of-freedoms that are simulated. If one selects all vertices of an object by, for example, using a selection of <pre><code>\"point_selection\": 1\n</code></pre> and set them with Dirichlet boundary conditions, it will be essentially identical to a kinematic collision obstacle.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#neumann","title":"Neumann","text":"<p>Warning</p> <p>Nodal Neumann boundary conditions are not yet supported in PolyFEM, so we will setup a similar scene using surface selection.</p> <p>We can also add extra forces to part of the vertices of simulated volumetric objects in addition to gravity. This can be similarly realized by specifying the <code>\"neumann_boundary\"</code> like how we did for Dirichlet boundary conditions above:</p> <pre><code>{\n\"common\": \"point-selection.json\",\n\"geometry\": [{\n\"mesh\": \"cube-hex.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"cube-hex.msh\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"volume_selection\": 2,\n\"surface_selection\": 1\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}],\n\"boundary_conditions\": {\n\"neumann_boundary\": [{\n\"id\": 1,\n\"value\": [\n\"2.5e4 * sign(x) * max(0, sign(x * z))\",\n0,\n\"2.5e4 * sign(z) * max(0, sign(x * z))\"\n]\n}]\n},\n\"output\": {\n\"paraview\": {\n\"options\": {\n\"forces\": true\n}\n}\n}\n}\n</code></pre> <p>Similar to the configuration in our Dirichlet example, the above script applies an a force of \\([-2.5 \\times 10^4, 0, -2.5  \\times 10^4]\\) N to the vertices in the left-back and \\([2.5 \\times 10^4, 0, 2.5  \\times 10^4]\\) N to the vertices in the right-front:</p> <p>Note</p> <p>Here simulate a hexahedral mesh, but we use a linear triangular mesh for contact handling. Additionally, the rendering shows a triangulation of the hexahedral mesh\u2019s surface.</p> <p>Unlike Dirichlet boundary conditions, here the Neumann boundary condition does not restrict the vertical motion of the object, and it elongates the object only to a static state but not further.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#timed-boundary-conditions","title":"Timed Boundary Conditions","text":"<p>It is also possible to start and stop boundary conditions at a specific time. This can be done by utilizing tiny expressions:</p> <pre><code>{\n\"common\": \"point-selection.json\",\n\"boundary_conditions\": {\n\"dirichlet_boundary\": [{\n\"id\": 1,\n\"value\": [\"-0.2 * min(t, 2.5)\", 0, \"-0.2 * min(t, 2.5)\"]\n}, {\n\"id\": 2,\n\"value\": [\"0.2 * max(t - 2.5, 0)\", 0, \"0.2 * max(t - 2.5, 0)\"]\n}]\n}\n}\n</code></pre> <p>Here we apply a displacement of \\([-0.2, 0, -0.2]\\) m/s to the nodes with ID <code>1</code> from time \\(t=0\\) to \\(t=2.5\\) and a displacement of \\([0.2, 0, 0.2]\\) m/s to the nodes with ID <code>2</code> from time \\(t=2.5\\) to \\(t=\\infty\\). We can see this if we plot the x/z-displacement of the BC nodes:  where the red line is the displacement of the nodes with ID <code>1</code> and the blue line is the displacement of the nodes with ID <code>2</code>.</p> <p>Finally, let\u2019s see what we get:</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#advanced-settings","title":"Advanced Settings","text":""},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#input-mesh-sequence","title":"Input Mesh Sequence","text":"<p>The way of setting kinematic collision obstacles displacements described earlier is expressive but a bit verbose. To support more complex scripting of kinematic collision objects, PolyFEM allows the use of input mesh file sequences.</p> <p>For example, we can specify a folder path to the kinematic collision objects:</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 3, 0]\n},\n\"volume_selection\": 1\n}, {\n\"type\": \"mesh_sequence\",\n\"transformation\": {\n\"translation\": [-0.6666666667, 0, -0.6666666667]\n},\n\"mesh_sequence\": \"sequence\",\n\"fps\": 40,\n\"is_obstacle\": true\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}]\n}\n</code></pre> <p>In the specified folder <code>sequence</code> we provide the mesh files of the triangle wire in each frame as <code>*.obj</code>. Note that the input sequence must maintain the correct vertex correspondence to the one throughout the entire sequence.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#smaller-distance-initialization","title":"Smaller Distance Initialization","text":"<p>IPC requires a tiny positive gap as it does not support the 0-distance configurations.</p> <p>The following script sets the upper box in the hello world example right above the lower one:</p> <pre><code>{\n\"common\": \"2-cubes-falling.json\",\n\"geometry\": [{\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 2.001, 0]\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"cube.msh\",\n\"transformation\": {\n\"translation\": [0, 1, 0]\n},\n\"volume_selection\": 2\n}, {\n\"mesh\": \"plane.obj\",\n\"is_obstacle\": true\n}]\n}\n</code></pre> <p>Note the initial gap here is barely visible. In our experience we can set IPC\u2019s contact gap as small as practically needed; i.e., even small enough to fool the ray intersection checks in rendering algorithms.</p> <p>Similarly, no two objects can have 0-distance separation : ); even atoms are at distance from each other.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#newmark-time-integration","title":"Newmark Time-Integration","text":"<p>Along with implicit Euler, PolyFEM supports other time integration methods such as implicit Newmark time integration. Implicit Newmark can be applied for improved energy preservation and control. To change the time integrator we can simply set the time integration method.</p> <p>For example, the following script uses the <code>time/integrator</code> key to specify implicit Newmark (<code>\"ImplicitNewmark\"</code>) should be the time integrator for the stiffer boxes scene without friction. By default, <code>\"integrator\"</code> is set to <code>ImplicitEuler</code> (backward Euler).</p> <pre><code>{\n\"common\": \"stiffer.json\",\n\"time\": {\n\"dt\": 0.005,\n\"integrator\": \"ImplicitNewmark\"\n},\n\"contact\": {\n\"friction_coefficient\": 0\n}\n}\n</code></pre> <p>Damping can be useful both for predictive or realistic simulation control of damping and also to extend the effective stability of the underlying Newmark time integration method. For example, here we use Rayleigh damping of elasticity:</p> <pre><code>{\n\"common\": \"newmark.json\",\n\"solver\": {\n\"rayleigh_damping\": {\n\"form\": \"elasticity\",\n\"stiffness_ratio\": 0.1\n}\n}\n}\n</code></pre> <p>Here we set the damping stiffness as a ratio \\(\\kappa_\\text{ratio}\\) between 0 and 1. The absolute damping stiffness will be set to \\(\\tfrac{3}{4} \\kappa_\\text{ratio} \\Delta t^3\\). If \\(\\kappa_\\text{ratio}=1\\), at the beginning of time-step Newmark\u2019s incremental potential Hessian (with damping term) will be equal to that of implicit Euler. This provides a starting basis for intuitively setting damping stiffness. To alternately directly set damping stiffness use the key <code>\"stiffness\"</code>.</p> <p>Here in this demo note that we used a smaller time step size at <code>0.005</code>s as this is better for the stability of Newmark integration.</p> Newmark, <code>\"stiffness_ratio\": 0.1</code> Newmark, <code>\"stiffness_ratio\": 0.2</code> Newmark, <code>\"stiffness_ratio\": 0.4</code> Backwards Euler"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#accuracy-control","title":"Accuracy Control","text":""},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#time-integration-accuracy","title":"Time Integration Accuracy","text":"<p>Nonlinear solver accuracy determines how accurate the dynamic time step solve is satisfied. To set the requested nonlinear solver accuracy, we can use the <code>solver/nonlinear/grad_norm</code> key to set Newton tolerance on the infinity norm of the Newton increment.</p> <p>So far, we have used</p> <pre><code>{\n\"solver\": {\n\"nonlinear\": {\n\"grad_norm\": 1e-05\n}\n}\n}\n</code></pre> <p>The solver will stop once the current Newton increment cannot change any nodal position larger than <code>1e-5</code> m even if a full step is taken. Reducing this improves accuracy, but note that the compute cost can then go up.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#contact-accuracy","title":"Contact Accuracy","text":"<p>There are three additional accuracies for IPC. Each controls a contact accuracy in IPC: the barrier activation distance (<code>\"dhat\"</code>) which IPC uses to determine if objects are in contact and exert contact forces; the tangent velocity (<code>\"epsv\"</code>) determining where IPC sees the touching objects as not sliding and so exerts static friction forces; and the maximum amount of friction iterations (<code>\"friction_iterations\"</code>) that IPC updates friction tangent and normal forces.</p> <p>By default PolyFEM uses <pre><code>{\n\"contact\": {\n\"dhat\": 1e-3,\n\"epsv\": 1e-3\n},\n\"solver\": {\n\"contact\": {\n\"friction_iterations\": 1\n}\n}\n}\n</code></pre></p> <p>Note</p> <p>Unlike the original IPC code, these values are not scaled by the bounding box size.</p> <p>The default setting provides a good trade-off between accuracy and efficiency, where there are no visible gaps, no obvious sliding artifacts, or friction force in inaccurate directions.</p> <p>We can set <code>\"friction_iterations\"</code> set to <code>-1</code> to iterate until the tangent operator and normal force converges to obtain even more accurate results. Note that IPC does not guarantee convergence for this case. In practice, for more accurate friction in large deformation or high-speed impact scenes, <code>\"friction_iterations\"</code> at <code>2</code>~<code>4</code> so far appears generally sufficient.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#use-your-own-mesh","title":"Use Your Own Mesh","text":"<p>For collision obstacles (including closed surfaces), one can directly specify the path to their mesh files (<code>.obj</code>, <code>.stl</code>, <code>.ply</code>, etc.) in the script to use it.</p> <p>For the simulated objects that are tetrahedral meshes, PolyFEM supports MSH files. PolyFEM supports both ASCII and binary encoded version 2.2 and 4.1 files through the use of MshIO.</p> <p>To generate a tetrahedral mesh from a triangle mesh, we recommend using fTetWild.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#restarting-a-simulation","title":"Restarting a Simulation","text":"<p>To learn how to restart a simulation, see here.</p>"},{"location":"tutorials/ipc_quick_start_guide/ipc_quick_start_guide/#more-simulation-examples","title":"More Simulation Examples","text":"<p>Hopefully, now you know the basics of how to use IPC within PolyFEM. For more examples, we have set up all the simulations in the original IPC paper (and more!) and you can find them all here.</p> <p>If you have any further questions, feel free to post an issue on the PolyFEM GitHub repo.</p>"},{"location":"tutorials/ipc_quick_start_guide/rotating-obstacle/","title":"Rotating obstacle","text":"In\u00a0[2]: Copied! <pre>import numpy\nimport sympy\n</pre> import numpy import sympy In\u00a0[3]: Copied! <pre>omega_x, omega_y, omega_z = sympy.symbols('omega_x omega_y omega_z')\nc_x, c_y, c_z = sympy.symbols('c_x c_y c_z')\nx, y, z, t = sympy.symbols('x y z t')\n\ndef deg2rad(deg):\n    return deg * sympy.pi / 180\n</pre> omega_x, omega_y, omega_z = sympy.symbols('omega_x omega_y omega_z') c_x, c_y, c_z = sympy.symbols('c_x c_y c_z') x, y, z, t = sympy.symbols('x y z t')  def deg2rad(deg):     return deg * sympy.pi / 180 <p>$$ \\begin{bmatrix} \\Delta{x} \\\\ \\Delta{y} \\\\ \\Delta{z} \\end{bmatrix} = R_x(\\omega_x t) R_y(\\omega_y t) R_z(\\omega_z t) \\left( \\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix} - \\begin{bmatrix} c_x \\\\ c_y \\\\ c_z \\end{bmatrix} \\right) + \\begin{bmatrix} c_x \\\\ c_y \\\\ c_z \\end{bmatrix} - \\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix} $$</p> In\u00a0[4]: Copied! <pre>Rx = numpy.array([\n    [1, 0, 0],\n    [0, sympy.cos(omega_x*t), -sympy.sin(omega_x*t)],\n    [0, sympy.sin(omega_x*t), sympy.cos(omega_x*t)]\n])\n\nRy = numpy.array([\n    [sympy.cos(omega_y*t), 0, sympy.sin(omega_y*t)],\n    [0, 1, 0],\n    [-sympy.sin(omega_y*t), 0, sympy.cos(omega_y*t)]\n])\n\nRz = numpy.array([\n    [sympy.cos(omega_z*t), -sympy.sin(omega_z*t), 0],\n    [sympy.sin(omega_z*t), sympy.cos(omega_z*t), 0],\n    [0, 0, 1]\n])\n\nR = Rx @ Ry @ Rz\n\nc = numpy.array([c_x, c_y, c_z])\npos = numpy.array([x, y, z])\ndisp = R @ (pos - c) + c - pos\n\ndisplay(sympy.Matrix(disp))\n</pre> Rx = numpy.array([     [1, 0, 0],     [0, sympy.cos(omega_x*t), -sympy.sin(omega_x*t)],     [0, sympy.sin(omega_x*t), sympy.cos(omega_x*t)] ])  Ry = numpy.array([     [sympy.cos(omega_y*t), 0, sympy.sin(omega_y*t)],     [0, 1, 0],     [-sympy.sin(omega_y*t), 0, sympy.cos(omega_y*t)] ])  Rz = numpy.array([     [sympy.cos(omega_z*t), -sympy.sin(omega_z*t), 0],     [sympy.sin(omega_z*t), sympy.cos(omega_z*t), 0],     [0, 0, 1] ])  R = Rx @ Ry @ Rz  c = numpy.array([c_x, c_y, c_z]) pos = numpy.array([x, y, z]) disp = R @ (pos - c) + c - pos  display(sympy.Matrix(disp))  $\\displaystyle \\left[\\begin{matrix}c_{x} - x + \\left(- c_{x} + x\\right) \\cos{\\left(\\omega_{y} t \\right)} \\cos{\\left(\\omega_{z} t \\right)} - \\left(- c_{y} + y\\right) \\sin{\\left(\\omega_{z} t \\right)} \\cos{\\left(\\omega_{y} t \\right)} + \\left(- c_{z} + z\\right) \\sin{\\left(\\omega_{y} t \\right)}\\\\c_{y} - y + \\left(- c_{x} + x\\right) \\left(\\sin{\\left(\\omega_{x} t \\right)} \\sin{\\left(\\omega_{y} t \\right)} \\cos{\\left(\\omega_{z} t \\right)} + \\sin{\\left(\\omega_{z} t \\right)} \\cos{\\left(\\omega_{x} t \\right)}\\right) + \\left(- c_{y} + y\\right) \\left(- \\sin{\\left(\\omega_{x} t \\right)} \\sin{\\left(\\omega_{y} t \\right)} \\sin{\\left(\\omega_{z} t \\right)} + \\cos{\\left(\\omega_{x} t \\right)} \\cos{\\left(\\omega_{z} t \\right)}\\right) - \\left(- c_{z} + z\\right) \\sin{\\left(\\omega_{x} t \\right)} \\cos{\\left(\\omega_{y} t \\right)}\\\\c_{z} - z + \\left(- c_{x} + x\\right) \\left(\\sin{\\left(\\omega_{x} t \\right)} \\sin{\\left(\\omega_{z} t \\right)} - \\sin{\\left(\\omega_{y} t \\right)} \\cos{\\left(\\omega_{x} t \\right)} \\cos{\\left(\\omega_{z} t \\right)}\\right) + \\left(- c_{y} + y\\right) \\left(\\sin{\\left(\\omega_{x} t \\right)} \\cos{\\left(\\omega_{z} t \\right)} + \\sin{\\left(\\omega_{y} t \\right)} \\sin{\\left(\\omega_{z} t \\right)} \\cos{\\left(\\omega_{x} t \\right)}\\right) + \\left(- c_{z} + z\\right) \\cos{\\left(\\omega_{x} t \\right)} \\cos{\\left(\\omega_{y} t \\right)}\\end{matrix}\\right]$  In\u00a0[5]: Copied! <pre>def print_obstacle_displacement(omega, c):\n    print(\"[\")\n    subs = {\n        omega_x: deg2rad(omega[0]),\n        omega_y: deg2rad(omega[1]),\n        omega_z: deg2rad(omega[2]),\n        c_x: c[0],\n        c_y: c[1],\n        c_z: c[2],\n    }\n    for i, d in enumerate(disp):\n        expr = d.subs(subs).simplify()\n        expr_str = str(expr) if expr.is_constant() else f\"\\\"{str(expr).replace('**', '^')}\\\"\"\n        print(\"{}{}\".format(expr_str, \",\" if i &lt; len(disp) - 1 else \"\"))\n    print(\"]\")\n</pre> def print_obstacle_displacement(omega, c):     print(\"[\")     subs = {         omega_x: deg2rad(omega[0]),         omega_y: deg2rad(omega[1]),         omega_z: deg2rad(omega[2]),         c_x: c[0],         c_y: c[1],         c_z: c[2],     }     for i, d in enumerate(disp):         expr = d.subs(subs).simplify()         expr_str = str(expr) if expr.is_constant() else f\"\\\"{str(expr).replace('**', '^')}\\\"\"         print(\"{}{}\".format(expr_str, \",\" if i &lt; len(disp) - 1 else \"\"))     print(\"]\") In\u00a0[6]: Copied! <pre>print_obstacle_displacement([0, 0, -36], [-0.35, 0, 0])\nprint()\nprint_obstacle_displacement([0, 0, 36], [0.35, 0, 0])\n</pre> print_obstacle_displacement([0, 0, -36], [-0.35, 0, 0]) print() print_obstacle_displacement([0, 0, 36], [0.35, 0, 0]) <pre>[\n\"-x + y*sin(pi*t/5) + (x + 0.35)*cos(pi*t/5) - 0.35\",\n\"y*cos(pi*t/5) - y - (x + 0.35)*sin(pi*t/5)\",\n0\n]\n\n[\n\"-x - y*sin(pi*t/5) + (x - 0.35)*cos(pi*t/5) + 0.35\",\n\"y*cos(pi*t/5) - y + (x - 0.35)*sin(pi*t/5)\",\n0\n]\n</pre> In\u00a0[7]: Copied! <pre>print_obstacle_displacement([0, 360/0.525, 0], [0, 0.1, 0])\n</pre> print_obstacle_displacement([0, 360/0.525, 0], [0, 0.1, 0]) <pre>[\n\"x*cos(3.80952380952381*pi*t) - x + z*sin(3.80952380952381*pi*t)\",\n\"0\",\n\"-x*sin(3.80952380952381*pi*t) + z*cos(3.80952380952381*pi*t) - z\"\n]\n</pre> In\u00a0[12]: Copied! <pre>print_obstacle_displacement([20, 0, 0], [0, 0, 0])\n</pre> print_obstacle_displacement([20, 0, 0], [0, 0, 0]) <pre>[\n\"0\",\n\"y*cos(pi*t/9) - y - z*sin(pi*t/9)\",\n\"y*sin(pi*t/9) + z*cos(pi*t/9) - z\"\n]\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"tutorials/ipc_quick_start_guide/run_all/","title":"Run all","text":"In\u00a0[\u00a0]: Copied! <pre>import sys\nfrom collections import namedtuple\nimport pathlib\nimport subprocess\n</pre> import sys from collections import namedtuple import pathlib import subprocess In\u00a0[\u00a0]: Copied! <pre>simrender_path = pathlib.Path(\"/home/zachary/Development/personal-projects/simrender\")\nif simrender_path.exists():\n    sys.path.append(str(simrender_path))\n    import render\n</pre> simrender_path = pathlib.Path(\"/home/zachary/Development/personal-projects/simrender\") if simrender_path.exists():     sys.path.append(str(simrender_path))     import render In\u00a0[\u00a0]: Copied! <pre>debug = False\n</pre> debug = False In\u00a0[\u00a0]: Copied! <pre>polyfem_bin = f\"/home/zachary/Development/polyfem/build/{'debug' if debug else 'release'}/PolyFEM_bin\"\n#polyfem_bin = f\"/Users/zachary/Development/research/polyfem/polyfem/build/{'debug' if debug else 'release'}/PolyFEM_bin\"\n</pre> polyfem_bin = f\"/home/zachary/Development/polyfem/build/{'debug' if debug else 'release'}/PolyFEM_bin\" #polyfem_bin = f\"/Users/zachary/Development/research/polyfem/polyfem/build/{'debug' if debug else 'release'}/PolyFEM_bin\" In\u00a0[\u00a0]: Copied! <pre>input_dir = pathlib.Path(__file__).parent / \"input\"\noutput_dir = pathlib.Path(__file__).parent / \"output\"\nvideos_dir = pathlib.Path(__file__).parent / \"videos\"\noutput_dir.mkdir(exist_ok=True, parents=True)\nvideos_dir.mkdir(exist_ok=True, parents=True)\n</pre> input_dir = pathlib.Path(__file__).parent / \"input\" output_dir = pathlib.Path(__file__).parent / \"output\" videos_dir = pathlib.Path(__file__).parent / \"videos\" output_dir.mkdir(exist_ok=True, parents=True) videos_dir.mkdir(exist_ok=True, parents=True) In\u00a0[\u00a0]: Copied! <pre>for script in input_dir.glob(\"*.json\"):\n    if script.name == \"ipc-defaults.json\":\n        continue\n\n    print(script.name)\n    # yes_or_no = input(\"Press enter to run [Y/n]: \")\n    # if yes_or_no.lower() not in [\"\", \"y\", \"yes\"]:\n    #     continue\n\n    subprocess.run(\n        ([\"lldb\", \"--\"] if debug else []) + [\n            polyfem_bin,\n            \"-j\", str(script),\n            \"-o\", str(output_dir / script.stem),\n            \"--log_level\", \"debug\"\n        ])\n\n    if simrender_path is not None and simrender_path.exists():\n        render_args = render.parse_args([\n            \"--input\", str(list((output_dir /\n                           script.stem).glob(\"*.pvd\"))[0]),\n            \"--output\", str(videos_dir / (script.stem + \".mp4\")),\n            \"--bg-color\", \"46\", \"48\", \"62\", \"255\",\n            \"--base-zoom\", \"2\",\n            # \"--drop-frames\", \"4\"\n        ])\n        render.main(render_args)\n</pre> for script in input_dir.glob(\"*.json\"):     if script.name == \"ipc-defaults.json\":         continue      print(script.name)     # yes_or_no = input(\"Press enter to run [Y/n]: \")     # if yes_or_no.lower() not in [\"\", \"y\", \"yes\"]:     #     continue      subprocess.run(         ([\"lldb\", \"--\"] if debug else []) + [             polyfem_bin,             \"-j\", str(script),             \"-o\", str(output_dir / script.stem),             \"--log_level\", \"debug\"         ])      if simrender_path is not None and simrender_path.exists():         render_args = render.parse_args([             \"--input\", str(list((output_dir /                            script.stem).glob(\"*.pvd\"))[0]),             \"--output\", str(videos_dir / (script.stem + \".mp4\")),             \"--bg-color\", \"46\", \"48\", \"62\", \"255\",             \"--base-zoom\", \"2\",             # \"--drop-frames\", \"4\"         ])         render.main(render_args)"},{"location":"tutorials/multi-material/multi-material/","title":"Simulating Multiple Materials in a Single Mesh","text":"Author: Zachary Ferguson and Hanwen Zhao <p>In this tutorial, we will demonstrate how to create a multi-material object using fTetWild and simulate it using PolyFEM.</p> <p>The data for this tutorial can be found here.</p>"},{"location":"tutorials/multi-material/multi-material/#prerequisites","title":"Prerequisites","text":"<p>The following items are necessary to complete this tutorial. To replicate the experiment, you can feel free to use either the given mesh files or your own mesh.</p> <ul> <li> Build PolyFEM</li> <li> Build fTetwild</li> <li> Download File: left_box.obj</li> <li> Download File: middle_box.obj</li> <li> Download File: right_box.obj</li> <li> Download File: stretch-cubes.json</li> </ul>"},{"location":"tutorials/multi-material/multi-material/#build-polyfem","title":"Build PolyFEM","text":"<p>The instructions for building PolyFEM can be found here. After compilation, to use PolyFEM in any working directory machine, we suggest adding an alias <pre><code>alias polyfem='path/to/PolyFEM/build/PolyFEM_bin'\n</code></pre> to your <code>~/.bashrc</code> or <code>~/.zshrc</code> file.</p> <p>Then you can use it by</p> <pre><code>polyfem --help\n</code></pre>"},{"location":"tutorials/multi-material/multi-material/#build-ftetwild","title":"Build fTetWild","text":"<p>You can find the instruction for building fTetWild here. After doing so you should have an executable file <code>FloatTetwild_bin</code>. For convenience we can again define an alias for this binary: <pre><code>alias tetwild='path/to/fTetWild/build/FloatTetwild_bin'\n</code></pre></p>"},{"location":"tutorials/multi-material/multi-material/#creating-the-mesh","title":"Creating the Mesh","text":""},{"location":"tutorials/multi-material/multi-material/#input-meshes","title":"Input Meshes","text":"<p>We will use three mesh files to create a simple multi-material object: <code>left_box.obj</code>, <code>middle_box.obj</code>, and <code>right_box.obj</code>. The left and right boxes will have nearly rigid material properties, while the middle box will be more flexible.</p> Left: <code>left_box.obj</code> Middle: <code>middle_box.obj</code> Right: <code>right_box.obj</code>"},{"location":"tutorials/multi-material/multi-material/#constructive-solid-geometry","title":"Constructive Solid Geometry","text":"<p>The next step is to create a union of these three meshes, this can be done using fTetWild. To create a union of three objects, we can create a JSON file <pre><code>{\n\"operation\": \"union\",\n\"left\": {\n\"operation\": \"union\",\n\"left\": \"left_box.obj\",\n\"right\": \"middle_box.obj\"\n},\n\"right\": \"right_box.obj\"\n}\n</code></pre> and use it as input to fTetWild <pre><code>tetwild --csg /path/to/union.json --no-color -o cubes.msh\n</code></pre></p> <p>The <code>--csg</code> flag stands for constructive solid geometry which describes how to construct a shape using set operations between other shapes (e.g., union, intersection, and difference). In our case, we want to union the three boxes together.</p> <p>The <code>--no-color</code> is optional and disables the color output of fTetWild which can be used to visualize the quality of elements.</p> <p>The combined mesh should look like this:</p> <p> </p> <p>Note</p> <p>To view <code>.msh</code> files you can use Gmsh.</p>"},{"location":"tutorials/multi-material/multi-material/#removing-extra-vertices","title":"Removing Extra Vertices","text":"<p>fTetWild will sometimes produce extra floating vertices that are not part of the mesh. These extra vertices do not harm anything, but can inflate the bounding box making it hard to select a side of the cube in PolyFEM. To remove these vertices we provide a simple Python script here.</p>"},{"location":"tutorials/multi-material/multi-material/#setting-up-the-simulation","title":"Setting up the Simulation","text":"<p>We will setup the simulation using PolyFEM\u2019s JSON interface. For more details, please refer to the JSON Input documentation.</p> <p>We will go over the JSON script section by section. The complete JSON file can be found in the GitHub Repo.</p>"},{"location":"tutorials/multi-material/multi-material/#geometry","title":"Geometry","text":"<pre><code>{\n\"geometry\": {\n\"mesh\": \"cubes_v22.msh\"\n}\n}\n</code></pre> <p>The <code>\"geometry\"</code> section specifies all required simulation geometry data. The <code>\"mesh\"</code> field defines the path to the volumetric mesh file. In this tutorial, only the <code>cubes_v22.msh</code> file from fTetwild will be utilized.</p>"},{"location":"tutorials/multi-material/multi-material/#boundary-conditions","title":"Boundary Conditions","text":"<pre><code>{\n\"boundary_conditions\": {\n\"rhs\": [0, 0, 0],\n\"dirichlet_boundary\": [{\n\"id\": 1,\n\"value\": [\"-t\", 0, 0]\n}, {\n\"id\": 3,\n\"value\": [\"t\", 0, 0]\n}]\n}\n}\n</code></pre> <p>In <code>boundary conditions</code>, we permit the <code>left box</code> and <code>right box</code> sections to have Dirichlet boundaries that move along the x-axis as a function of time <code>t</code>. Here we use the default boundary IDs assigned described here.</p> <p>The <code>rhs</code> is defined as <code>[0, 0, 0]</code>, which indicates that the simulation has no prescribed body forces (i.e., no gravity).</p>"},{"location":"tutorials/multi-material/multi-material/#materials","title":"Materials","text":"<pre><code>{\n\"materials\": [{\n\"id\": 1,\n\"E\": 2e11,\n\"nu\": 0.3,\n\"rho\": 7750,\n\"type\": \"NeoHookean\"\n}, {\n\"id\": 2,\n\"E\": 2.55e7,\n\"nu\": 0.48,\n\"rho\": 1700,\n\"type\": \"NeoHookean\"\n}, {\n\"id\": 3,\n\"E\": 2e11,\n\"nu\": 0.3,\n\"rho\": 7750,\n\"type\": \"NeoHookean\"\n}]\n}\n</code></pre> <p>In the <code>materials</code> section, we assign identical material properties to the left and right boxes but use a softer material for the middle box.</p> <p>The volume IDs in this case are loaded directly from the <code>cubes_v22.msh</code> file. fTetWild automatically assigns these labels based on which domain the elements falls in the CSG.</p> <p>Warning</p> <p>Loading volume IDs from the mesh file is currently only supported with version 4.1 MSH files (both ASCII and binary).</p>"},{"location":"tutorials/multi-material/multi-material/#time-dependent-simulation","title":"Time-Dependent Simulation","text":"<p><pre><code>{\n\"time\": {\n\"dt\": 0.0025,\n\"time_steps\": 20\n}\n}\n</code></pre> In the <code>\"time\"</code> section, we define our time step size as <code>0.0025</code> seconds and the total number of steps to be <code>20</code>.</p>"},{"location":"tutorials/multi-material/multi-material/#contact","title":"Contact","text":"<pre><code>{\n\"contact\": {\n\"enabled\": true,\n\"dhat\": 0.001\n}\n}\n</code></pre> <p>We enable contact by defining a <code>\"contact\"</code> section as above.</p>"},{"location":"tutorials/multi-material/multi-material/#solver","title":"Solver","text":"<pre><code>{\n\"solver\": {\n\"linear\": {\n\"solver\": \"Eigen::PardisoLDLT\"\n},\n\"nonlinear\": {\n\"line_search\": {\n\"method\": \"backtracking\"\n},\n\"solver\": \"newton\",\n\"grad_norm\": 1e-05,\n\"use_grad_norm\": true\n},\n\"advanced\": {\n\"lump_mass_matrix\": true\n}\n}\n}\n</code></pre> <p>We make a few adjustments to the solver. Here we are using Newton with backtracking line-search and <code>Eigen::PardisoLDLT</code> for linear solves. We also set the convergence tolerance for the gradient norm to <code>1e-05</code>.</p>"},{"location":"tutorials/multi-material/multi-material/#spatial-discretization","title":"Spatial Discretization","text":"<pre><code>{\n\"space\": {\n\"discr_order\": [{\n\"id\": 1,\n\"order\": 1\n}, {\n\"id\": 2,\n\"order\": 2\n}, {\n\"id\": 3,\n\"order\": 1\n}]\n}\n}\n</code></pre> <p>Lastly, we demonstrate that PolyFEM can simulate mixed order elements. In this example, we choose to use linear P1 elements for the left and right box, but use quadratic P2 elements for the middle box.</p> <p>The use of higher-order representations can lead to more precise calculations with slightly more running time.</p>"},{"location":"tutorials/multi-material/multi-material/#running-the-simulation","title":"Running the Simulation","text":"<p>We can use the following command to run the simulation:</p> <pre><code>polyfem -j stretch-cubes.json -o output/\n</code></pre> <p>The simulation results will be written to <code>output/</code> as a sequence of VTU file and a PVD file for the time sequence.</p>"},{"location":"tutorials/multi-material/multi-material/#visualize-the-simulation-results","title":"Visualize the Simulation Results","text":"<p>To visualize the simulation results in <code>VTU</code> format, we can use <code>ParaView</code>, an open-source, multi-platform data analysis and visualization application.</p> <p>To view the results, please follow the instruction below.</p> <p></p> <ul> <li>Step 1: <code>File</code> - <code>Open</code>, select sequence group file step.vtu or step.vtm.</li> <li>Step 2: Click <code>Apply</code> under the tab <code>Properties</code> located in the left side of the GUI.</li> <li>Step 3: Click on <code>Wrap By Vector</code> to apply the displacement to the objects. This function can be found from the top menu bar.</li> <li>Step 4: Click again <code>Apply</code> under the tab <code>Properties</code>.</li> <li>Step 5: Now, the <code>Play</code> button can be used to view the time sequence results.</li> </ul>"},{"location":"tutorials/screw/screw/","title":"Screw a Bolt into a Nut","text":"Author: Duo Zhang <p>This tutorial showcases how to set up and use PolyFEM to simulate screwing a bolt into a nut (for example, to be used in a robotic assembly simulation).</p> <p></p>"},{"location":"tutorials/screw/screw/#prerequisites","title":"Prerequisites","text":"<p>In this tutorial, we assume you have already installed PolyFEM on your machine. If not, please follow the instructions here. After compilation, to use PolyFEM in any working directory machine, we can set up an alias for the main executable for <code>./PolyFEM_bin</code> by adding the following to <code>~/.bashrc</code> or <code>~/.zshrc</code> according to the type of your shell. </p> <pre><code>alias polyfem='path/to/PolyFEM/build/PolyFEM_bin'\n</code></pre> <p>Then you can use it by </p> <pre><code>polyfem --help\n</code></pre>"},{"location":"tutorials/screw/screw/#data-preparation","title":"Data Preparation","text":"<p>The data needed in this tutorial can be found here. The volume mesh files are all made by fTetWild. Feel free you make your screws and nuts.</p>"},{"location":"tutorials/screw/screw/#overview","title":"Overview","text":"<p>In these tutorials, the bolt will be screwed into the nut in several different ways. The tutorials can also be found at Github: Screw tutorials. The screw is represented as a volume mesh</p> <pre><code>\"geometry\": [{\n\"mesh\": \"data/screw-big.msh\",\n\"transformation\": {\n\"translation\": [0, 0, 0],\n\"scale\": 0.01\n},\n\"volume_selection\": 1,\n\"surface_selection\": 2\n}]\n</code></pre> <p>and the nut is set to be an obstacle just to speed up the simulation by setting <code>\"is_obstacle\": true</code> because obstacles in PolyFEM are rigid and only the surface of obstacles is taken into consideration.</p> <pre><code>\"geometry\": [{\n// ...\n}, {\n\"mesh\": \"data/nut-big.stl\",\n\"is_obstacle\": true,\n\"transformation\": {\n\"translation\": [0, -0.02675, 0],\n\"scale\": 0.01\n}\n}]\n</code></pre> <p>For other parameters, the bolt is using the parameter of steel</p> <pre><code>\"materials\": [{\n\"type\": \"NeoHookean\",\n\"id\": 1,\n\"E\": 2e11,\n\"nu\": 0.3,\n\"rho\": 8050\n}]\n</code></pre>"},{"location":"tutorials/screw/screw/#fully-constrained-screw-in-all-dimensions","title":"Fully Constrained Screw in All Dimensions","text":"<p>In this tutorial, the screw is completely controlled by Dirichlet boundary conditions in all three dimensions. Thus the trajectory of the screw is fixed(rotation and transformation) and needs to be calculated carefully. For a single-threaded bolt and every rotation of \\(360^{\\circ}\\), the bolt will go into the nut by the thread distance. In this case, the thread distance of the screw used in this tutorial is 1.33m. Therefore the Dirichlet Boundary Condition is set to </p> <pre><code>\"dirichlet_boundary\": [{\n\"id\": 2,\n\"value\": [\n\"x*cos(-2*pi*t) + z * sin(-2*pi*t)-x\",\n\"-1.33*0.01*t\", \"-1*x*sin(-2*pi*t) + z * cos(-2*pi*t)-z\"\n],\n\"dimension\": [true, true, true]\n}]\n</code></pre> <p>Here the angular velocity of the rotation is \\(-2\\pi\\) and the bolt is getting into the nut along the y-axis by \\(1.33\\times 0.01\\) since the bolt and the nut is scaled by 0.01. The <code>\"dimension\"</code> argument is set to be true for all three dimensions to make sure the bolt is in full control.</p> <p>To view the whole JSON file for this case, please go to screw.json.</p> <p>To run this JSON with PolyFEM, please go to the GitHub repo Github: Screw tutorials and run the following in your terminal</p> <pre><code>polyfem --json screws.json --output_dir results\n</code></pre>"},{"location":"tutorials/screw/screw/#constrained-rotation-but-free-movement-in-the-direction-of-feed","title":"Constrained Rotation but Free Movement in the Direction of Feed","text":"<p>In this tutorial, only two dimensions have Dirichlet boundary conditions. For the y-axis or the direction of feed, the screw is completely free. Therefore we only need to specify the rotation in the Dirichlet boundary condition and the bolt would get into the nut by basic high school physics.</p> <pre><code>\"dirichlet_boundary\": [{\n\"id\": 2,\n\"value\": [\n\"x*cos(-2*pi*t) + z * sin(-2*pi*t)-x\",\n\"-1.33*0.01*t\", \"-1*x*sin(-2*pi*t) + z * cos(-2*pi*t)-z\"\n],\n\"dimension\": [true, false, true]\n}]\n</code></pre> <p>The only thing we need to modify in the <code>\"dirichlet_boundary\"</code> argument is to change the y-axis in <code>\"dimension\"</code> to false.</p>"},{"location":"tutorials/screw/screw/#top-constrained-bolt","title":"Top Constrained Bolt","text":"<p>Instead of putting Dirichlet boundary conditions on the whole bolt, we can also constrain only the top of the bolt to simulate some actuators. The following image is the visualization of the bolt only constrained on the top of the bolt by Dirichlet boundary conditions.</p> <p> </p> <p>To make specified boundary condition selections, please refer to Selections. In the JSON file, we need to change the <code>surface_selection</code> to the axis-plane selection method instead of using an integer to select the whole body of the bolt.</p> <pre><code>\"geometry\": [{\n\"mesh\": \"data/screw-big.msh\",\n\"transformation\": {\n\"translation\": [0, 0, 0],\n\"scale\": 0.01\n},\n\"volume_selection\": 1,\n\"surface_selection\": [{\n\"id\": 3,\n\"axis\": \"y\",\n\"position\": 0.11\n}]\n}]\n</code></pre> <p>which is to apply the boundary condition with <code>id=3</code> to the meshes whose coordinates in the y-axis are greater than 0.11 (If set <code>\"axis\": \"-y\"</code> is to select the negative side of the y-axis which are the meshes whose y-coordinates are less then 0.11). </p> <p>To view the whole JSON file for this, please go to top_constrained.json.</p>"},{"location":"tutorials/screw/screw/#two-facets-constrained-bolt","title":"Two Facets Constrained Bolt","text":"<p>In addition to constraining the top part of the bolt to simulate an actuator, we can also only constrain the two facets of the head of the bolt to simulate a user pinching the bolt with two fingers and trying to screw the bolt into the nut. The following image is the visulization of contraining just two facets of the bolt.</p> <p> </p> <p>In this case, the <code>\"boundary_sidesets\"</code> becomes:</p> <pre><code> \"boundary_sidesets\": [{\n\"id\": 2,\n\"axis\": -3,\n\"position\": -0.039\n}, {\n\"id\": 2,\n\"axis\": 3,\n\"position\": 0.039\n}]\n</code></pre> <p>To view the whole JSON file, please go to two_facets_contrained.json.</p>"},{"location":"tutorials/screw/screw/#gravity-controlled-bolt","title":"Gravity Controlled Bolt","text":"<p>In theory, if the friction is 0 and the gravity is the only force applied to the bolt, then the bolt should be able to get into the nut automatically under gravity. In this case, it is not very useful but it is interesting to test. There\u2019s no need to set any boundary conditions because the bolt is completely free. The only thing that needs to be done is to enable gravity in the JSON file by setting </p> <pre><code>\"boundary_conditions\": {\n\"rhs\": [0, 9.81, 0]\n},\n</code></pre> <p>Note that the direction of gravity is along the y-axis.</p> <p>The whole JSON file is here only_gravity.json.</p>"},{"location":"tutorials/sling-shot/sling-shot/","title":"Sling Shot","text":"<p>In this tutorial, we are going to develop an environment from scratch using <code>polyfempy</code> and Python for a sling-shot. In this scene, we have two fingers holding the ball and the fingers will pull the rubber band and then release the ball into the air.</p> <p> </p>"},{"location":"tutorials/sling-shot/sling-shot/#installation-of-python-bindings-of-polyfem","title":"Installation of Python Bindings of PolyFEM","text":"<p>In this tutorial, we are assuming you have already installed <code>polyfempy</code> on your machine. If not, please follow the instructions here. Note that there\u2019s no need to install standalone PolyFEM. All the dependencies that <code>polyfempy</code> requires will be installed automatically including PolyFEM. Also please note that please install and compile <code>polyfempy</code> from source by doing <pre><code>python setup.py install\n</code></pre> instead of using the Conda deployment.</p> <p>After installation, please try to run <pre><code>python -c \"import polyfempy as pf\"\n</code></pre> to test if <code>polyfempy</code> is installed successfully. Note that this tutorial is using Conda virtual environment.</p>"},{"location":"tutorials/sling-shot/sling-shot/#installation-of-other-dependencies","title":"Installation of Other Dependencies","text":"<p>To build this project, there are some other dependencies we need. Note that <code>meshio</code> and <code>igl</code> are optional. They are only required if you want to render the scenes with python. 1. numpy     <code>conda install numpy</code> 2. meshio(optional)     <code>conda install -c conda-forge meshio</code> 3. python bindings of libigl(optional)     <code>conda install -c conda-forge igl</code></p>"},{"location":"tutorials/sling-shot/sling-shot/#data-preparation","title":"Data Preparation","text":"<p>The data needed in this tutorial can be found here. For triangle meshes, they are in surf_mesh folder and the volume meshes are in vol_mesh folder The volume mesh files are all made by fTetWild. Feel free you make you own sphere, rubber band and fingers.</p>"},{"location":"tutorials/sling-shot/sling-shot/#tutorial","title":"Tutorial","text":"<p>All the code and JSONs can be found at Github: Slingshot Tutorial. The file tree of this project is: <pre><code>project\n|___pushbox\n|   |___src\n|   |___assets\n|       |___data\n|       |   |___surf_mesh\n|       |   |___vol_mesh\n|       |___json\n|___test.py\n</code></pre></p>"},{"location":"tutorials/sling-shot/sling-shot/#json-environment-setup","title":"Json Environment Setup","text":"<ol> <li>The first step is to make a JSON file <code>slingshot.json</code> in the JSON folder for the initial setup with the sphere, rubber band and fingers in it. Let\u2019s load the objects!     <pre><code>\"geometry\": [\n{\n\"mesh\": \"slingshot/assets/data/vol_mesh/mat.msh\",\n\"transformation\": {\n\"translation\": [\n0.018,\n0.115,\n0\n],\n\"rotation\": [\n0,\n0,\n90\n],\n\"scale\": [\n0.00385,\n0.01,\n0.21\n]\n},\n\"volume_selection\": 1,\n\"advanced\": {\n\"normalize_mesh\": false\n},\n\"surface_selection\": [\n{\n\"id\": 3,\n\"axis\": -3,\n\"position\": -0.1\n},\n{\n\"id\": 3,\n\"axis\": 3,\n\"position\": 0.1\n}\n]\n},\n{\n\"mesh\": \"slingshot/assets/data/vol_mesh/sphere_grooved.msh\",\n\"transformation\": {\n\"translation\": [\n0,\n0.115,\n0\n],\n\"rotation\": [\n90,\n0,\n0\n],\n\"scale\": 0.0386\n},\n\"volume_selection\": 2,\n\"advanced\": {\n\"normalize_mesh\": false\n}\n},\n{\n\"mesh\": \"slingshot/assets/data/surf_mesh/left_finger.obj\",\n\"is_obstacle\": true,\n\"enabled\": true,\n\"transformation\": {\n\"translation\": [\n0.04,\n0.16032,\n0.0\n],\n\"rotation\": [\n0,\n-90,\n0\n],\n\"scale\": 1\n},\n\"surface_selection\": 1000\n},\n{\n\"mesh\": \"slingshot/assets/data/surf_mesh/right_finger.obj\",\n\"is_obstacle\": true,\n\"enabled\": true,\n\"transformation\": {\n\"translation\": [\n0.04,\n0.06965,\n0.0\n],\n\"rotation\": [\n0,\n-90,\n0\n],\n\"scale\": 1\n},\n\"surface_selection\": 1001\n}\n]\n</code></pre>     The first mesh is a 21cm rubber band. It is originally a mat but then rescaled to the shape of a rubber band. The second mesh is a sphere with a groove in the middle part of its body in case the rubber band might slide off the sphere if the friction is not enough. As for the two fingers, there\u2019s no need to consider their deformation so they are set to obstacles. The displacements are not zero vectors because the fingers need to squeeze the ball and hold the ball tightly enough to pull the rubber band without sliding off the fingers while still pulling.     Note that the <code>volume_selection</code> here means to select the entire volume of the tetrahedron mesh to be simulated and the <code>surface_selection</code> means the surface area that you want to select. For example, both fingers are obstacles and they are triangle meshes. So to move and simulate them, I would like to select the entire finger. Thus here I can select them by giving the whole mesh an index:     <pre><code>{\n\"mesh\": \"slingshot/assets/data/surf_mesh/right_finger.obj\",\n\"is_obstacle\": true,\n...\n\"surface_selection\": 1001\n}\n</code></pre>     In some scenarios, maybe the user only wants to select a part of the mesh and give the selected part a different movement from other parts. Then this could be done by setting the surface_selection part with specialized fields. For example, in this slingshot case, I would like to set the two ends of the rubber band to be still and the rest part to be able to move freely so that the rubber band will be extended while the sphere is pulled back by two fingers. To achieve this, the two ends of the rubber band can be selected by:     <pre><code>{\n\"mesh\": \"slingshot/assets/data/vol_mesh/mat.msh\",\n...\n\"surface_selection\": [\n{\n\"id\": 3,\n\"axis\": -3,\n\"position\": -0.1\n},\n{\n\"id\": 3,\n\"axis\": 3,\n\"position\": 0.1\n}\n]\n}\n</code></pre>     The detailed explanation of <code>id</code>, <code>axis</code> and <code>position</code> can be found at Selections in PolyFEM</li> <li>The second thing is to give proper material parameters to these objects. Since we are using a rubber band and also we want to grasp the ball tightly enough, we can use the material parameters for both of them. If you don\u2019t know the parameters of rubber, Just Google for Them! Feel free to use other material parameters.     <pre><code>\"materials\": [\n{\n\"id\": 2,\n\"E\": 10000000.0,\n\"nu\": 0.4,\n\"rho\": 1150,\n\"type\": \"NeoHookean\"\n},\n{\n\"id\": 1,\n\"E\": 10000000.0,\n\"nu\": 0.4,\n\"rho\": 1150,\n\"type\": \"NeoHookean\"\n}\n]\n</code></pre></li> <li>Since the sphere is all free and the only actuator are the fingers, there is no need to set Dirichlet boundary conditions for the sphere. As for the rubber band, although most of the rubber band is free to move, the two sides of the rubber band need to be static like attached to two poles. Then the Dirichlet boundary condition with <code>\"id\":3</code> is set to zero for the two ends of the rubber band.     <pre><code>\"boundary_conditions\": {\n\"obstacle_displacements\": [\n{\n\"id\": 1000,\n\"value\": [\n\"0\",\n\"-0.02 * t\",\n\"0\"\n]\n},\n{\n\"id\": 1001,\n\"value\": [\n\"0\",\n\"0.02 * t\",\n\"0\"\n]\n}\n],\n\"rhs\": [\n0,\n9.81,\n0\n],\n\"dirichlet_boundary\": [\n{\n\"id\": 3,\n\"value\": [\n0,\n0,\n0\n]\n}\n]\n}\n</code></pre> To view the whole JSON configuration file, please go to sling_shot.json.</li> </ol> <p>After loading every object, the environment should look like </p>"},{"location":"tutorials/sling-shot/sling-shot/#python-environment-development","title":"Python Environment Development","text":"<p>In this section, we will develop a python environment to do the slingshot.</p>"},{"location":"tutorials/sling-shot/sling-shot/#class-initialization","title":"Class Initialization","text":"<p>In the <code>src</code> folder, create a python file <code>slingshot.py</code>. In this file, let\u2019s first import necessary libraries and create a PushBox class with its <code>__init__</code> function: <pre><code>import polyfempy as pf\nimport json\nimport numpy as np\n\n\nclass SlingShot:\n    def __init__(self) -&gt; None:\n        self.asset_file = 'slingshot/assets/json/sling_shots.json'\n        with open(self.asset_file,'r') as f:\n            self.config = json.load(f)\n        self.dt = self.config[\"dt\"]\n        self.step_count = 1\n        self.solver = pf.Solver()\n        self.solver.set_log_level(3)\n        self.solver.set_settings(json.dumps(self.config))\n        self.solver.load_mesh_from_settings()\n        self.dt = self.config[\"dt\"]\n        self.t0 = self.config[\"t0\"]\n        self.solver.init_timestepping(self.t0, self.dt)\n        self.id_to_mesh = {}\n        self.id_to_position = {}\n        self.id_to_vf = {}\n        for mesh in self.config[\"meshes\"]:\n            self.id_to_mesh[mesh[\"body_id\"]] = mesh[\"mesh\"]\n            self.id_to_position[mesh[\"body_id\"]] = mesh[\"position\"]\n\n        # To grasp and hold the sphere very tightly\n        self.pre_steps = 4\n        for i in range(self.pre_steps):\n            self.run_simulation()\n        self.cumulative_action = {\"0\":np.array([0, -0.02 * self.dt * self.step_count, 0, 0.02 * self.dt * self.step_count]), \"1\":np.array([0, 0.02 * self.dt, 0, 0.02 * self.dt])}\n</code></pre> In the <code>__init__</code> function, we load the environment configuration from the JSON file we just made, initialize a step counter and the PolyFEM solver. Here we set the log_level of PolyFEM to 3 which only displays the errors and warnings from PolyFEM. Feel free to change the log level to get more information or less based on docs for log_levels (More specifically,  \u2013log_level ENUM:value in {trace-&gt;0,debug-&gt;1,info-&gt;2,warning-&gt;3,error-&gt;4,critical-&gt;5,off-&gt;6} OR {0,1,2,3,4,5,6}).</p> <p>One thing to mention is that <code>polyfempy</code> is always calculating the result for this time step based on the displacement from the initial position which is the position read from the JSON file. However, we only pay close attention to the action or movement we want to exert for this timestep, so <code>self.cumulative_action</code> would take care of previous displacements.</p> <p>Different from the PushBox environment, in this <code>__init__</code> function, we need to squeeze the sphere to a certain point so that the sphere would never slide off the fingers unless the user decides to release it. That\u2019s why at the end of the <code>__init__</code> function four <code>pre_steps</code> are trying to close the fingers and squeeze the rubber ball.</p>"},{"location":"tutorials/sling-shot/sling-shot/#take-the-action-from-the-user","title":"Take the action from the user","text":"<p>The solver is already initialized in the previous section, now we can design an interface for the users to pass new actions to the sphere from their side. In this tutorial, the action space is 4-dimensional and consists of movement of the fingers along the x-axis, y-axis, and z-axis and one action to close or open the two fingers. The argument <code>actions</code> in this function are a dictionary and contain the actions for both fingers. <pre><code>def set_boundary_conditions(self, actions:dict):\n    t0 = self.t0\n    t1 = t0 + self.dt\n    for mesh_id, action in actions.items():\n        self.solver.update_obstacle_displacement(\n                int(mesh_id),\n                [\n                    f\"{self.cumulative_action[mesh_id][0]} + ((t-{t0})*{action[0]})/({t1-t0})\",\n                    f\"{self.cumulative_action[mesh_id][1] + self.cumulative_action[mesh_id][3]} + ((t-{t0})*{action[1] + action[3]})/({t1-t0})\",\n                    f\"{self.cumulative_action[mesh_id][2]} + ((t-{t0})*{action[2]})/({t1-t0})\"\n                ]\n            )\n        self.cumulative_action[mesh_id] += action\n</code></pre> In the current setting, the fingers are opening and closing along the y-axis. That is why the action to control the fingers to open or close also needs to be added to the overall y-axis. Also since there are two fingers in the scene, we use a for loop to update the displacements for both of them.</p>"},{"location":"tutorials/sling-shot/sling-shot/#run-simulation-for-the-current-timestep","title":"Run simulation for the current timestep","text":"<pre><code>def run_simulation(self):\n    self.solver.step_in_time(0, self.dt, self.step_count) # run simulation to the current time step, and the length of each timestep is self.dt\n    self.step_count += 1 # increment the step counter\n    self.t0 += self.dt # increment the starting time point for the next time step\n</code></pre> <p>To simulate the current timestep, we need to call <code>self.solver.step_in_time</code>, where the first argument of this function is the initial time of the simulation and the second argument is the time length for each time step and the third argument is the total time steps have been simulated now.</p>"},{"location":"tutorials/sling-shot/sling-shot/#get-the-position-of-each-object","title":"Get the position of each object","text":"<p>If you want to get the position information of each object in the simulation when you make interactions with the environment, you can get the positions of each mesh using this function.</p> <pre><code>def get_object_positions(self):\n    points, tets, _, body_ids, displacement = self.solver.get_sampled_solution()\n    self.id_to_position = {}\n    self.id_to_vertex = {}\n    for mesh_id, _ in self.id_to_mesh.items():\n        vertex_position = points + displacement\n        self.id_to_vertex[mesh_id] = vertex_position[body_ids[:,0]==mesh_id]\n        mean_cell_id = np.mean(body_ids[tets], axis=1).astype(np.int32).flat\n        tet_barycenter = np.mean(vertex_position[tets], axis=1)\n        self.id_to_position[mesh_id] = np.mean(tet_barycenter[mean_cell_id == mesh_id], axis=0)\n    return self.id_to_position\n</code></pre> <p>This function gets sample vertices for each mesh from the solver and these vertices are averaged to get a \u201ccentroid\u201d of the object to represent its position.</p>"},{"location":"tutorials/sling-shot/sling-shot/#step-function-exposed-to-the-user","title":"Step function exposed to the user","text":"<p><pre><code>def step(self, action: np.ndarray):\n    actions = {\n            # x, y, z gripper_displacement\n            \"0\": np.array([action[0],\n                            action[1],\n                            action[2],\n                           -1 * action[3]/2]),\n            \"1\": np.array([action[0],\n                            action[1],\n                            action[2],\n                           action[3]/2])\n        }\n    self.set_boundary_conditions(actions)\n    self.run_simulation()\n    return self.get_object_positions()\n</code></pre> The step function here takes the action from the user and simulates the timestep and returns the positions for each object to the user. Note that the action from the user is a <code>numpy</code> array containing the <code>x,y,z</code> movement of the two fingers and the displacement between the two fingers for the current timestep. Then the action needs to be transferred into a dictionary that <code>\"self.set_boundary_conditions\"</code> function would recognize for both of the fingers. At the same time, the two fingers\u2019 displacements are coupled so in the <code>actions</code> dictionary, the displacements need to be decoupled from both fingers and let them move in opposite directions.</p> <p>To view the implementation of the whole class, please go to slingshot.py.</p>"},{"location":"tutorials/sling-shot/sling-shot/#test-of-the-environment","title":"Test of the Environment","text":"<p>Here\u2019s a very simple test case: <pre><code>from slingshot.src.slingshot import SlingShot\nimport numpy as np\n\nenv = SlingShot()\nprint(\"Initialzied.\")\n# pull the rubber band\nfor i in range(3):\n    action = np.array([0.1,0,0,0])\n    env.step(action)\n\n# release it\naction = np.array([0,0,0,-0.1])\nenv.step(action)\n# let it fly\nfor i in range(20):\n    action = np.array([0,0,0,0])\n    env.step(action)\n</code></pre> You can create a test.py file for this, and run it in the project folder: <code>shell= python test.py</code> The result should be like the gifs at the beginning.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/","title":"Sphere Pushing A Box","text":"Author: Duo Zhang <p>In this tutorial, we will be focusing on how to make an environment using a sphere to push a box on a table from scratch. In this scenario, one single JSON file for PolyFEM is seemingly not enough to simulate a varying and interactive environment like this. Therefore we will be using <code>polyfempy</code>, the python bindings for PolyFEM, to enable a more functional and versatile development.</p> <p> </p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#prerequisites","title":"Prerequisites","text":""},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#install-the-python-bindings-of-polyfem","title":"Install the Python Bindings of PolyFEM","text":"<p>In this tutorial, we are assuming you have already installed polyfempy in your machine. If not, please follow the instructions here. Note that there is no need to install standalone PolyFEM. All the dependencies that polyfempy requires will be installed automatically including PolyFEM. Also please note that please install and compile polyfempy from source by doing <pre><code>python setup.py install\n</code></pre> instead of using the conda depolyment.</p> <p>After installation, please try to run  <pre><code>python -c \"import polyfempy as pf\"\n</code></pre> to test if <code>polyfempy</code> is installed successfully.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#other-dependencies","title":"Other Dependencies","text":"<p>Note that this tutorial is using a Conda virtual environment.</p> <p>To build this project, there are some other depencies we need. Note that meshio and igl are optional. They are only required if you want to render the scenes with python.</p> <ol> <li>numpy: <code>conda install numpy</code></li> <li>meshio (optional): <code>conda install -c conda-forge meshio</code></li> <li>python bindings of libigl (optional): <code>conda install -c conda-forge igl</code></li> </ol>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#data-preparation","title":"Data Preparation","text":"<p>The data needed in this tutorial can be found here. For triangle meshes, they are in surf_mesh folder and the volume meshes are in vol_mesh folder. The volume mesh files are all made using fTetWild. Feel free you make your own spheres and boxes.</p> <p>All the codes and JSON files can be found here.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#environment-with-volume-meshes","title":"Environment with Volume Meshes","text":""},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#json-environment-setup","title":"JSON Environment Setup","text":"<ol> <li> <p>The first step is to make a JSON file <code>push_box_all_vol_mesh.json</code> in the JSON folder for the initial setup with the sphere, cube, and the table in it. Let\u2019s load the objects! <pre><code>{\n\"geometry\": [{\n\"mesh\": \"pushbox/assets/data/vol_mesh/sphere.msh\",\n\"transformation\": {\n\"translation\": [-1.0, 0.2, 0],\n\"scale\": 0.1\n},\n\"volume_selection\": 1,\n\"surface_selection\": 1\n}, {\n\"mesh\": \"pushbox/assets/data/vol_mesh/cube.msh\",\n\"transformation\": {\n\"translation\": [0, -0.0051, 0],\n\"scale\": [4, 0.01, 4]\n},\n\"volume_selection\": 2,\n\"surface_selection\": 2,\n}, {\n\"mesh\": \"pushbox/assets/data/vol_mesh/cube.msh\",\n\"transformation\": {\n\"translation\": [-0.65, 0.2, 0],\n\"scale\": 0.4\n},\n\"volume_selection\": 3,\n\"surface_selection\": 3\n}]\n}\n</code></pre>     The first mesh is the sphere, and the third one is the cube. Here, the cube\u2019s mesh is re-scaled to act as the table. Feel free to use a 2D plane, or the mat mesh as the table in the GitHub repo.</p> </li> <li> <p>The second thing is to give proper material parameters to these objects.  <pre><code>{\n\"materials\": [{\n\"id\": 1,\n\"E\": 2e11,\n\"nu\": 0.3,\n\"rho\": 7750,\n\"type\": \"NeoHookean\"\n}, {\n\"id\": 2,\n\"E\": 2e11,\n\"nu\": 0.3,\n\"rho\": 7750,\n\"type\": \"NeoHookean\"\n}, {\n\"id\": 3,\n\"E\": 1e8,\n\"nu\": 0.48,\n\"rho\": 1500.0,\n\"type\": \"NeoHookean\"\n}],\n}\n</code></pre>     The material parameters go to their matching meshes with the same <code>\"volume_selection\"</code>s.</p> </li> <li> <p>For the boudary conditions, we can set it as: <pre><code>{\n\"boundary_conditions\": {\n\"rhs\": [0, 9.81, 0],\n\"dirichlet_boundary\": [{\n\"id\": 1,\n\"value\": [\"0\", \"0\", \"0\"]\n}, {\n\"id\": 2,\n\"value\": [0, 0, 0]\n}]\n}\n}\n</code></pre>     The first Dirichlet boundary condition with <code>\"id\":1</code> is set for the sphere. They are set to <code>[\"0\", \"0\", \"0\"]</code> just for initialization and the value of the boundary condition will be modified during the interaction.</p> <p>The second Dirichlet boundary condition is for the table since there\u2019s no need for the table to move. That\u2019s why it\u2019s set to <code>[0,0,0]</code>.</p> <p>Note that there\u2019s no Dirichlet boundary condition with <code>\"id\":3</code>, however, the <code>\"boundary_id\"</code> for the cube is set to 3. This is because we want the cube to be completely free in all three dimensions.</p> <p>In addition to the Dirichlet boundary conditions, the problem should also be time-dependent and the gravity should also be specified in the <code>\"rhs\"</code> argument (the gravity here is along the y-axis).</p> </li> </ol> <p>To view the whole JSON file, please go to pushbox_all_vol_mehses.json.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#python-environment-development","title":"Python Environment Development","text":"<p>In this section, we will develop a python environment to control the sphere to interact with the box. </p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#class-initialization","title":"Class Initialization","text":"<p>In the <code>src</code> folder, create a python file <code>pushbox.py</code>. In this file, let\u2019s first import necessary libraries and create a PushBox class with its <code>__init__</code> function:</p> <pre><code>import polyfempy as pf\nimport json\nimport numpy as np\n\nclass PushBox:\n    def __init__(self) -&gt; None:\n        self.asset_file = 'pushbox/assets/json/push_box_all_vol_mesh.json'\n        with open(self.asset_file,'r') as f:\n            self.config = json.load(f)\n        self.step_count = 1\n        self.solver = pf.Solver()\n        self.solver.set_log_level(3)\n        self.solver.set_settings(json.dumps(self.config))\n        self.solver.load_mesh_from_settings()\n        self.cumulative_action = np.zeros(3)\n        self.dt = self.config[\"time\"]['dt']\n        self.t0 = self.config[\"time\"][\"t0\"]\n        self.solver.init_timestepping(self.t0, self.dt)\n\n        self.id_to_mesh = {}\n        self.id_to_position = {}\n        self.id_to_vf = {}\n        for mesh in self.config[\"geometry\"]:\n            if (\"is_obstacle\" in mesh.keys()) and (mesh[\"is_obstacle\"]):\n                self.obstacle_ids.append(mesh[\"surface_selection\"])\n            else:\n                self.id_to_mesh[mesh[\"volume_selection\"]] = mesh[\"mesh\"]\n                self.id_to_position[mesh[\"volume_selection\"]] = mesh[\"transformation\"][\"translation\"]\n</code></pre> <p>In the <code>__init__</code> function, we load the environment configuration from the JSON file we just made, initialize a step counter and the polyfem solver. Here we set the <code>log_level</code> of PolyFEM to 3 which only displays the errors and warnings from PolyFEM. Feel free to change the log level to get more information or less based on docs for log_levels (More specifically,  <code>--log_level ENUM:value in {trace-&gt;0,debug-&gt;1,info-&gt;2,warning-&gt;3,error-&gt;4,critical-&gt;5,off-&gt;6} OR {0,1,2,3,4,5,6}</code>).</p> <p>One thing to mention is that <code>polyfempy</code> is always calculating the result for this time step based on the displacement from the initial position which is the position read from the JSON file. However, we only pay close attention to the action or movement we want to exert for this timestep, so <code>self.cumulative_action</code> would take care of previous displacements.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#take-the-action-from-the-user","title":"Take the action from the user","text":"<p>The solver is already initialized in the previous section, now we can design an interface for the users to pass new actions to the sphere from their side.</p> <pre><code>def set_boundary_conditions(self, action: np.ndarray): -&gt; None\n    t0 = self.t0 # starting time point for this timestep\n    t1 = t0 + self.dt # end time point for this timestep\n    self.solver.update_dirichlet_boundary(\n            int(1), # the dirichlet boundary condition with id=1\n            [\n                f\"{self.cumulative_action[0]} + ((t-{t0})*{action[0]})/({t1-t0})\",\n                f\"{self.cumulative_action[1]} + ((t-{t0})*{action[1]})/({t1-t0})\",\n                f\"{self.cumulative_action[2]} + ((t-{t0})*{action[2]})/({t1-t0})\"\n            ]\n        )\n        self.cumulative_action += action # accumulate the new action to displacement \n</code></pre> <p>This code block is to update the dirichlet boundary condition for the sphere in the next timestep. The current time is <code>t0</code>, and the current displacement is <code>self.cumulative_action</code>. Since the movement of the sphere needs to be continous and potential fatal penetration can happen if we just set the dirichlet boundary condition to <code>self.cumulative_action + action</code>. Image the action is large enough and greater than the edge length of the box while the sphere is on the left side of the box, then the sphere can teleport to the right side of the box without moving it. To avoid this kind of teleportation, we can interpolate the displacement from <code>self.cumulative_action</code> to <code>self.cumulative_action + action</code> for this timestep to make the movement of the sphere smooth and contiuous. The updated dirichlet boundary conditon in the above code block is the linear interplotion for the current timestep.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#run-simulation-for-the-current-timestep","title":"Run simulation for the current timestep","text":"<pre><code>def run_simulation(self):\n    self.solver.step_in_time(0, self.dt, self.step_count) # run simulation to the current time step, and the length of each timestep is self.dt\n    self.step_count += 1 # increment the step counter\n    self.t0 += self.dt # increment the starting time point for the next time step\n</code></pre> <p>To simulate the current timestep, we need to call <code>self.solver.step_in_time</code>, where the first argument of this function is the initial time of the simulation and the second argument is the time length for each time step and the third argument is the total time steps have been simulated now.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#get-the-position-of-each-object","title":"Get the position of each object","text":"<p>If you want to get the position information of each object in the simulation when you make interactions with the environment, you can get the positions of each mesh using this function.</p> <pre><code>def get_object_positions(self):\n    points, tets, _, body_ids, displacement = self.solver.get_sampled_solution()\n    self.id_to_position = {}\n    self.id_to_vertex = {}\n    for mesh_id, _ in self.id_to_mesh.items():\n        vertex_position = points + displacement\n        self.id_to_vertex[mesh_id] = vertex_position[body_ids[:,0]==mesh_id]\n        mean_cell_id = np.mean(body_ids[tets], axis=1).astype(np.int32).flat\n        tet_barycenter = np.mean(vertex_position[tets], axis=1)\n        self.id_to_position[mesh_id] = np.mean(tet_barycenter[mean_cell_id == mesh_id], axis=0)\n    return self.id_to_position\n</code></pre> <p>This function gets sample vertices for each mesh from the solver and these vertices are averaged to get a \u201ccentroid\u201d of the object to represent its position.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#step-function-exposed-to-the-user","title":"Step function exposed to the user","text":"<p><pre><code>def step(self, action: np.ndarray):\n    self.set_boundary_conditions(action)\n    self.run_simulation()\n    return self.get_object_positions()\n</code></pre> The step function here takes the action from the user and runs the simulation for this timestep and returns the positions for each object to the user.</p> <p>To view the implementation of the whole class, please go to pushbox.py.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#test-of-the-environment","title":"Test of the Environment","text":"<p>Here\u2019s a very simple but weird test case:</p> <pre><code>from pushbox.src.pushbox import PushBox\nimport numpy as np\n\nenv = PushBox()\n\n# push forward\nfor i in range(5):\n    action = np.array([0.1,0,0])\n    env.step(action)\n\n# go around the box\naction = np.array([-0.1,0,0])\nenv.step(action)\naction = np.array([0,0,0.3])\nenv.step(action)\naction = np.array([1.0,0,0])\nenv.step(action)\naction = np.array([0,0.3,0])\nenv.step(action)\naction = np.array([0,0,-0.6])\nenv.step(action)\naction = np.array([0,-0.4,0])\nenv.step(action)\naction = np.array([0,0,0.4])\nenv.step(action)\n</code></pre> <p>You can create a test.py file for this, and run it in the project folder:</p> <pre><code>python test.py\n</code></pre> <p>The result should be like the gifs at the beginning.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#environment-with-triangular-meshes","title":"Environment with Triangular Meshes","text":"<p>In the previous environment, all the meshes are volume meshes, so the sphere, box, and table are all deformable. The ability of deformation for all meshes is generally not good (if you want three of them to be deformable, then you can skip the rest of the tutorial) and takes a long time to simulate. Thus in this section, considering the table is only a support base and the sphere is only an actuator, the table and the sphere can be rigid. Then we can set them as obstacles (a special type of mesh whose displacement is fully prescribed and need not be volumetric).</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#json-environment-setup_1","title":"Json Environment Setup","text":"<p>Now the mesh part only needs to load the box and the sphere and the table can be loaded as obstacles:</p> <pre><code>{\n\"geometry\": [{\n\"mesh\": \"pushbox/assets/data/vol_mesh/cube.msh\",\n\"transformation\": {\n\"translation\": [-0.65, 0.2, 0],\n\"scale\": 0.4\n},\n\"volume_selection\": 3,\n\"surface_selection\": 3,\n\"advanced\": {\n\"normalize_mesh\": false\n}\n}, {\n\"mesh\": \"pushbox/assets/data/surf_mesh/sphere.obj\",\n\"is_obstacle\": true,\n\"enabled\": true,\n\"transformation\": {\n\"translation\": [-1.0, 0.2, 0],\n\"scale\": 0.1\n},\n\"surface_selection\": 1000\n}, {\n\"mesh\": \"pushbox/assets/data/surf_mesh/cube_dense.obj\",\n\"is_obstacle\": true,\n\"enabled\": true,\n\"transformation\": {\n\"translation\": [0, -0.0051, 0],\n\"scale\": [4, 0.01, 4]\n},\n\"surface_selection\": 1001\n}]\n}\n</code></pre> <p>Note that the obstacles have no boundary conditions or material parameters (since they are already rigid) but only displacements. Also, there\u2019s no need for Dirichlet boundary conditions anymore since the sphere is controlled by its displacement field.</p> <p>The json file can be found at pushbox.json.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#python-environment-development_1","title":"Python Environment Development","text":""},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#class-initialization_1","title":"Class Initialization","text":"<p>In the <code>src</code> folder, create a python file <code>pushbox_with_obstacles.py</code>. The <code>__init__</code> function stays the same except for the JSON file path.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#take-the-action-from-the-user_1","title":"Take the action from the user","text":"<pre><code>def set_boundary_conditions(self, action):\n    t0 = self.t0\n    t1 = t0 + self.dt\n    self.solver.update_obstacle_displacement(\n            int(0),\n            [\n                f\"{self.cumulative_action[0]} + ((t-{t0})*{action[0]})/({t1-t0})\",\n                f\"{self.cumulative_action[1]} + ((t-{t0})*{action[1]})/({t1-t0})\",\n                f\"{self.cumulative_action[2]} + ((t-{t0})*{action[2]})/({t1-t0})\"\n            ]\n        )\n    self.cumulative_action += action  \n</code></pre> <p>Note that the obstacles have no ID fields, thus we can\u2019t update its displacement with its id but the order of the obstacles in the JSON file. The index starts from 0. The rest part remains the same. </p> <p>To view the whole implementation of the environment with obstacles, please go to pushbox_with_obstacles.py.</p>"},{"location":"tutorials/sphere-pushing-box/sphere-pushing-box/#test-of-the-environment_1","title":"Test of the Environment","text":"<p>The test script remains the same except for the first import. Make sure to import <code>PushBox</code> from the correct file.</p> <pre><code>from pushbox.src.pushbox_with_obstacles import PushBox\n</code></pre> <p>The entire script can be viewed in test_with_obs.py.</p> <p>This is the end of the tutorial. Enjoy!</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/","title":"Trajectory Optimization","text":"Author: Zizhou Huang, Date: Feb. 19, 2024 <p>In this tutorial, we will demonstrate how to use polyfem to optimize the initial velocity of throwing a ball to match a given trajectory.</p> <p> </p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#prerequisites","title":"Prerequisites","text":"<p>The following items are necessary to complete this tutorial. To reproduce the experiment, you can feel free to use either the given mesh files or your own mesh.</p> <ul> <li> Build PolyFEM</li> <li> Download File: square.obj</li> <li> Download File: circle.msh</li> <li> Download File: barycenter-opt.json</li> <li> Download File: barycenter.json</li> <li> Download File: barycenter-target.json</li> </ul> <p>The files can also be found at polyfem-data.</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#build-polyfem","title":"Build PolyFEM","text":"<p>The instructions for building PolyFEM can be found here.</p> <p>Then you can use it by</p> <pre><code>polyfem --help\n</code></pre>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#setting-up-the-optimization","title":"Setting up the Optimization","text":"<p>We will setup the optimization using PolyFEM\u2019s JSON interface. For more details, please refer to the JSON Input documentation.</p> <p>We will only go over the JSON script for the optimization configuration, please refer to other tutorials for the JSON script for the simulation configuration.</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#parameters","title":"Parameters","text":"<pre><code>{\n\"parameters\": [\n{\n\"number\": 2,\n\"initial\": [4, 0]\n}\n]\n}\n</code></pre> <p>In <code>parameters</code>, we specify the dimension and initial guess of the variable to be optimized. Since we are going to optimize the initial velocity of a ball in 2D, the dimension is 2.</p> <p>In more complex optimizations, where several types of parameters are optimized, the <code>parameters</code> can be a list of variables of different dimensions.</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#states","title":"States","text":"<pre><code>{\n\"states\": [\n{\n\"path\": \"barycenter.json\"\n},\n{\n\"path\": \"barycenter-target.json\"\n}\n]\n}\n</code></pre> <p>In <code>states</code>, we specify the path to the JSON files of simulations, they follow the same rules for the simulation JSON scripts. PolyFEM will create a number of simulators, one for each JSON file, whose parameters can be optimized. During the optimization, certain parameters in these configurations are optimized, but the optimized values will not overwrite the values in these JSON files. Each simulator gets an ID starting from 0, following the order in this list. The ID of simulators may be used in <code>variable to simulation</code> and <code>functionals</code>.</p> <p>Here we have two simulators: The first one is the simulator being optimized, while the second one is a fixed simulation that generates a reference trajectory. These JSON files are only for initializing the simulators, so one can use the same path for multiple simulators if possible.</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#variable-to-simulation","title":"Variable to Simulation","text":"<pre><code>{\n\"variable_to_simulation\": [\n{\n\"type\": \"initial\",\n\"state\": 0,\n\"composition\": [{\n\"type\": \"append-values\",\n\"values\": [0, 0]\n},{\n\"type\": \"per-body-to-per-node\",\n\"state\": 0\n},{\n\"type\": \"append-const\",\n\"value\": 0,\n\"size\": 146,\n\"start\": 0\n}]\n}\n]\n}\n</code></pre> <p>In <code>variable to simulation</code>, we specify how the optimization variables in <code>parameters</code> control the simulation configurations. Since different types of parameters in a number of simulations can be controlled at the same time, the <code>variable to simulation</code> is a list, where each entry specifies the control of one type of parameter, e.g. initial condition, in one simulation. The <code>type</code> specifies the type of parameter in the simulation, and <code>state</code> points to the ID of the simulation (according to the order in <code>states</code>). </p> <p>The initial condition parameter has a dimension of <code>2 * dim * n_basis</code>, where <code>dim</code> is the dimension of the simulation (2 or 3), <code>n_basis</code> is the number of finite element basis in the simulation, because it consists of the initial displacement and velocity at every basis node. This allows the user to specify the initial condition not only as a rigid body transformation, but also as an arbitrary deformation, e.g. stretching and shearing.</p> <p>In this tutorial, we only optimize the initial velocity of the ball, so we need to build a mapping, which we call <code>composition</code> in the JSON script, from the variable of size 2 to the full initial condition parameter of size <code>2 * dim * n_basis</code>. The <code>composition</code> is a list of some pre-defined mappings, which will apply to the optimization variables in order, and the final output of the mappings will be assigned to the initial condition parameter.</p> <p>There are two objects with different volume IDs, specified in <code>barycenter.json</code> and <code>barycenter-target.json</code>, and we only want to control the initial velocity of the ball, with volume ID 1. First, in <code>append-values</code> we append two zeros to the optimization variable, which represents the zero initial velocity of the floor. Second, in <code>per-body-to-per-node</code> we map the per-volume values to per-node, whose output has the dimension of <code>dim * n_basis</code>. Finally, in <code>append-const</code> we append more zeros to the start of the vector, to account for the zero initial displacement. Please refer to the opt-input-spec.json for the documentation of compositions.</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#functionals","title":"Functionals","text":"<pre><code>{\n\"functionals\": [\n{\n\"type\": \"transient_integral\",\n\"state\": 0,\n\"integral_type\": \"uniform\",\n\"static_objective\": {\n\"type\": \"center-target\",\n\"state\": 0,\n\"target_state\": 1,\n\"volume_selection\": [1]\n}\n}\n]\n}\n</code></pre> <p>The <code>functionals</code> specify the objective being minimized in the optimization. Please refer to objective-input-spec.json for the documentation of <code>functionals</code>.</p> <p>Here we perform trajectory optimization on the ball, so the objective is the \\(L^2\\) difference between the two ball barycenters in the two simulations, integrated over time.</p> <pre><code>{\n\"type\": \"center-target\",\n\"state\": 0,\n\"target_state\": 1,\n\"volume_selection\": [1]\n}\n</code></pre> <p>The <code>center-target</code> computes the \\(L^2\\) difference between the solutions in <code>state</code> and <code>target_state</code>, integrated over the space with <code>volume selection</code> ID 1. We assume that both simulators have the same number of basis and dimension on the same volume selection (number of basis on other volume selections can be different).</p> <pre><code>{\n\"type\": \"transient_integral\",\n\"state\": 0,\n\"integral_type\": \"uniform\",\n\"static_objective\": { ... }\n}\n</code></pre> <p>The <code>transient integral</code> computes the integral over time of the <code>static objective</code>. The <code>integral type</code> and <code>state</code> specify the quadrature scheme and the simulator (the objective gets information like the number of time steps and dt from the simulator).</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#output","title":"Output","text":"<pre><code>\"output\": {\n\"log\": {\n\"level\": 1\n}\n}\n</code></pre> <p>The <code>output</code> contains options regarding the logging of the optimization, here <code>output/log/level</code> specifies a log level of 1, corresponding to <code>debugging</code>, to log the energy and gradient during the optimization. The log level for simulations are specified in each state json, normally the simulation log level is set to <code>info</code> or <code>warn</code> so that we can focus more on the optimization logs.</p>"},{"location":"tutorials/trajectory-optimization/trajectory-optimization/#solver","title":"Solver","text":"<pre><code>    \"solver\": {\n\"nonlinear\": {\n\"history_size\": 2,\n\"grad_norm\": 1e-4\n}\n}\n</code></pre> <p>The <code>solver</code> contains options of the nonlinear solver for the optimization. Since our forward problem and inverse problem share the same nonlinear solver code, the options of the inverse problem are the same as in the forward problem. However, since we can\u2019t compute the second order derivatives of the inverse problem, the Newton\u2019s method is not available here. By default the solver is L-BFGS, a quasi-Newton method using a limited amount of memory.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/","title":"Generate Vision Proprioception Data for Deformable Objects","text":"Author: Hanwen Zhao <p>In this tutorial, we will demonstrate how PolyFEM can be used to generate vision proprioception data for soft robotics study. The GitHub repo of this tutorial can be found here.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#prerequisites","title":"Prerequisites","text":"<p>The following, items are necessary to complete this tutorial. To replicate the experiment, readers can use either the given mesh files or their own mesh files.</p> <p>In this tutorial, we assume that readers already have PolyFEM installed. If not, the PolyFEM install instruction can be found here. </p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#meshes","title":"Meshes","text":"<p>To decrease the computing complexity of this tutorial example, we assume that the target item is the only deformable solid and the environment is rigid and immovable.</p> Target Object Mesh (Radius: 0.5) Environment Mesh (Radius: 5.0)"},{"location":"tutorials/vision-proprioception/vision-proprioception/#problem-formulation","title":"Problem Formulation","text":"<p>This tutorial\u2019s objective is to launch a deformable target object into an environment mesh (i.e. a sphere rolling in a bowl) and gather the corresponding vision-based proprioceptive data (the internal view that shows deformation). Such data can be utilized to investigate the relationship between vision-based proprioception and kinematics of deformable objects.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#json-interface","title":"JSON Interface","text":"<p>PolyFEM provides an interface through JSON and Python. Here we demonstrate the JSON interface setup first. For more details, please refer to the JSON API.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#setup-similation","title":"Setup Similation","text":"<p>In this section, we will go over the JSON script that defines the simulation section by section. The complete JSON file can be found here.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#geometry","title":"Geometry","text":"<p>The <code>\"geometry\"</code> section specifies all geometry data required for simulation. For example, <code>\"mesh\"</code> defines the path to the volumetric mesh file. Then, the term <code>\"transformation\"</code> defines the operations that will be applied to the current mesh file. Next, volume selection specifies the mesh\u2019s identifier, allowing other parameters to be applied to specific meshes based on volume selection.</p> <p>Furthermore, <code>is obstacle</code> permits the definition of a mesh as part of the environment. Obstacles are fully prescribed objects and as such, only their surface needs to be specified.</p> <pre><code>\"geometry\": [{\n\"mesh\": \"../data/sphere.msh\",\n\"transformation\": {\n\"translation\": [-0.4, 0.18, 0],\n\"scale\": 0.1\n},\n\"volume_selection\": 1\n}, {\n\"mesh\": \"../data/scene_bowl.msh\",\n\"is_obstacle\": true,\n\"enabled\": true,\n\"transformation\": {\n\"translation\": [0, 0, 0],\n\"scale\": 0.01\n}\n}]\n</code></pre>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#mesh-related-configuration","title":"Mesh Related Configuration","text":"<p>In the previous section, we defined the simulation-required <code>geometry</code>. Following that, we must define their material properties and initial conditions. In the <code>\"initial_conditions\"</code> section, we assign the mesh with volume selection value <code>1</code> and an initial velocity of <code>[2, 0, 2]</code>. Next, in the <code>materials</code> section, we use <code>NeoHookean</code> for non-linear elasticity and define Young\u2019s modulus <code>E</code>, Poisson\u2019s ratio <code>nu</code>, and density <code>rho</code>.</p> <p>Next, we define time step size as <code>dt</code> and time steps as the number of steps. <code>enable</code> in the <code>contact</code> determines whether collision detection and friction calculation are considered. And <code>boundary conditions</code> permit us to add gravity to the simulation with ease.</p> <pre><code>{\n\"initial_conditions\": {\n\"velocity\": [\n{\n\"id\": 1,\n\"value\": [2, 0, 2]\n}\n]\n},\n\"materials\": [\n{\n\"id\": 1,\n\"E\": 5000.0,\n\"nu\": 0.3,\n\"rho\": 100,\n\"type\": \"NeoHookean\"\n}\n],\n\"time\": {\n\"t0\": 0,\n\"dt\": 0.1,\n\"time_steps\": 100\n},\n\"contact\": {\n\"enabled\": true,\n\"dhat\": 0.0001,\n\"epsv\": 0.004,\n\"friction_coefficient\": 0.3\n},\n\"boundary_conditions\": {\n\"rhs\": [0, 9.81, 0]\n}\n}\n</code></pre>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#simulation-related-configuration","title":"Simulation Related Configuration","text":"<pre><code>{\n\"solver\": {\n\"linear\": {\n\"solver\": \"Eigen::CholmodSupernodalLLT\"\n},\n\"nonlinear\": {\n\"line_search\": {\n\"method\": \"backtracking\"\n},\n\"grad_norm\": 0.001,\n\"use_grad_norm\": false\n},\n\"contact\": {\n\"friction_iterations\": 20,\n\"CCD\": {\n\"broad_phase\": \"STQ\"\n}\n}\n},\n\"output\": {\n\"json\": \"results.json\",\n\"paraview\": {\n\"file_name\": \"output.pvd\",\n\"options\": {\n\"material\": true,\n\"body_ids\": true\n},\n\"vismesh_rel_area\": 10000000\n},\n\"advanced\": {\n\"save_solve_sequence_debug\": false,\n\"save_time_sequence\": true\n}\n}\n}\n</code></pre>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#run-simulation","title":"Run Simulation","text":"<p>To run the simulation, the following command can be used where <code>polyfem</code> should be replaced with <code>.../polyfem/build/PolyFEM_bin</code>.</p> <pre><code>cd PolyFEM_Tutorial_SoRo\nmkdir output\npolyfem --json json/scene_bowl.json --output_dir output\n</code></pre> <p>The simulation results will be output as a VTU file or a sequence of VTU files and a PVD file for the time sequence.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#python-interface","title":"Python Interface","text":"<p>In addition, to the JSON files, PolyFEM also supports a Python interface through polyfem-python. More information can be found in the Python Documentation. Python interface not only allows to read configuration from JSON directly but also allows user to have more control during the simulation (eg. simulation stepping or change boundary conditions).</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#import-from-json","title":"Import from JSON","text":"<p>If the JSON file is available, we can simply import the configuration by reading the JSON file.</p> <pre><code>import polyfem as pf\n\nwith open('./scene_bowl.json') as f:\n    config = json.load(f)\nsolver = pf.Solver()\nsolver.set_settings(json.dumps(config))\nsolver.load_mesh_from_settings()\n</code></pre>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#run-simulation-in-python","title":"Run Simulation in Python","text":"<p>Python interface provides a more flexible solution to simulate solving the time-dependent problem completely or interacting with the solver with steps.</p> <pre><code># OPTION 1: solve the problem and extract the solution\nsolver.solve()\npts, tris, velocity = solver.get_sampled_solution()\n</code></pre> <pre><code># OPTION 2: solve the problem with time steping\nsolver.init_timestepping(t0, dt)\nfor i in range(timesteps):\n    solver.step_in_time(t, dt, i)\n    # interact with intermediate result\n</code></pre>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#visualize-simulation-results","title":"Visualize Simulation Results","text":"<p>To visualize the simulation sequential results in <code>VTU</code> format, we can use <code>ParaView</code>, an open-source, multi-platform data analysis and visualization application.</p> <p>To view the results, please follow the instructions below. ![]paraview.png) * Step 1: <code>File</code> - <code>Open</code>, select sequence group file step.vtu or step.vtm. * Step 2: Click <code>Apply</code> under the tab <code>Properties</code> located on the left side of the GUI. * Step 3: Click on <code>Wrap By Vector</code> to apply the displacement to the objects. This function can be found in the top menu bar. * Step 4: Click again <code>Apply</code> under the tab <code>Properties</code>. * Step 5: Now, the <code>Play</code> button can be used to view the time sequence results.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#bouns-blender-rendering","title":"Bouns: Blender Rendering","text":"<p>Blender is a free and open-source 3D computer graphics software toolset that can be used for animation, rendering, and video games. Here, we are using Blender to create vision propriocetions (internal views). First, we need to convert the VTU outputs back to mesh files that represent the target object at each time step. Then, we can colorize the target object using vertex coloring and render the final image with the Blender camera instance.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#convert-vtu-to-obj","title":"Convert VTU to OBJ","text":"<p>To convert VTU to OBJ format, we can use the MeshIO library that is available in Python. A minimum example is shown below.</p> <pre><code>import meshio\nm = meshio.read('step.vtu')\nm.write('step.obj')\n</code></pre>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#colorize-the-obj-files","title":"Colorize the OBJ Files","text":"<p>There are many different ways to colorize a mesh object. For example, coloring through mesh vertices, mesh faces, or a UV map. Here we demonstrate a simple way, which is to color the mesh using its vertices. The OBJ extension format support RGB floating values append to the vertex coordinates.</p>"},{"location":"tutorials/vision-proprioception/vision-proprioception/#blender-rendering-using-python","title":"Blender Rendering using Python","text":"<p>In the example below, the Python script controls the rendering process. First, it loads colorized mesh files and adds light and camera to the pre-calculated position and orientation (based on the vertice coordinates and surface normal). It then renders the image using vertex color.</p> <p>In this example, the camera is attched to one of the triangle in the surface mesh <code>OBJ</code>. And the camera is pointing at the center of the sphere, the rendering results are shown below.</p> <p> </p> <p><code>blender_render.py</code>: <pre><code>import os, sys\nimport math\nimport bpy\n\nos.chdir(sys.path[0])\n\nargv_offset = 0\n\n# IMPORT MESH\nmesh = bpy.ops.import_mesh.ply(filepath=sys.argv[6+argv_offset])\nmesh = bpy.context.active_object\nbpy.ops.object.mode_set(mode = 'VERTEX_PAINT')\n\n# ADD LIGHT\nlight_data = bpy.data.lights.new('light', type='POINT')\nlight = bpy.data.objects.new('light', light_data)\nlight.location = [float(sys.argv[8+argv_offset]), float(sys.argv[9+argv_offset]), float(sys.argv[10+argv_offset])]\nbpy.context.collection.objects.link(light)\n\n# ADD CAMERA\ncam_data = bpy.data.cameras.new('camera')\ncam = bpy.data.objects.new('camera', cam_data)\ncam.location = [float(sys.argv[8+argv_offset]), float(sys.argv[9+argv_offset]), float(sys.argv[10+argv_offset])]\ncam.rotation_euler = [float(sys.argv[11+argv_offset]), float(sys.argv[12+argv_offset]), float(sys.argv[13+argv_offset])]\ncam.data.lens = 14\nbpy.context.collection.objects.link(cam)\n\n# ADD MATERIAL\nmat = bpy.data.materials.new(name='Material')\nmat.use_nodes=True\n# create two shortcuts for the nodes we need to connect\n# Principled BSDF\nps = mat.node_tree.nodes.get('Principled BSDF')\n# Vertex Color\nvc = mat.node_tree.nodes.new(\"ShaderNodeVertexColor\")\nvc.location = (-300, 200)\nvc.label = 'vc'\n# connect the nodes\nmat.node_tree.links.new(vc.outputs[0], ps.inputs[0])\n# apply the material\nmesh.data.materials.append(mat)\n\n# CREATE A SCENE\nscene = bpy.context.scene\nscene.camera = cam\nscene.render.image_settings.file_format = 'PNG'\nscene.render.resolution_x = 512\nscene.render.resolution_y = 512\nscene.render.resolution_percentage = 100\nscene.render.filepath = sys.argv[7+argv_offset]\n\n# RENDER\nbpy.ops.render.render(write_still=1)\n</code></pre></p> <p>The rendering can be processed through Blender GUI or bash command as shown below.</p> <pre><code>blender blender_project.blend -b --python blender_render.py -- target_mesh_path output_path camera_position_x camera_position_y camera_position_z camera_orientation_x camera_orientation_y camera_orientation_z\n</code></pre>"}]}